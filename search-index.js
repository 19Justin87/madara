var searchIndex = JSON.parse('{\
"madara":{"doc":"Madara node command line.","t":"AAAAAAFAAADLLLLLMFLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGDLLLFLLLLLFLMLLLLLLLLMFLLLLLLLLLLLFFFLLLLLLFLLLLLLLLLLLLLNNNNDNNDNNNNNNENEENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFRRRRRDMLLMLLLMFLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDNCNLLLLLLLLLLMLLMFMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLMMLLLLLLLLLLLLLLGGGDGGGDLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLFFFLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLMGF","n":["benchmarking","chain_spec","cli","command","constants","genesis_block","main","rpc","service","starknet","RemarkBuilder","as_any","as_any_mut","borrow","borrow_mut","build","client","create_benchmark_extrinsic","deref","deref_mut","drop","extrinsic","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_subset","inherent_benchmark_data","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","is_in_subset","new","pallet","rewrite","rewrite","rewrite","rewrite","rewrite","to_subset","to_subset_unchecked","try_from","try_into","type_id","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","upcast","upcast_mut","vzip","ChainSpec","DevChainSpec","DevGenesisExt","as_any","as_any_mut","assimilate_storage","authority_keys_from_seed","borrow","borrow_mut","deref","deref_mut","deserialize","development_config","drop","enable_manual_seal","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_subset","genesis_config","get_from_seed","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","is_in_subset","load_genesis","local_testnet_config","print_development_accounts","rewrite","rewrite","rewrite","rewrite","rewrite","serialize","testnet_genesis","to_subset","to_subset_unchecked","try_from","try_into","type_id","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","upcast","upcast_mut","vzip","Benchmark","BuildSpec","ChainInfo","CheckBlock","Cli","ExportBlocks","ExportState","ExtendedRunCmd","ImportBlocks","Instant","Key","Manual","PurgeChain","Revert","Sealing","Sharingan","Subcommand","Testnet","TryRuntime","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","author","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_spec_url","clone","clone","clone_into","clone_into","command","command_for_update","copyright_start_year","da_layer","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","genesis_url","group_id","group_id","has_subcommand","impl_name","impl_version","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","load_spec","madara_path","native_runtime_version","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","run","run_cmd","sealing","subcommand","support_url","testnet","to_owned","to_owned","to_possible_value","to_possible_value","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","value_variants","value_variants","vzip","vzip","vzip","vzip","vzip","run","CAIRO_CONTRACTS_FILES","CAIRO_CONTRACTS_URL","GENESIS_ASSETS_FILES","GENESIS_ASSETS_URL","SHARINGAN_CHAIN_SPEC_URL","MadaraGenesisBlockBuilder","_phantom","as_any","as_any_mut","backend","borrow","borrow_mut","build_genesis_block","commit_genesis_state","construct_genesis_block","deref","deref_mut","drop","executor","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_subset","genesis_storage","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","is_in_subset","new","rewrite","rewrite","rewrite","rewrite","rewrite","to_subset","to_subset_unchecked","try_from","try_into","type_id","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","upcast","upcast_mut","vzip","DenyUnsafe","FullDeps","No","StarknetDeps","Yes","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","check_if_safe","client","clone","clone_into","command_sink","create_full","deny_unsafe","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","graph","init","init","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_in_subset","is_in_subset","pool","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","starknet","starknet","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast_mut","upcast_mut","vzip","vzip","StarknetDeps","__clone_box","as_any","as_any_mut","borrow","borrow_mut","client","clone","clone_into","deref","deref_mut","drop","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_subset","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","is_in_subset","madara_backend","overrides","rewrite","rewrite","rewrite","rewrite","rewrite","starting_block","sync_service","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","upcast","upcast_mut","vzip","BasicImportQueue","BoxBlockImport","ChainOpsResult","ExecutorDispatch","FullBackend","FullClient","FullSelectChain","NativeElseWasmExecutor","__clone_box","allow_missing_host_functions","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","build_aura_grandpa_import_queue","build_manual_seal_import_queue","call","clone","clone_into","deref","deref","deref_mut","deref_mut","dispatch","drop","drop","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_in_subset","is_in_subset","native_version","native_version","native_version","new","new_chain_ops","new_full","new_partial","new_with_wasm_executor","read_runtime_version","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","run_manual_seal_authorship","runtime_version","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast_mut","upcast_mut","vzip","vzip","wasm","MadaraBackend","db_config_dir"],"q":[[0,"madara"],[10,"madara::benchmarking"],[62,"madara::chain_spec"],[121,"madara::cli"],[419,"madara::command"],[420,"madara::constants"],[425,"madara::genesis_block"],[478,"madara::rpc"],[585,"madara::rpc::starknet"],[639,"madara::service"],[756,"madara::starknet"]],"d":["Setup code for <code>super::command</code> which would otherwise bloat …","","","","","","","A collection of node-specific RPC methods. Substrate …","Service and ServiceFactory implementation. Specialized …","","Generates extrinsics for the <code>benchmark overhead</code> command.","","","","","","","Create a transaction using the given <code>call</code>.","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Generates inherent data for the <code>benchmark overhead</code> command.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Creates a new <code>Self</code> from the given client.","","","","","","","","","","","","","","","","","","","","Specialized <code>ChainSpec</code>. This is a specialization of the …","Specialized <code>ChainSpec</code> for development.","Extension for the dev genesis config to support a custom …","","","","Generate an Aura authority key.","","","","","","","","The flag that if enable manual-seal mode.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Genesis config.","Generate a crypto pair from seed.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Configure initial storage state for FRAME modules.","","","","","","","","","","","","","","Sub-commands concerned with benchmarking.","Build a chain specification.","Db meta columns information.","Validate blocks.","","Export blocks.","Export the state of a given block into a chain spec.","","Import blocks.","","Key management cli utilities","","Remove the whole chain.","Revert the chain to a previous state.","Available Sealing methods.","","","Available testnets.","Try some command against runtime state. Note: <code>try-runtime</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Choose sealing method.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse and run command line arguments","","","","","","Custom genesis block builder for Madara.","","","","","","","","","Construct genesis block.","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Constructs a new instance of <code>MadaraGenesisBlockBuilder</code>.","","","","","","","","","","","","","","","","","","","Signifies whether a potentially unsafe RPC should be …","Full client dependencies.","Allows calling every RPCs.","","Denies only potentially unsafe RPCs.","","","","","","","","","","Returns <code>Ok(())</code> if the RPCs considered unsafe are safe to …","The client instance to use.","","","Manual seal command sink","Instantiate all full RPC extensions.","Whether to deny unsafe calls","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Extrinsic pool graph instance.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Transaction pool instance.","","","","","","","","","","","","Starknet dependencies","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extra dependencies for Starknet compatibility.","","","","","","The client instance to use.","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Madara Backend.","Starknet data access overrides.","","","","","","The starting block for the syncing.","The Substrate client sync service.","","","","","","","","","","","","","","","","","","","","","","A generic <code>CodeExecutor</code> implementation that uses a delegate …","","Ignore missing function imports if set true.","","","","","","","","","Build the import queue for the template runtime (aura + …","Build the import queue for the template runtime (manual …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Create new instance.","","Builds a new service for a full client.","","Create a new instance using the given <code>WasmExecutor</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the path to the database of the node."],"i":[0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,26,26,26,0,26,26,26,26,26,0,26,26,26,26,26,26,26,26,26,26,26,0,26,26,26,26,26,26,26,26,26,26,26,0,0,0,26,26,26,26,26,26,0,26,26,26,26,26,26,26,26,26,26,26,26,26,46,46,46,46,0,46,46,0,46,39,46,39,46,46,0,40,0,0,46,39,40,39,40,44,45,46,39,40,44,45,46,44,45,44,45,46,46,44,39,40,44,45,46,39,40,44,45,46,45,39,40,39,40,44,44,44,45,39,39,40,44,45,46,39,40,44,45,46,44,39,40,44,45,46,40,39,40,44,45,46,39,40,44,45,46,44,45,46,44,45,46,39,39,39,40,40,40,44,44,44,45,45,45,46,46,46,39,39,39,40,40,40,44,44,44,45,45,45,46,46,46,39,40,44,45,46,45,44,45,46,44,44,39,40,44,45,46,39,40,44,45,46,39,39,40,40,44,44,45,45,46,46,39,39,40,40,44,44,45,45,46,46,39,39,40,40,44,44,45,45,46,46,39,40,44,45,46,39,40,44,45,46,39,40,44,45,46,44,45,44,39,39,39,39,39,40,40,40,40,40,44,44,44,44,44,45,45,45,45,45,46,46,46,46,46,44,45,44,44,44,45,39,40,39,40,39,40,44,45,46,39,40,44,45,46,39,40,44,45,46,39,40,44,45,46,39,40,44,45,46,39,40,44,45,46,39,39,40,40,44,44,45,45,46,46,39,39,40,40,44,44,45,45,46,46,39,40,44,45,46,39,40,44,45,46,44,45,46,44,45,46,39,40,39,40,44,45,46,0,0,0,0,0,0,0,56,56,56,56,56,56,56,56,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,60,0,60,60,60,70,60,70,60,70,60,70,60,70,60,60,70,0,70,60,70,60,70,60,70,60,60,70,60,60,60,70,70,70,60,60,60,70,70,70,60,70,70,60,70,60,70,60,60,70,70,60,60,70,70,60,60,70,70,60,70,60,70,60,70,70,60,60,60,60,60,70,70,70,70,70,0,70,60,60,70,60,70,60,70,60,70,60,70,60,70,60,60,70,70,60,60,70,70,60,70,60,70,60,70,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,0,0,0,0,0,0,0,11,11,10,11,10,11,10,11,10,11,0,0,11,11,11,10,11,10,11,10,10,11,10,11,10,10,10,11,11,11,10,10,10,11,11,11,10,11,10,11,10,11,10,10,11,11,10,10,11,11,10,10,11,11,10,11,10,11,10,11,10,11,11,11,0,0,0,11,11,10,10,10,10,10,11,11,11,11,11,0,11,11,10,11,10,11,10,11,10,11,10,11,10,11,10,10,11,11,10,10,11,11,10,11,10,11,10,11,11,0,0],"f":[0,0,0,0,0,0,[[],1],0,0,0,0,[[],2],[[],2],[[]],[[]],[[3,4],[[7,[5,6]]]],0,[[[12,[8,9,[11,[10]]]],13,14,4],15],[16],[16],[16],[3,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[1,[17]]]],[[],16],[[]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[]],[[]],[[],22],[[[20,[[12,[8,9,[11,[10]]]]]]],3],[3,6],[[],7],[23,[[7,[23]]]],[7,[[7,[7]]]],[[[19,[18]]],[[7,[[19,[18]]]]]],[[[24,[18]]],[[7,[[24,[18]]]]]],[[],23],[[]],[[],7],[[],7],[[],25],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],2],[[],2],[[26,27],[[7,[28]]]],[6],[[]],[[]],[16],[16],[29,[[7,[26]]]],[[[23,[22]],30],[[7,[[31,[26]],28]]]],[16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[6],[[],16],[[]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[]],[[]],[[],22],[30,32],[30,[[7,[[31,[33]],28]]]],[32],[[],7],[23,[[7,[23]]]],[7,[[7,[7]]]],[[[19,[18]]],[[7,[[19,[18]]]]]],[[[24,[18]]],[[7,[[24,[18]]]]]],[[26,34],7],[[32,[36,[35]],24,22],33],[[],23],[[]],[[],7],[[],7],[[],25],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[37],[37],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[38,38],[38,38],[38,38],[38,38],[38,38],[38,38],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[39,39],[40,40],[[]],[[]],[[],38],[[],38],[[],41],0,[[],39],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[[],28],[16],[16],[16],[16],[16],[[40,40],22],[[39,42],43],[[40,42],43],[[44,42],43],[[45,42],43],[[46,42],43],[[]],[[]],[[]],[[]],[[]],[47,[[7,[44,48]]]],[47,[[7,[45,48]]]],[47,[[7,[46,48]]]],[47,[[7,[44,48]]]],[47,[[7,[45,48]]]],[47,[[7,[46,48]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[23,[49]]]],[[],[[23,[49]]]],[6,22],[[],28],[[],28],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[44,6],[[7,[[19,[50]],28]]]],0,[[[19,[50]]],51],[7,[[7,[7]]]],[23,[[7,[23]]]],[[[19,[18]]],[[7,[[19,[18]]]]]],[[[24,[18]]],[[7,[[24,[18]]]]]],[[],7],[[],7],[[[24,[18]]],[[7,[[24,[18]]]]]],[[[19,[18]]],[[7,[[19,[18]]]]]],[23,[[7,[23]]]],[7,[[7,[7]]]],[7,[[7,[7]]]],[23,[[7,[23]]]],[[[19,[18]]],[[7,[[19,[18]]]]]],[[[24,[18]]],[[7,[[24,[18]]]]]],[[],7],[[],7],[7,[[7,[7]]]],[[[24,[18]]],[[7,[[24,[18]]]]]],[23,[[7,[23]]]],[[[19,[18]]],[[7,[[19,[18]]]]]],[[[24,[18]]],[[7,[[24,[18]]]]]],[[],7],[23,[[7,[23]]]],[7,[[7,[7]]]],[[[19,[18]]],[[7,[[19,[18]]]]]],0,0,0,0,[[],28],0,[[]],[[]],[39,[[23,[52]]]],[40,[[23,[52]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],25],[[],25],[[],25],[[],25],[[],25],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[44,47],[[7,[48]]]],[[45,47],[[7,[48]]]],[[46,47],[[7,[48]]]],[[44,47],[[7,[48]]]],[[45,47],[[7,[48]]]],[[46,47],[[7,[48]]]],[[],[[36,[39]]]],[[],[[36,[40]]]],[[]],[[]],[[]],[[]],[[]],[[],1],0,0,0,0,0,0,0,[[],2],[[],2],0,[[]],[[]],[[[56,[53,[54,[53]],55]]],57],0,[58,53],[16],[16],[16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],16],[[]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[]],[[]],[[],22],[[59,22,[20,[[54,[53]]]],55],[[57,[[56,[53,[54,[53]],55]]]]]],[7,[[7,[7]]]],[[],7],[[[24,[18]]],[[7,[[24,[18]]]]]],[[[19,[18]]],[[7,[[19,[18]]]]]],[23,[[7,[23]]]],[[],23],[[]],[[],7],[[],7],[[],25],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[37],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[60,[[7,[61]]]],0,[60,60],[[]],0,[[[70,[62,[0,[[63,[8]],[64,[8]],[65,[8]],[66,[8,[54,[8]]]],67,68]],69]]],[[7,[71,[19,[72]]]]]],0,[16],[16],[16],[16],[16],[16],[[60,42],[[7,[73]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],16],[[],16],[[]],[[]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[]],[[]],[[]],[[]],[[],22],[[],22],0,[23,[[7,[23]]]],[7,[[7,[7]]]],[[[19,[18]]],[[7,[[19,[18]]]]]],[[],7],[[[24,[18]]],[[7,[[24,[18]]]]]],[[[24,[18]]],[[7,[[24,[18]]]]]],[[[19,[18]]],[[7,[[19,[18]]]]]],[7,[[7,[7]]]],[23,[[7,[23]]]],[[],7],0,0,[[]],[[],23],[[],23],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],25],[[],25],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[37],[[],2],[[],2],[[]],[[]],0,[[[74,[53]]],[[74,[53]]]],[[]],[16],[16],[16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[]],[[]],[[],22],0,0,[7,[[7,[7]]]],[[[24,[18]]],[[7,[[24,[18]]]]]],[[[19,[18]]],[[7,[[19,[18]]]]]],[23,[[7,[23]]]],[[],7],0,0,[[]],[[],23],[[]],[[],7],[[],7],[[],25],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[37],[[[11,[75]],22]],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[[20,[[12,[8,9,[11,[10]]]]]],76,77,[23,[78]],[81,[[79,[8]],8,[12,[8,9,[11,[10]]]],[80,[[79,[8]],8]]]],[20,[[82,[8]]]]],[[7,[83]]]],[[[20,[[12,[8,9,[11,[10]]]]]],76,77,[23,[78]],[81,[[79,[8]],8,[12,[8,9,[11,[10]]]],[80,[[79,[8]],8]]]],[20,[[82,[8]]]]],[[7,[83]]]],[[[11,[75]],84,85,6,[36,[35]],22,86]],[[[11,[75]]],[[11,[75]]]],[[]],[16],[16],[16],[16],[[6,[36,[35]]],[[23,[[24,[35]]]]]],[16],[16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[]],[[]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[20,[18]]],[[20,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[[21,[18]]],[[21,[2,18]]]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],87],[[[11,[75]]],87],0,[[88,[23,[89]],16,35],[[11,[75]]]],[76,[[7,[83]]]],[[76,[23,[39]],23],[[7,[77,83]]]],[[76,90],[[7,[[93,[[12,[8,9,[11,[10]]]],[79,[8]],[80,[[79,[8]],8]],[91,[8,[12,[8,9,[11,[10]]]]]],[92,[8,[12,[8,9,[11,[10]]]]]]]],83]]]],[[[95,[94]]],[[11,[75]]]],[[[11,[75]],[36,[35]],84],[[7,[[24,[35,18]],28]]]],[[[19,[18]]],[[7,[[19,[18]]]]]],[7,[[7,[7]]]],[23,[[7,[23]]]],[[],7],[[[24,[18]]],[[7,[[24,[18]]]]]],[[],7],[7,[[7,[7]]]],[[[19,[18]]],[[7,[[19,[18]]]]]],[23,[[7,[23]]]],[[[24,[18]]],[[7,[[24,[18]]]]]],[[39,[20,[[12,[8,9,[11,[10]]]]]],[20,[[92,[8,[12,[8,9,[11,[10]]]]]]]],[80,[[79,[8]],8]],[97,[8,[96,[[12,[8,9,[11,[10]]]],8]]]],77,[23,[98]],[101,[[100,[99]]]]],[[7,[83]]]],[[[11,[75]],84,85],[[7,[51,102]]]],[[]],[[],23],[[],23],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],25],[[],25],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[76,30]],"c":[648,710],"p":[[6,"Result"],[8,"Any"],[3,"RemarkBuilder"],[15,"u32"],[3,"OpaqueExtrinsic"],[15,"str"],[4,"Result"],[6,"Block"],[3,"RuntimeApi"],[3,"ExecutorDispatch"],[3,"NativeElseWasmExecutor"],[6,"TFullClient"],[3,"Pair"],[4,"RuntimeCall"],[6,"UncheckedExtrinsic"],[15,"usize"],[3,"InherentData"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[15,"bool"],[4,"Option"],[3,"Vec"],[3,"TypeId"],[3,"DevGenesisExt"],[3,"Storage"],[3,"String"],[8,"Deserializer"],[3,"PathBuf"],[3,"ChainSpec"],[3,"GenesisLoader"],[3,"GenesisConfig"],[8,"Serializer"],[15,"u8"],[15,"slice"],[3,"Private"],[3,"Command"],[4,"Sealing"],[4,"Testnet"],[15,"i32"],[3,"Formatter"],[6,"Result"],[3,"Cli"],[3,"ExtendedRunCmd"],[4,"Subcommand"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[8,"ChainSpec"],[3,"RuntimeVersion"],[3,"PossibleValue"],[8,"Block"],[8,"Backend"],[8,"RuntimeVersionOf"],[3,"MadaraGenesisBlockBuilder"],[6,"Result"],[4,"StateVersion"],[8,"BuildStorage"],[4,"DenyUnsafe"],[3,"UnsafeRpcError"],[8,"ChainApi"],[8,"ProvideRuntimeApi"],[8,"HeaderBackend"],[8,"HeaderMetadata"],[8,"StorageProvider"],[8,"Send"],[8,"Sync"],[8,"TransactionPool"],[3,"FullDeps"],[3,"RpcModule"],[8,"Error"],[3,"Error"],[3,"StarknetDeps"],[8,"NativeExecutionDispatch"],[3,"Configuration"],[3,"TaskManager"],[3,"TelemetryHandle"],[6,"TFullBackend"],[3,"LongestChain"],[3,"GrandpaBlockImport"],[3,"Backend"],[4,"Error"],[8,"Externalities"],[3,"RuntimeCode"],[4,"CallContext"],[3,"NativeVersion"],[4,"WasmExecutionMethod"],[15,"u64"],[8,"FnOnce"],[6,"DefaultImportQueue"],[6,"FullPool"],[3,"PartialComponents"],[3,"ExtendedHostFunctions"],[3,"WasmExecutor"],[6,"TransactionFor"],[6,"BoxBlockImport"],[3,"Registry"],[6,"Hash"],[4,"EngineCommand"],[3,"Receiver"],[4,"Error"]]},\
"madara_runtime":{"doc":"L2 validity rollup, settling on Ethereum or as a L3 …","t":"GGGGGGGGGGGGDDDGDIDDDDRRDGDDGNNGRGGQDGGISRRREDDDQQIDDDDEEEEEDERDGGGGNNGDIGNNEGGNEGRGDNRRRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKNNLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLKKLFLLLLLLLLLLLLLLLLLAMCOLLLLLLLLLLMLLLLKKKLLLLLNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLNLNNNLLNLLLLLMMLLLLLLLMNKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMFGDGIDDDDDGQDIDDQQIDDDIEEDRDLLKLLLLKMLLLLLLLLLLLLKLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLKLMKLLLLLLLLLLLLLLLLLLLLLLLLLKNNMMKKMCOMKKKLLNNLLKNNNNNMKLLLLKLLKLLKKLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMM","n":["AccountId","Address","AllPallets","AllPalletsReversedWithSystemFirst","AllPalletsWithSystem","AllPalletsWithSystemReversed","AllPalletsWithoutSystem","AllPalletsWithoutSystemReversed","Aura","AuraConfig","Balance","Block","BlockExecutionWeight","BlockHashCount","BlockLength","BlockNumber","BlockWeights","BuildStorage","ConstU128","ConstU32","ConstU64","ConstU8","DAYS","EXISTENTIAL_DEPOSIT","EnableManualSeal","Executive","ExtrinsicBaseWeight","GenesisConfig","Grandpa","Grandpa","Grandpa","GrandpaConfig","HOURS","Hash","Header","IdentificationTuple","IdentityFee","Index","InvokeTxMaxNSteps","KeyOwnerProofSystem","MAX","MILLISECS_PER_BLOCK","MINUTES","NORMAL_DISPATCH_RATIO","OriginCaller","PalletInfo","Perbill","Permill","Proof","Query","Randomness","RocksDbWeight","Runtime","RuntimeApi","RuntimeApiImpl","RuntimeCall","RuntimeEvent","RuntimeFreezeReason","RuntimeHoldReason","RuntimeLockId","RuntimeOrigin","RuntimeSlashReason","SLOT_DURATION","SS58Prefix","Signature","SignedExtra","SignedPayload","Starknet","Starknet","Starknet","StarknetConfig","StorageInfo","StorageValue","System","System","System","SystemCall","SystemConfig","Timestamp","Timestamp","TimestampCall","UncheckedExtrinsic","VERSION","ValidateMaxNSteps","Version","Void","WASM_BINARY","WASM_BINARY_BLOATY","WEIGHT_REF_TIME_PER_SECOND","Weight","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","account_nonce","add","add","add","add_assign","add_filter","add_proof_size","add_ref_time","all_gt","all_gte","all_lt","all_lte","any_eq","any_gt","any_gte","any_lt","any_lte","api","api_version","append","apply_extrinsic","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_system_ref","assimilate_storage","assimilate_storage","aura","authorities","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_storage","build_storage","call","caller","chain_id","check_inherents","check_proof","checked_accrue","checked_add","checked_add","checked_add","checked_add","checked_div","checked_div_per_component","checked_mul","checked_mul","checked_mul","checked_reduce","checked_sub","checked_sub","checked_sub","checked_sub","classify_dispatch","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","construct_runtime","construct_runtime_api","contract_class_by_class_hash","contract_class_hash_by_address","convert_error","convert_transaction","crate_version","current_set_id","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_from","decode_from","decode_len","decode_len","decode_session_keys","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","deconstruct","deconstruct","deconstruct","deconstruct","default","default","default","default","default","default","default","default","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_saturating_accrue","defensive_saturating_accrue","defensive_saturating_add","defensive_saturating_add","defensive_saturating_dec","defensive_saturating_dec","defensive_saturating_inc","defensive_saturating_inc","defensive_saturating_mul","defensive_saturating_mul","defensive_saturating_reduce","defensive_saturating_reduce","defensive_saturating_sub","defensive_saturating_sub","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","dispatch","dispatch_bypass_filter","dispatch_bypass_filter","dispatch_bypass_filter","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode","encode_as","encode_as","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","ensure_inherents_are_first","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","estimate_call_fee","estimate_fee","events","execute_block","execute_in_transaction","exists","extract_proof","extrinsic_filter","filter_call","finalize_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_all","from_float","from_float","from_float","from_float","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_parts","from_parts","from_parts","from_parts","from_parts","from_percent","from_percent","from_perthousand","from_perthousand","from_proof_size","from_rational","from_rational","from_rational_approximation","from_rational_approximation","from_rational_with_rounding","from_rational_with_rounding","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref_time","generate_key_ownership_proof","generate_session_keys","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_call_index","get_call_index","get_call_indices","get_call_indices","get_call_metadata","get_call_name","get_call_name","get_call_names","get_call_names","get_call_names","get_dispatch_info","get_dispatch_info","get_dispatch_info","get_hasher","get_module_names","get_storage_at","grandpa","grandpa_authorities","has_api","has_api_with","hashed_key","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","identity","index","inherent_extrinsics","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize_block","int_div","int_div","int_mul","int_mul","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_caller","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_storage_changes","into_system","is_clear","is_clear","is_clear","is_one","is_one","is_sub_type","is_sub_type","is_sub_type","is_sub_type","is_zero","is_zero","is_zero","is_zero","is_zero","key","kill","kill_prefix","kill_storage","max","max_consumers","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_overflow","max_size","max_value","max_value","max_value","max_value","max_value","max_value","max_values","metadata","metadata","metadata_at_version","metadata_at_version","metadata_versions","metadata_versions","min","min_value","min_value","min_value","min_value","min_value","min_value","module_name","mul","mul","mul","mul","mul","mul","mul","mul","mul_ceil","mul_ceil","mul_floor","mul_floor","mutate","mutate_exists","name","native_version","new_call_variant_kill_prefix","new_call_variant_kill_storage","new_call_variant_remark","new_call_variant_remark_with_event","new_call_variant_set","new_call_variant_set_code","new_call_variant_set_code_without_checks","new_call_variant_set_heap_pages","new_call_variant_set_storage","nonce","none","none","offchain_worker","one","one","one","one","opaque","pallet_name","pallet_starknet","parameter_types","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pays_fee","pow","pow","pre_dispatch","prefix","print","proof_recorder","proof_size","proof_size_mut","prove","put","random","random_seed","random_seed","record_proof","ref_time","ref_time_mut","remark","remark_with_event","reset_filter","root","root","saturating_accrue","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_div","saturating_div","saturating_div","saturating_mul","saturating_mul","saturating_mul","saturating_pow","saturating_pow","saturating_pow","saturating_reciprocal_mul","saturating_reciprocal_mul","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_ceil","saturating_reciprocal_mul_floor","saturating_reciprocal_mul_floor","saturating_reduce","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","serialize","serialize","serialize","serialize","set","set","set","set_caller_from","set_code","set_code_without_checks","set_heap_pages","set_proof_size","set_ref_time","set_storage","signed","signed","slot_duration","square","square","starknet","storage_name","sub","sub","sub","sub_assign","sub_proof_size","sub_ref_time","submit_report_equivocation_unsigned_extrinsic","system","system","take","tcmp","tcmp","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","translate","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_mutate","try_mutate_exists","try_with_caller","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_from","unique_saturated_from","unique_saturated_from","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","using_encoded","using_encoded","validate_transaction","validate_unsigned","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weigh_data","weight_to_fee","zero","zero","zero","zero","zero","zero","code","code","items","keys","pages","prefix","remark","remark","subkeys","now","dispatch","Block","BlockExecutionWeight","BlockId","BuildStorage","ConstU128","ConstU32","ConstU64","ConstU8","ExtrinsicBaseWeight","Header","IdentificationTuple","IdentityFee","KeyOwnerProofSystem","Perbill","Permill","Proof","Query","Randomness","RocksDbWeight","SessionKeys","StorageInfo","StorageValue","SystemCall","TimestampCall","UncheckedExtrinsic","WEIGHT_REF_TIME_PER_SECOND","Weight","__clone_box","__clone_box","append","as_any","as_any","as_any_mut","as_any_mut","assimilate_storage","aura","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","build_storage","build_storage","check_proof","clear","clone","clone","clone_into","clone_into","construct_runtime","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_into_raw_public_keys","decode_len","decode_len","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","encode","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exists","fmt","fmt","from","from","from","from_bytes","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","generate","get","get_raw","grandpa","hashed_key","identity","identity","init","init","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_raw_public_keys","into_ref","into_ref","is_clear","key_ids","kill","kill_prefix","kill_storage","max_size","max_values","mutate","mutate_exists","pallet_name","pallet_starknet","parameter_types","prefix","prove","put","random","random_seed","random_seed","remark","remark_with_event","serialize","serialize","set","set","set_code","set_code_without_checks","set_heap_pages","set_storage","storage_name","take","to_keyed_vec","to_keyed_vec","to_owned","to_owned","translate","try_from","try_from","try_get","try_into","try_into","try_mutate","try_mutate_exists","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast_mut","upcast_mut","using_encoded","vzip","vzip","code","code","items","keys","pages","prefix","remark","remark","subkeys","now"],"q":[[0,"madara_runtime"],[1932,"madara_runtime::SystemCall"],[1941,"madara_runtime::TimestampCall"],[1942,"madara_runtime::api"],[1943,"madara_runtime::opaque"],[2141,"madara_runtime::opaque::SystemCall"],[2150,"madara_runtime::opaque::TimestampCall"]],"d":["Import the types. Some way of identifying an account on …","The address format for describing accounts.","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","All pallets included in the runtime as a nested tuple of …","","","Import the types. Balance of an account.","Block type as expected by this runtime.","Time to execute an empty block. Calculated by multiplying …","","","Import the types. An index to a block.","We allow for 2 seconds of compute with a 6 second average …","Complex storage builder stuff.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","","Existential deposit.","","Executive: handles dispatch to the various modules.","Time to execute a NO-OP extrinsic, for example …","","","","","","","Import the types. A hash of some data used by the chain.","Block header type as expected by this runtime.","The full identification of a key owner and the stash …","Implementor of <code>WeightToFee</code> that maps one unit of weight to …","Import the types. Index of a transaction in the chain.","Import the types. The maximum amount of steps allowed for …","Something which can compute and check proofs of a …","The maximal weight in all dimensions.","This determines the average expected block time that we …","","","","Provides an implementation of <code>PalletInfo</code> to provide …","A fixed point representation of a number in the range [0, 1…","A fixed point representation of a number in the range [0, 1…","The proof of membership itself.","The type that get/take return.","A trait that is able to provide randomness.","By default, Substrate uses RocksDB, so this will be the …","","","Implements all runtime apis for the client side.","","","A reason for placing a freeze on funds.","A reason for placing a hold on funds.","An identifier for each lock placed on funds.","The runtime origin type representing the origin of a call.","A reason for slashing funds.","","","Import the types. Alias to 512-bit hash when used in the …","The SignedExtension to the basic transaction logic.","The payload being signed in transactions.","","","","","Metadata about storage from the runtime.","A trait for working with macro-generated storage values …","","","","Contains one variant per dispatchable that can be called …","","","","Contains one variant per dispatchable that can be called …","Unchecked extrinsic type as expected by this runtime.","","Import the types. The maximum amount of steps allowed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constant version of Add for <code>proof_size</code> component with u64.","Constant version of Add for <code>ref_time</code> component with u64.","Returns true if all of <code>self</code>’s constituent weights is …","Returns true if all of <code>self</code>’s constituent weights is …","Returns true if all of <code>self</code>’s constituent weights is …","Returns true if all of <code>self</code>’s constituent weights is …","Returns true if any of <code>self</code>’s constituent weights is …","Returns true if any of <code>self</code>’s constituent weights is …","Returns true if any of <code>self</code>’s constituent weights is …","Returns true if any of <code>self</code>’s constituent weights is …","Returns true if any of <code>self</code>’s constituent weights is …","","","Append the given item to the value in the storage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Assimilate the storage for this module into pre-existing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build the storage out of this builder.","Build the storage out of this builder.","","","","","Check a proof of membership on-chain. Return <code>Some</code> iff the …","Try to increase <code>self</code> by <code>amount</code> via checked addition.","","Checked <code>Weight</code> addition. Computes <code>self + rhs</code>, returning …","","","Checked <code>Weight</code> scalar division. Computes …","Calculates how many <code>other</code> fit into <code>self</code>.","Checked <code>Weight</code> scalar multiplication. Computes …","","","Try to reduce <code>self</code> by <code>amount</code> via checked subtraction.","Checked <code>Weight</code> subtraction. Computes <code>self - rhs</code>, returning …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a runtime, with the given name and the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Read the length of the storage value without decoding the …","Read the length of the storage value without decoding the …","","","","","","","","","","","","","","","See <code>PerThing::deconstruct</code>.","Consume self and return the number of parts per thing.","Consume self and return the number of parts per thing.","See <code>PerThing::deconstruct</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constant version of Div with u64.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Does the value (explicitly) exist in storage?","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Convert to runtime origin with caller being system signed …","","Returns the argument unchanged.","Convert to runtime origin, using as filter: …","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct <code>Weight</code> from the same weight for all parts.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","NOTE: saturate to 0 or 1 if x is beyond <code>[0, 1]</code>","See <code>PerThing::from_float</code>.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Construct <code>Weight</code> from weight parts, namely reference time …","From an explicitly defined number of parts per maximum of …","Build this type from a number of parts per thing.","Build this type from a number of parts per thing.","From an explicitly defined number of parts per maximum of …","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 100</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Converts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.","Construct <code>Weight</code> with storage size weight and 0 reference …","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","See <code>PerThing::from_rational</code>.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Construct <code>Weight</code> with reference time weight and 0 storage …","","","Load the value from the provided storage instance.","Returns the value of this parameter type.","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","Returns the value of this parameter type.","","","","","","","","","","","","","","","","","Returns the value of this parameter type.","","","Returns the value of this parameter type.","","Returns the value of this parameter type.","","","","","","","","","","","","","","","","","","","","","","Get the storage key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Integer division with another value, rounding down.","Integer division with another value, rounding down.","Integer multiplication with another value, saturating at 1.","Integer multiplication with another value, saturating at 1.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeee <code>PerThing::is_one</code>.","See <code>PerThing::is_one</code>.","","","","","","See <code>PerThing::is_zero</code>.","","","See <code>PerThing::is_zero</code>.","Returns the key for this parameter type.","Clear the storage value.","Kill all storage items with a key that starts with the …","Kill some items from storage.","Get the aggressive max of <code>self</code> and <code>other</code> weight.","","","","","","","","","","","The maximum size of key/values in the storage, or none if …","","","","","","","The maximum number of values in the storage, or none if no …","","","","","","","Get the conservative min of <code>self</code> and <code>other</code> weight.","","","","","","","","","Constant version of Mul with u64.","","","","","","","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_ceil</code>.","See <code>PerThing::mul_floor</code>.","See <code>PerThing::mul_floor</code>.","Mutate the value","Mutate the value. Deletes the item if mutated to a <code>None</code>.","","The version information used to identify this runtime when …","Create a call with the variant <code>kill_prefix</code>.","Create a call with the variant <code>kill_storage</code>.","Create a call with the variant <code>remark</code>.","Create a call with the variant <code>remark_with_event</code>.","Create a call with the variant <code>set</code>.","Create a call with the variant <code>set_code</code>.","Create a call with the variant <code>set_code_without_checks</code>.","Create a call with the variant <code>set_heap_pages</code>.","Create a call with the variant <code>set_storage</code>.","","","Create with system none origin and …","","","See <code>PerThing::one</code>","","See <code>PerThing::one</code>","","Encoded string of pallet name.","Import the StarkNet pallet.","Create new implementations of the <code>Get</code> trait.","","","","","","","","","","","The prefix of the storage. All keys after the prefix are …","","","Return the storage size part of the weight.","Return a mutable reference to the storage size part of the …","Prove membership of a key owner in the current block-state.","Store a value under this key into the provided storage …","Get the most recently determined random seed, along with …","Get the basic random seed.","Get the basic random seed.","","Return the reference time part of the weight.","Return a mutable reference to the reference time part of …","Make some on-chain remark.","Make some on-chain remark and emit event.","","","Create with system root origin and …","Increment <code>Weight</code> by <code>amount</code> via saturating addition.","Saturating <code>Weight</code> addition. Computes <code>self + rhs</code>, …","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","","","Saturating addition. Compute <code>self + rhs</code>, saturating at the …","Saturating <code>Weight</code> scalar division. Computes …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating division. Compute <code>self / rhs</code>, saturating at one …","Saturating <code>Weight</code> scalar multiplication. Computes …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating multiply. Compute <code>self * rhs</code>, saturating at the …","Saturating <code>Weight</code> scalar exponentiation. Computes …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating exponentiation. Computes <code>self.pow(exp)</code>, …","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_ceil</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","See <code>PerThing::saturating_reciprocal_mul_floor</code>.","Reduce <code>Weight</code> by <code>amount</code> via saturating subtraction.","Saturating <code>Weight</code> subtraction. Computes <code>self - rhs</code>, …","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","Saturating subtraction. Compute <code>self - rhs</code>, saturating at …","","","","","","Store a value under this key into the provided storage …","Set the value of this parameter type in the storage.","Set the current time.","","Set the new runtime code.","Set the new runtime code without doing any checks of the …","Set the number of pages in the WebAssembly environment’s …","Set the storage size part of the weight.","Set the reference time part of the weight.","Set some items of storage.","","Create with system signed origin and …","","See <code>PerThing::square</code>.","See <code>PerThing::square</code>.","","Encoded string of storage name.","","","","","Constant version of Sub for <code>proof_size</code> component with u64.","Constant version of Sub for <code>ref_time</code> component with u64.","","","","Take a value from storage, removing it afterwards.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Translate a value from some previous type (<code>O</code>) to the …","Try to add some <code>other</code> weight while upholding the <code>limit</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to get the underlying value from the provided storage …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mutate the value if closure returns <code>Ok</code>","Mutate the value if closure returns <code>Ok</code>. Deletes the item …eturn a <code>Weight</code> where all fields are zero.","See <code>PerThing::zero</code>.","","","See <code>PerThing::zero</code>.","","","","","","","","","","","","Opaque block type.","Time to execute an empty block. Calculated by multiplying …","Opaque block identifier type.","Complex storage builder stuff.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Const getter for a basic type.","Time to execute a NO-OP extrinsic, for example …","Opaque block header type.","The full identification of a key owner and the stash …","Implementor of <code>WeightToFee</code> that maps one unit of weight to …","Something which can compute and check proofs of a …","A fixed point representation of a number in the range [0, 1…","A fixed point representation of a number in the range [0, 1…","The proof of membership itself.","The type that get/take return.","A trait that is able to provide randomness.","By default, Substrate uses RocksDB, so this will be the …","","Metadata about storage from the runtime.","A trait for working with macro-generated storage values …","Contains one variant per dispatchable that can be called …","Contains one variant per dispatchable that can be called …","Opaque types. These are used by the CLI to instantiate …","","","","","Append the given item to the value in the storage.","","","","","Assimilate the storage for this module into pre-existing …","","","","","","","","","","","","Build the storage out of this builder.","Build the storage out of this builder.","Check a proof of membership on-chain. Return <code>Some</code> iff the …","","","","","","Construct a runtime, with the given name and the given …","","","","","","","Decode <code>Self</code> from the given <code>encoded</code> slice and convert <code>Self</code> …","Read the length of the storage value without decoding the …","Read the length of the storage value without decoding the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Does the value (explicitly) exist in storage?","","","Returns the argument unchanged.","Returns the argument unchanged.","","Convert an encoded extrinsic to an <code>OpaqueExtrinsic</code>.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Generate a set of keys with optionally using the given …","Load the value from the provided storage instance.","","","Get the storage key.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Converts <code>Self</code> into a <code>Vec</code> of <code>(raw public key, KeyTypeId)</code>.","","","","","Clear the storage value.","Kill all storage items with a key that starts with the …","Kill some items from storage.","The maximum size of key/values in the storage, or none if …","The maximum number of values in the storage, or none if no …","Mutate the value","Mutate the value. Deletes the item if mutated to a <code>None</code>.","Encoded string of pallet name.","Import the StarkNet pallet.","Create new implementations of the <code>Get</code> trait.","The prefix of the storage. All keys after the prefix are …","Prove membership of a key owner in the current block-state.","Store a value under this key into the provided storage …","Get the most recently determined random seed, along with …","Get the basic random seed.","Get the basic random seed.","Make some on-chain remark.","Make some on-chain remark and emit event.","","","Store a value under this key into the provided storage …","Set the current time.","Set the new runtime code.","Set the new runtime code without doing any checks of the …","Set the number of pages in the WebAssembly environment’s …","Set some items of storage.","Encoded string of storage name.","Take a value from storage, removing it afterwards.","","","","","Translate a value from some previous type (<code>O</code>) to the …","","","Try to get the underlying value from the provided storage …","","","Mutate the value if closure returns <code>Ok</code>","Mutate the value if closure returns <code>Ok</code>. Deletes the item …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,43,0,0,0,0,151,0,0,0,0,4,0,0,0,0,0,0,0,151,152,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,43,0,0,0,0,42,43,0,0,0,43,0,0,0,0,0,22,0,0,0,0,4,40,41,42,7,22,43,44,45,46,47,48,49,50,51,5,6,53,54,41,4,5,6,4,7,4,4,4,4,4,4,4,4,4,4,4,0,13,152,41,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,22,165,26,26,41,4,40,42,22,43,44,45,46,47,5,6,53,54,4,40,42,22,43,44,45,46,47,5,6,53,54,4,40,42,22,43,44,45,46,47,5,6,53,54,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,165,165,41,7,41,41,151,4,4,4,5,6,4,4,4,5,6,4,4,4,5,6,4,4,5,6,4,40,41,42,7,22,43,44,45,46,47,48,49,50,51,5,6,53,54,4,40,41,42,7,22,43,44,45,46,47,48,49,50,51,5,6,53,54,44,45,46,47,5,6,0,161,41,41,41,41,160,41,4,40,42,22,43,44,45,46,47,5,6,53,54,4,40,42,22,43,44,45,46,47,5,6,53,54,4,40,42,22,43,44,45,46,47,5,6,53,54,5,6,152,152,41,4,40,42,22,43,44,45,46,47,5,6,53,54,5,5,6,6,4,26,48,49,50,51,5,6,44,45,46,47,5,6,44,45,46,47,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,44,45,46,47,5,6,44,45,46,47,5,6,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,4,26,5,6,43,40,43,53,4,4,5,5,6,6,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,5,6,5,6,4,40,42,22,43,5,6,53,54,41,4,40,41,42,22,43,44,45,46,47,5,6,53,54,4,4,4,4,4,40,40,40,40,40,41,41,41,41,41,42,42,42,42,42,22,22,22,22,22,43,43,43,43,43,44,44,44,44,44,45,45,45,45,45,46,46,46,46,46,47,47,47,47,47,5,5,5,5,5,6,6,6,6,6,53,53,53,53,53,54,54,54,54,54,49,41,41,41,13,152,13,41,7,41,4,4,40,41,42,7,22,43,44,45,46,47,48,49,50,51,5,6,53,54,153,4,4,4,40,154,155,156,157,158,159,160,41,42,42,42,42,7,7,7,7,22,22,43,43,43,43,43,26,44,45,46,47,161,13,48,49,50,51,5,5,6,6,53,54,162,163,164,4,5,5,6,6,153,153,4,4,40,40,154,154,155,155,156,156,157,157,158,158,159,159,160,160,41,41,42,42,7,7,22,22,43,43,26,26,44,44,45,45,46,46,47,47,161,161,13,13,48,48,49,49,50,50,51,51,5,5,6,6,53,53,54,54,162,162,163,163,164,164,4,5,5,6,6,5,6,5,6,4,5,6,5,6,5,6,153,153,4,4,40,40,154,154,155,155,156,156,157,157,158,158,159,159,160,160,41,41,42,42,7,7,22,22,43,43,26,26,44,44,45,45,46,46,47,47,161,161,13,13,48,48,49,49,50,50,51,51,5,5,6,6,53,53,54,54,162,162,163,163,164,164,4,41,41,152,154,154,154,155,155,155,156,156,156,157,157,157,158,158,158,159,159,159,48,48,48,49,49,49,50,50,50,51,51,51,162,162,162,163,163,163,164,164,164,40,53,40,53,43,40,53,40,43,53,40,43,53,41,43,41,26,41,13,13,152,4,40,42,22,43,44,45,46,47,5,6,53,54,160,41,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,41,5,6,5,6,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,153,153,4,4,40,40,154,154,155,155,156,156,157,157,158,158,159,159,160,160,41,41,42,42,7,7,22,22,43,43,26,26,44,44,45,45,46,46,47,47,161,161,13,13,48,48,49,49,50,50,51,51,5,5,6,6,53,53,54,54,162,162,163,163,164,164,153,153,4,4,40,40,154,154,155,155,156,156,157,157,158,158,159,159,160,160,41,41,42,42,22,22,43,43,26,26,44,44,45,45,46,46,47,47,161,161,13,13,48,48,49,49,50,50,51,51,5,5,6,6,53,53,54,54,162,162,163,163,164,164,153,153,4,4,40,40,154,154,155,155,156,156,157,157,158,158,159,159,160,160,41,41,42,42,7,7,22,22,43,43,26,26,44,44,45,45,46,46,47,47,161,161,13,13,48,48,49,49,50,50,51,51,5,5,6,6,53,53,54,54,162,162,163,163,164,164,7,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,13,22,4,5,6,5,6,43,43,43,43,4,5,5,6,6,159,152,53,53,4,49,4,22,44,45,46,47,5,6,49,54,4,4,5,5,6,6,54,41,41,41,41,41,41,4,4,4,5,5,6,6,160,4,4,5,5,5,6,6,6,5,6,5,6,152,152,160,0,53,53,53,53,40,53,53,53,53,41,7,7,41,5,5,6,6,0,54,0,0,44,45,46,47,5,6,4,5,6,41,54,4,13,4,4,151,152,166,166,166,13,4,4,53,53,7,7,7,4,4,5,5,6,6,4,5,6,4,5,6,4,5,6,5,6,5,6,5,6,4,4,5,5,6,6,4,26,5,6,152,159,40,7,53,53,53,4,4,53,7,7,41,5,6,26,54,4,5,6,4,4,4,41,26,22,152,5,6,4,40,42,22,43,44,45,46,47,5,6,53,54,4,40,41,42,7,22,43,44,45,46,47,48,49,50,51,5,6,53,54,4,152,4,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,152,153,4,40,154,155,156,157,158,159,160,41,42,42,42,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,152,152,7,4,40,42,22,43,44,45,46,47,5,6,53,54,4,40,42,22,43,44,45,46,47,5,6,53,54,4,40,42,22,43,44,45,46,47,5,6,53,54,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,4,40,41,42,22,43,44,45,46,47,5,6,53,54,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,4,5,6,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,5,6,41,41,41,153,4,40,154,155,156,157,158,159,160,41,42,7,22,43,26,44,45,46,47,161,13,48,49,50,51,5,6,53,54,162,163,164,4,153,4,4,5,5,6,6,167,168,169,170,171,172,173,174,172,175,0,0,0,0,0,0,0,0,0,0,0,151,0,0,0,0,151,152,0,0,0,0,0,0,0,0,0,0,146,147,152,146,147,146,147,165,146,146,147,146,147,146,147,146,147,146,147,165,165,151,147,146,147,146,147,0,146,147,146,147,146,147,146,152,152,146,147,147,146,147,146,147,146,147,146,147,147,146,147,146,147,146,146,146,146,146,147,147,147,147,147,152,146,147,146,147,147,147,146,146,147,147,146,146,147,147,146,152,146,146,152,146,147,146,147,146,147,146,146,147,147,146,146,147,147,146,146,147,147,146,147,146,146,147,147,146,152,53,53,54,54,152,152,54,0,0,54,151,152,166,166,166,53,53,146,147,152,40,53,53,53,53,54,152,146,147,146,147,152,146,147,152,146,147,152,152,146,147,146,147,146,147,146,147,146,147,146,147,146,147,146,147,146,147,146,147,147,146,147,167,168,169,170,171,172,173,174,172,175],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[2,3],[[4,4],4],[[5,5]],[[6,6]],[[4,4]],[[7,8]],[[4,9],4],[[4,9],4],[[4,4],10],[[4,4],10],[[4,4],10],[[4,4],10],[[4,4],10],[[4,4],10],[[4,4],10],[[4,4],10],[[4,4],10],0,[[[13,[11,[12,[11]]]]],[[17,[[15,[14]],16]]]],[[[19,[18]]]],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[22,[[15,[23]]]],[24,[[17,[25]]]],[[26,24],[[17,[25]]]],0,[[],[[28,[27]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[17,[24,25]]]],[[],[[17,[24,25]]]],[[32,33,[28,[33]]],[[17,[[28,[33]],34]]]],[7],[[],33],[[35,36],37],[[],15],[[4,4],15],[[4,4],[[15,[4]]]],[[4,4],[[15,[4]]]],[[5,5],[[15,[5]]]],[[6,6],[[15,[6]]]],[[4,9],[[15,[4]]]],[[4,4],[[15,[9]]]],[[4,9],[[15,[4]]]],[[5,5],[[15,[5]]]],[[6,6],[[15,[6]]]],[[4,4],15],[[4,4],[[15,[4]]]],[[4,4],[[15,[4]]]],[[5,5],[[15,[5]]]],[[6,6],[[15,[6]]]],[4,38],[[]],[[]],[[]],[4,4],[[[40,[39]]],[[40,[39]]]],[41,41],[42,42],[7,7],[22,22],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[5,5],[6,6],[[[53,[52]]],[[53,[52]]]],[54,54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[44,44],55],[[45,45],55],[[46,46],55],[[47,47],55],[[5,5],55],[[6,6],55],0,[[[12,[11]]],56],[57,[[15,[58]]]],[32,[[15,[57]]]],[34,59],[[60,61],[[17,[62,34]]]],[[],[[15,[63]]]],[[],64],[65,[[17,[4,66]]]],[65,[[17,[[40,[39]],66]]]],[65,[[17,[42,66]]]],[65,[[17,[22,66]]]],[65,[[17,[43,66]]]],[65,[[17,[44,66]]]],[65,[[17,[45,66]]]],[65,[[17,[46,66]]]],[65,[[17,[47,66]]]],[65,[[17,[5,66]]]],[65,[[17,[6,66]]]],[65,[[17,[[53,[52]],66]]]],[65,[[17,[54,66]]]],[[[67,[29]]],[[17,[66]]]],[[[67,[29]]],[[17,[66]]]],[[[67,[29]]],[[17,[66]]]],[[[67,[29]]],[[17,[66]]]],[[[67,[29]]],[[17,[66]]]],[[[67,[29]]],[[17,[66]]]],[[[67,[29]]],[[17,[66]]]],[[[67,[29]]],[[17,[66]]]],[[[67,[29]]],[[17,[66]]]],[[[67,[29]]],[[17,[66]]]],[[[67,[29]]],[[17,[66]]]],[[[67,[29]]],[[17,[66]]]],[[[67,[29]]],[[17,[66]]]],[[14,[67,[29]]],[[17,[66]]]],[[14,[67,[29]]],[[17,[66]]]],[[14,[67,[29]]],[[17,[66]]]],[[14,[67,[29]]],[[17,[66]]]],[[14,[67,[29]]],[[17,[66]]]],[[14,[67,[29]]],[[17,[66]]]],[[14,[67,[29]]],[[17,[66]]]],[[14,[67,[29]]],[[17,[66]]]],[[14,[67,[29]]],[[17,[66]]]],[[14,[67,[29]]],[[17,[66]]]],[[14,[67,[29]]],[[17,[66]]]],[[14,[67,[29]]],[[17,[66]]]],[[14,[67,[29]]],[[17,[66]]]],[[],[[17,[5,66]]]],[[],[[17,[6,66]]]],[[],[[15,[68]]]],[[],[[15,[68]]]],[[[28,[29]]],[[15,[28]]]],[[14,65],[[17,[66]]]],[[14,65],[[17,[66]]]],[[14,65],[[17,[66]]]],[[14,65],[[17,[66]]]],[[14,65],[[17,[66]]]],[[14,65],[[17,[66]]]],[[14,65],[[17,[66]]]],[[14,65],[[17,[66]]]],[[14,65],[[17,[66]]]],[[14,65],[[17,[66]]]],[[14,65],[[17,[66]]]],[[14,65],[[17,[66]]]],[[14,65],[[17,[66]]]],[5,14],[5],[6],[6,14],[[],4],[[],26],[[],48],[[],49],[[],50],[[],51],[[],5],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[69,[[17,[4]]]],[69,[[17,[26]]]],[69,[[17,[5]]]],[69,[[17,[6]]]],[[43,7],70],[[[40,[39]]],[[17,[71,[72,[71]]]]]],[[43,7],70],[[[53,[52]]],[[17,[71,[72,[71]]]]]],[[4,9],4],[[4,73],4],[5],[[5,5]],[[6,6]],[6],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[68],[5,[[28,[29,31]]]],[6,[[28,[29,31]]]],[5],[6],[[4,[0,[74,75]]]],[[[40,[39]],[0,[74,75]]]],[[42,[0,[74,75]]]],[[22,[0,[74,75]]]],[[43,[0,[74,75]]]],[[5,[0,[74,75]]]],[[6,[0,[74,75]]]],[[[53,[52]],[0,[74,75]]]],[[54,[0,[74,75]]]],[35,[[17,[14]]]],[[4,4],10],[[[40,[39]],[40,[39]]],10],[[41,41],10],[[42,42],10],[[22,22],10],[[43,43],10],[[44,44],10],[[45,45],10],[[46,46],10],[[47,47],10],[[5,5],10],[[6,6],10],[[[53,[52]],[53,[52]]],10],[[54,54],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[71,[[76,[14]]]],[60,[[17,[34]]]],[[],[[28,[77]]]],[35],[[[13,[11,[12,[11]]]],78]],[[],10],[[[13,[11,[12,[11]]]]],[[15,[79]]]],[28,[[28,[60]]]],[7,10],[[]],[[4,80],[[17,[81]]]],[[4,80],[[17,[81]]]],[[[40,[39]],80],[[17,[81]]]],[[41,80],82],[[42,80],82],[[7,80],[[17,[81]]]],[[22,80],82],[[43,80],82],[[44,80],82],[[45,80],82],[[46,80],82],[[47,80],82],[[48,80],[[17,[81]]]],[[49,80],[[17,[81]]]],[[50,80],[[17,[81]]]],[[51,80],[[17,[81]]]],[[5,80],[[17,[81]]]],[[6,80],[[17,[81]]]],[[[53,[52]],80],[[17,[81]]]],[[54,80],[[17,[81]]]],[[]],[9,4],[[]],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[83,[41]]],42],[84,42],[[]],[[[85,[41]]],42],[15,7],[22,7],[[]],[[[86,[41]]],7],[[]],[[[86,[41]]],22],[[[88,[87,41]]],43],[[[88,[89,41]]],43],[[]],[[[88,[90,41]]],43],[[[88,[91,41]]],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[92,[5]]],5],[[]],[[[92,[6]]],6],[[]],[[]],[[]],[[]],[[]],[9,4],[93,5],[93,5],[93,6],[93,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[9,9],4],[14,5],[[],5],[[],6],[14,6],[14,5],[14,6],[14,5],[14,6],[9,4],[[[0,[94,[95,[14]],[95,[9]]]],[0,[94,[95,[14]],[95,[9]]]]],5],[[[0,[94,[95,[14]],[95,[9]]]],[0,[94,[95,[14]],[95,[9]]]]],6],[[[0,[94,[95,[14]],[95,[9]]]],[0,[94,[95,[14]],[95,[9]]]]],5],[[[0,[94,[95,[14]],[95,[9]]]],[0,[94,[95,[14]],[95,[9]]]]],6],[[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]],[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]],106],[[17,[5]]]],[[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]],[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[99,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[100,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],[101,[[0,[96,97,95,95,[98,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[99,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[100,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],[101,[[0,[96,97,95,95,98,99,100,101,102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]]]],102,103,104,105]],106],[[17,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,4],[[64,107],[[15,[108]]]],[[[15,[[28,[29]]]]],[[28,[29]]]],[[]],[[],109],[[],109],[[],[[76,[109]]]],[[],110],[[],[[76,[110]]]],[[],110],[[],111],[[],[[76,[111]]]],[[],111],[[],112],[[],[[76,[112]]]],[[],112],[[],[[76,[29]]]],[[],29],[[],29],[[],10],[[],10],[[],[[76,[10]]]],[[],[[15,[29]]]],[[],29],[[],29],[[],14],[[],14],[[],[[15,[14]]]],[[],9],[[],[[15,[9]]]],[[],9],[[],113],[[],113],[[],[[15,[113]]]],[[],[[76,[4]]]],[[],4],[[],4],[[],4],[[],[[76,[4]]]],[[],4],[[],[[76,[114]]]],[[],114],[[],114],[[[40,[39]]],29],[[[53,[52]]],29],[[],[[67,[29]]]],[[],[[67,[29]]]],[43,115],[[[40,[39]]],116],[[[53,[52]]],116],[[],[[67,[116]]]],[116,[[67,[116]]]],[[],[[67,[116]]]],[[[40,[39]]],117],[43,117],[[[53,[52]]],117],[[],118],[[],[[67,[116]]]],[[32,119],[[17,[33,34]]]],0,[[],120],[[[13,[11,[12,[11]]]]],[[17,[10,16]]]],[[[13,[11,[12,[11]]]],8],[[17,[10,16]]]],[[],[[30,[29]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[15,[68]]]],[36,28],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[]],[[5,5],14],[[6,6],14],[[5,14],5],[[6,14],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[13,[11,[12,[11]]]]],[[17,[[124,[11]],25]]]],[22,[[15,[23]]]],[[],10],[[],10],[[],10],[5,10],[6,10],[43,[[15,[[88,[90,41]]]]]],[43,[[15,[[88,[89,41]]]]]],[43,[[15,[[88,[91,41]]]]]],[43,[[15,[[88,[87,41]]]]]],[4,10],[5,10],[5,10],[6,10],[6,10],[[],[[30,[29]]]],[[]],0,0,[[4,4],4],[[],14],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],14],0,[[],4],[[]],[[],5],[[]],[[],6],[[]],0,[[],125],[[],126],[14,[[15,[125]]]],[14,[[15,[125]]]],[[],[[28,[14]]]],[[],[[28,[14]]]],[[4,4],4],[[]],[[],4],[[],5],[[]],[[],6],[[]],[[],[[15,[116]]]],[[4,[0,[[127,[9]],73]]],4],[[4,9],4],[[5,4],4],[[5,[0,[[98,[[0,[[98,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],96,[127,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],[99,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],102]]]],96,[127,[[0,[[98,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],96,[127,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],[99,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],96,[127,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],[99,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],102]]]],[99,[[0,[[98,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],96,[127,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],[99,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],102]]]],102]]]],[[5,5]],[[6,6]],[[6,[0,[[98,[[0,[[98,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],96,[127,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],[99,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],102]]]],96,[127,[[0,[[98,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],96,[127,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],[99,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],96,[127,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],[99,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],102]]]],[99,[[0,[[98,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],96,[127,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],[99,[[0,[[98,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],96,[127,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[128,[14]],[100,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],[99,[[0,[[98,[[0,[98,96,127,128,100,99,102]]]],96,[127,[[0,[98,96,127,128,100,99,102]]]],[128,[14]],[100,[[0,[98,96,127,128,100,99,102]]]],[99,[[0,[98,96,127,128,100,99,102]]]],102]]]],102]]]],102]]]],102]]]],[[6,4],4],[[5,[0,[129,[128,[14]]]]],[[0,[129,[128,[14]]]]]],[[6,[0,[129,[128,[14]]]]],[[0,[129,[128,[14]]]]]],[[5,[0,[129,[128,[14]]]]],[[0,[129,[128,[14]]]]]],[[6,[0,[129,[128,[14]]]]],[[0,[129,[128,[14]]]]]],[78],[78],[[],[[15,[116]]]],[[],130],[[[28,[29,31]],14],[[53,[52]]]],[[[28,[[28,[29,31]],31]]],[[53,[52]]]],[[[28,[29,31]]],[[53,[52]]]],[[[28,[29,31]]],[[53,[52]]]],[[],[[40,[39]]]],[[[28,[29,31]]],[[53,[52]]]],[[[28,[29,31]]],[[53,[52]]]],[9,[[53,[52]]]],[[[28,[31]]],[[53,[52]]]],[32,131],[[],7],[[],7],[[]],[[],5],[[],5],[[],6],[[],6],0,0,0,0,[[44,44],[[15,[55]]]],[[45,45],[[15,[55]]]],[[46,46],[[15,[55]]]],[[47,47],[[15,[55]]]],[[5,5],[[15,[55]]]],[[6,6],[[15,[55]]]],[4,132],[[5,68]],[[6,68]],[[],[[17,[133]]]],0,[4],[[[13,[11,[12,[11]]]]],[[15,[[134,[11]]]]]],[4,9],[4,9],[[],15],[19],[[[67,[29]]]],[[]],[[]],[[[13,[11,[12,[11]]]]]],[4,9],[4,9],0,0,[7],[[],7],[[],7],[[4,4]],[[4,4],4],[[5,5],5],[[5,5],5],[[6,6],6],[[6,6],6],[[4,9],4],[[5,5,106],5],[[6,6,106],6],[[4,9],4],[[5,5],5],[[6,6],6],[[4,14],4],[[5,68],5],[[6,68],6],[[5,[0,[135,[128,[14]]]]],[[0,[135,[128,[14]]]]]],[[6,[0,[135,[128,[14]]]]],[[0,[135,[128,[14]]]]]],[[5,[0,[135,[128,[14]]]]],[[0,[135,[128,[14]]]]]],[[6,[0,[135,[128,[14]]]]],[[0,[135,[128,[14]]]]]],[[5,[0,[135,[128,[14]]]]],[[0,[135,[128,[14]]]]]],[[6,[0,[135,[128,[14]]]]],[[0,[135,[128,[14]]]]]],[[4,4]],[[4,4],4],[[5,5],5],[[5,5],5],[[6,6],6],[[6,6],6],[[4,136],17],[[26,136],17],[[5,136],17],[[6,136],17],[[]],[10],0,[[7,[137,[7]]]],0,0,0,[[4,9],4],[[4,9],4],0,[[],7],[[],7],[[],138],[5,5],[6,6],0,0,[[4,4],4],[[5,5]],[[6,6]],[[4,4]],[[4,9],4],[[4,9],4],[[[140,[[139,[35]]]],108],15],0,0,[[]],[[],55],[[],55],[[[67,[29]]],[[28,[29,31]]]],[[[67,[29]]],[[28,[29,31]]]],[[[67,[29]]],[[28,[29,31]]]],[[[67,[29]]],[[28,[29,31]]]],[[[67,[29]]],[[28,[29,31]]]],[[[67,[29]]],[[28,[29,31]]]],[[[67,[29]]],[[28,[29,31]]]],[[[67,[29]]],[[28,[29,31]]]],[[[67,[29]]],[[28,[29,31]]]],[[[67,[29]]],[[28,[29,31]]]],[[[67,[29]]],[[28,[29,31]]]],[[[67,[29]]],[[28,[29,31]]]],[[[67,[29]]],[[28,[29,31]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[78,[[17,[15]]]],[[4,4,4],[[15,[4]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[42,[[17,[[83,[41]]]]]],[42,[[17,[[85,[41]]]]]],[[],17],[42,[[17,[84]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[78,17],[78,17],[[7,78],[[17,[7]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],141],[[],[[143,[142]]]],[[],[[143,[142]]]],[[],143],[[],143],[[],143],[[],143],[[],143],[[],143],[[],143],[[],143],[[],[[143,[142]]]],[[],[[143,[142]]]],[[],[[143,[142]]]],[[],[[143,[142]]]],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[],116],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[5,78]],[[6,78]],[144,145],[144,145],[[],110],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,4],[4],[[],4],[[],4],[[],5],[[],5],[[],6],[[],6],0,0,0,0,0,0,0,0,0,0,[[116,[67,[29]]],[[15,[[28,[29]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[[19,[18]]]],[[],21],[[],21],[[],21],[[],21],[24,[[17,[25]]]],0,[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[]],[[]],[[]],[[]],[[],[[17,[24,25]]]],[[],[[17,[24,25]]]],[[],15],[[]],[146,146],[147,147],[[]],[[]],0,[65,[[17,[146,66]]]],[65,[[17,[147,66]]]],[[[67,[29]]],[[17,[66]]]],[[[67,[29]]],[[17,[66]]]],[[14,[67,[29]]],[[17,[66]]]],[[14,[67,[29]]],[[17,[66]]]],[[[67,[29]]],[[15,[28]]]],[[],[[15,[68]]]],[[],[[15,[68]]]],[[14,65],[[17,[66]]]],[[14,65],[[17,[66]]]],[[],147],[68],[68],[68],[68],[69,[[17,[146]]]],[69,[[17,[147]]]],[68],[68],[147,[[28,[29,31]]]],[[146,[0,[74,75]]]],[[147,[0,[74,75]]]],[[146,146],10],[[147,147],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[146,80],82],[[147,80],[[17,[81]]]],[[]],[[]],[[[149,[18,18,18,148]]],147],[[[67,[29]]],[[17,[147,66]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[[28,[29]]]]],[[28,[29]]]],[[]],[[146,150],[[67,[29]]]],0,[[],[[30,[29]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],68],[[],68],[[]],[[]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[121,[31]]],[[121,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[122,[31]]],[[122,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[[123,[31]]],[[123,[21,31]]]],[[]],[[]],[146,28],[[]],[[]],[[],10],[[],[[67,[150]]]],[[]],0,0,0,0,[78],[78],0,0,0,0,[[],15],[19],[[[67,[29]]]],[[]],[[]],0,0,[[146,136],17],[[147,136],17],[[]],0,0,0,0,0,0,[[]],[[[67,[29]]],[[28,[29,31]]]],[[[67,[29]]],[[28,[29,31]]]],[[]],[[]],[78,[[17,[15]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[78,17],[78,17],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[28,[29,31]]]],[[],[[28,[29,31]]]],[[],141],[[],141],[[],143],[[],[[143,[142]]]],[[],116],[[],116],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[147,78]],[[]],[[]],0,0,0,0,0,0,0,0,0,0],"c":[2,3,5,7,860,863,864,933],"p":[[3,"Private"],[6,"AccountId"],[6,"Index"],[3,"Weight"],[3,"Permill"],[3,"Perbill"],[3,"RuntimeOrigin"],[8,"Fn"],[15,"u64"],[15,"bool"],[8,"Block"],[8,"CallApiAt"],[3,"RuntimeApiImpl"],[15,"u32"],[4,"Option"],[4,"ApiError"],[4,"Result"],[8,"Encode"],[8,"EncodeLike"],[6,"ApplyExtrinsicResult"],[8,"Any"],[4,"OriginCaller"],[4,"RawOrigin"],[3,"Storage"],[3,"String"],[3,"GenesisConfig"],[6,"AuthorityId"],[3,"Vec"],[15,"u8"],[15,"array"],[3,"Global"],[6,"ContractAddressWrapper"],[3,"Felt252Wrapper"],[4,"DispatchError"],[6,"Block"],[3,"InherentData"],[3,"CheckInherentsResult"],[4,"DispatchClass"],[8,"Config"],[4,"TimestampCall"],[3,"Runtime"],[4,"RuntimeEvent"],[4,"RuntimeCall"],[4,"RuntimeFreezeReason"],[4,"RuntimeHoldReason"],[4,"RuntimeLockId"],[4,"RuntimeSlashReason"],[3,"ConstU8"],[3,"ConstU32"],[3,"ConstU64"],[3,"ConstU128"],[8,"Config"],[4,"SystemCall"],[3,"StorageInfo"],[4,"Ordering"],[3,"ApiRef"],[6,"ClassHashWrapper"],[4,"ContractClass"],[4,"StarknetTransactionExecutionError"],[3,"Transaction"],[4,"TxType"],[6,"UncheckedExtrinsic"],[3,"CrateVersion"],[6,"SetId"],[8,"Input"],[3,"Error"],[15,"slice"],[15,"usize"],[8,"Deserializer"],[6,"DispatchResultWithPostInfo"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[8,"Copy"],[8,"Output"],[8,"Sized"],[8,"From"],[3,"EventWrapper"],[8,"FnOnce"],[3,"StorageProof"],[3,"Formatter"],[3,"Error"],[6,"Result"],[4,"Event"],[4,"Event"],[4,"Event"],[6,"Origin"],[6,"Starknet"],[6,"CallableCallFor"],[6,"Timestamp"],[6,"Grandpa"],[6,"System"],[3,"Compact"],[15,"f64"],[8,"RationalArg"],[8,"TryInto"],[8,"Clone"],[8,"Ord"],[8,"Div"],[8,"Rem"],[8,"Add"],[8,"AddAssign"],[8,"Unsigned"],[8,"Zero"],[8,"One"],[8,"MultiplyRational"],[4,"Rounding"],[6,"AuthorityId"],[3,"OpaqueKeyOwnershipProof"],[6,"BlockNumber"],[3,"RuntimeVersion"],[3,"BlockWeights"],[3,"BlockLength"],[15,"u128"],[3,"RuntimeDbWeight"],[3,"CallMetadata"],[15,"str"],[3,"DispatchInfo"],[4,"Hasher"],[6,"StorageKeyWrapper"],[6,"AuthorityList"],[3,"Box"],[3,"Arc"],[3,"Rc"],[6,"StorageChanges"],[3,"OpaqueMetadata"],[3,"RuntimeMetadataPrefixed"],[8,"Mul"],[8,"UniqueSaturatedInto"],[8,"MultiplyArg"],[3,"NativeVersion"],[6,"NonceWrapper"],[4,"Pays"],[4,"TransactionValidityError"],[6,"ProofRecorder"],[8,"ReciprocalArg"],[8,"Serializer"],[8,"Into"],[3,"SlotDuration"],[6,"NumberFor"],[3,"EquivocationProof"],[3,"TypeId"],[4,"MetaForm"],[3,"Type"],[4,"TransactionSource"],[6,"TransactionValidity"],[3,"SessionKeys"],[3,"UncheckedExtrinsic"],[8,"SignedExtension"],[3,"UncheckedExtrinsic"],[3,"KeyTypeId"],[8,"KeyOwnerProofSystem"],[8,"StorageValue"],[3,"IdentityFee"],[3,"BlockHashCount"],[3,"Version"],[3,"BlockWeights"],[3,"BlockLength"],[3,"SS58Prefix"],[3,"EnableManualSeal"],[3,"PalletInfo"],[3,"RuntimeApi"],[3,"BlockExecutionWeight"],[3,"ExtrinsicBaseWeight"],[3,"RocksDbWeight"],[8,"BuildStorage"],[8,"Randomness"],[13,"set_code"],[13,"set_code_without_checks"],[13,"set_storage"],[13,"kill_storage"],[13,"set_heap_pages"],[13,"kill_prefix"],[13,"remark"],[13,"remark_with_event"],[13,"set"]]},\
"mc_block_proposer":{"doc":"Block proposer implementation. This crate implements the …","t":"RDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["DEFAULT_BLOCK_SIZE_LIMIT","Proposer","ProposerFactory","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_mut","from_mut","from_ref","from_ref","init","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","new","propose","set_default_block_size_limit","set_soft_deadline","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"mc_block_proposer"]],"d":["Default block size limit in bytes used by <code>Proposer</code>.","The proposer logic.","<code>Proposer</code> factory.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Create a new proposer factory.","","Set the default block size limit in bytes.","Set soft deadline percentage.","","","","","","","","","","","",""],"i":[0,0,0,12,21,12,21,12,21,12,21,12,21,12,21,12,21,12,21,12,21,12,21,12,12,21,12,21,12,21,12,21,12,21,12,21,12,12,12,21,12,21,12,21,12,21,12,21,12,21],"f":[0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[[12,[3,[0,[[5,[4]],6,7]],[0,[[8,[[0,[[5,[4]],6,7]],4,[0,[[8,[[0,[[5,[4]],6,7]],4,[0,[[8,[[0,[5,6,7]],4,[0,[8,9,10,6,7]]]],[9,[4]],[10,[4]],6,7]]]],[9,[4]],[10,[4]],6,7]]]],[9,[4]],[10,[4]],6,7]],11]]]],[[],2],[[]],[[]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[17,15,15,[19,[18]]],[[12,[20]]]],[[[21,[[0,[[5,[4]],6,7]],4,[0,[[8,[[0,[[5,[4]],6,7]],4,[0,[[8,[[0,[[5,[4]],6,7]],4,[0,[[8,[[0,[5,6,7]],4,[0,[8,9,10,6,7]]]],[9,[4]],[10,[4]],6,7]]]],[9,[4]],[10,[4]],6,7]]]],[9,[4]],[10,[4]],6,7]],3,11]],22,23,24,[19,[2]]]],[[12,2]],[[12,25]],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[8,"Any"],[15,"usize"],[8,"TransactionPool"],[8,"Block"],[8,"Backend"],[8,"Send"],[8,"Sync"],[8,"BlockBuilderProvider"],[8,"HeaderBackend"],[8,"ProvideRuntimeApi"],[8,"ProofRecording"],[3,"ProposerFactory"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"SpawnNamed"],[3,"Registry"],[4,"Option"],[3,"DisableProofRecording"],[3,"Proposer"],[3,"InherentData"],[3,"Digest"],[3,"Duration"],[3,"Percent"],[4,"Result"],[3,"TypeId"]]},\
"mc_data_availability":{"doc":"","t":"NNIEEDNGNNNLLLLLLLLALLLLLLALLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLDLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMLMDLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDRRLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLMMLLLLLLLLLLLLMDLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRDLLLLLMLLMLLLLLLLLLLLLLLMLLLLLLLMMLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Avail","Celestia","DaClient","DaLayer","DaMode","DataAvailabilityWorker","Ethereum","StorageWrites","Validity","Validium","Volition","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","avail","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","celestia","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","eq","ethereum","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_mode","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","last_published_state","prove_current_block","publish_state_diff","to_owned","to_owned","to_possible_value","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","update_state","utils","value_variants","vzip","vzip","vzip","AvailClient","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","deref","deref_mut","drop","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","get_mode","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","last_published_state","publish_state_diff","to_owned","try_from","try_from","try_into","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","upcast","upcast_mut","vzip","AvailConfig","__clone_box","app_id","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","eq","fmt","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","mode","seed","to_owned","try_from","try_from","try_into","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","upcast","upcast_mut","validate_codegen","vzip","ws_provider","CelestiaClient","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","deref","deref_mut","drop","fmt","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","get_mode","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","last_published_state","publish_state_diff","to_owned","try_from","try_from","try_into","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","upcast","upcast_mut","vzip","CelestiaConfig","DEFAULT_CELESTIA_NODE","DEFAULT_NID","__clone_box","as_any","as_any_mut","auth_token","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","eq","fmt","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","http_provider","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","mode","nid","to_owned","try_from","try_from","try_into","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","upcast","upcast_mut","vzip","ws_provider","EthereumClient","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","deref","deref_mut","drop","fmt","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","get_mode","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","last_published_state","publish_state_diff","to_owned","try_from","try_from","try_into","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","upcast","upcast_mut","vzip","DEFAULT_CHAIN_ID","DEFAULT_ETHEREUM_NODE","DEFAULT_SEQUENCER_KEY","DEFAULT_STARKNET_CORE_CONTRACTS","EthereumConfig","__clone_box","as_any","as_any_mut","borrow","borrow_mut","chain_id","clone","clone_into","core_contracts","default","deref","deref_mut","deserialize","drop","eq","fmt","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","http_provider","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","mode","sequencer_key","to_owned","try_from","try_from","try_into","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","upcast","upcast_mut","vzip","SN_CONTRACT_CLASS_HASH_PREFIX","SN_CONTRACT_CLASS_PREFIX","SN_NONCE_PREFIX","SN_STORAGE_PREFIX","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_bytes_from_state_diff","get_valid_url","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","is_valid_http_endpoint","is_valid_ws_endpoint","pre_0_11_0_state_diff","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","upcast_mut","vzip","vzip","vzip","vzip"],"q":[[0,"mc_data_availability"],[129,"mc_data_availability::avail"],[170,"mc_data_availability::avail::config"],[216,"mc_data_availability::celestia"],[258,"mc_data_availability::celestia::config"],[306,"mc_data_availability::ethereum"],[348,"mc_data_availability::ethereum::config"],[398,"mc_data_availability::utils"]],"d":["","","","","Data availability modes in which Madara can be initialized.","","","","Full Validity Rollup","Sovereign Validium","Hybrid Volition","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[3,3,0,0,0,0,3,0,4,4,4,3,4,46,3,4,46,3,4,0,46,3,4,46,3,4,0,3,4,3,4,4,46,3,4,46,3,4,4,46,3,4,3,4,0,3,4,46,3,4,46,46,46,3,3,3,4,4,4,46,46,46,3,3,3,4,4,4,26,46,3,4,46,3,4,46,3,4,46,3,4,46,3,4,46,3,4,46,3,4,26,46,26,3,4,3,46,3,4,46,3,4,46,3,4,46,46,3,3,4,4,46,46,3,3,4,4,46,3,4,46,3,4,46,0,3,46,3,4,0,28,28,28,28,28,28,28,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,32,32,32,32,32,32,32,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,34,34,34,34,34,34,34,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,0,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,0,0,36,38,39,40,36,38,39,40,36,38,39,40,36,38,39,40,36,36,38,38,39,39,40,40,36,38,39,40,36,38,39,40,36,38,39,40,36,36,36,38,38,38,39,39,39,40,40,40,36,36,36,38,38,38,39,39,39,40,40,40,0,0,36,38,39,40,36,38,39,40,36,38,39,40,36,38,39,40,36,38,39,40,36,38,39,40,36,38,39,40,0,0,0,36,38,39,40,36,38,39,40,36,38,39,40,36,36,38,38,39,39,40,40,36,36,38,38,39,39,40,40,36,38,39,40,36,38,39,40,36,38,39,40],"f":[0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[3,3],[4,4],[[]],[[]],[[],4],[5],[5],[5],[5],[5],[5],[6,[[7,[4]]]],[5],[5],[5],[[3,3],8],[[4,4],8],0,[[3,9],10],[[4,9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[[12,[11]]],[[12,[2,11]]]],[[[12,[11]]],[[12,[2,11]]]],[[[12,[11]]],[[12,[2,11]]]],[[[13,[11]]],[[13,[2,11]]]],[[[13,[11]]],[[13,[2,11]]]],[[[13,[11]]],[[13,[2,11]]]],[[[14,[11]]],[[14,[2,11]]]],[[[14,[11]]],[[14,[2,11]]]],[[[14,[11]]],[[14,[2,11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[16,[[12,[15]]]]]],[[4,[13,[[0,[[18,[17]],[19,[17]]]]]],[13,[[20,[17]]]]]],[[[22,[21]]],[[16,[[12,[15]]]]]],[[]],[[]],[3,[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[26]],[13,[[0,[[18,[17]],[19,[17]]]]]],[13,[[20,[17]]]]]],0,[[],[[27,[3]]]],[[]],[[]],[[]],0,[1],[[],2],[[],2],[[]],[[]],[28,28],[[]],0,[5],[5],[5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,4],[[],5],[[]],[[[12,[11]]],[[12,[2,11]]]],[[[13,[11]]],[[13,[2,11]]]],[[[14,[11]]],[[14,[2,11]]]],[[]],[[]],[28,[[16,[[12,[15]]]]]],[[28,[22,[21]]],[[16,[[12,[15]]]]]],[[]],[29,[[30,[28]]]],[[],7],[[],7],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],0,[[],2],[[],2],[[]],[[]],[29,29],[[]],[[],29],[5],[5],[6,[[7,[29]]]],[5],[[29,29],8],[[29,9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[]],[[[12,[11]]],[[12,[2,11]]]],[[[13,[11]]],[[13,[2,11]]]],[[[14,[11]]],[[14,[2,11]]]],[[]],[[]],0,0,[[]],[[],7],[31,[[7,[29]]]],[[],7],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],0,0,[1],[[],2],[[],2],[[]],[[]],[32,32],[[]],0,[5],[5],[5],[[32,9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,4],[[],5],[[]],[[[12,[11]]],[[12,[2,11]]]],[[[13,[11]]],[[13,[2,11]]]],[[[14,[11]]],[[14,[2,11]]]],[[]],[[]],[32,[[16,[[12,[15]]]]]],[[32,[22,[21]]],[[16,[[12,[15]]]]]],[[]],[33,[[30,[32]]]],[[],7],[[],7],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1],[[],2],[[],2],0,[[]],[[]],[33,33],[[]],[[],33],[5],[5],[6,[[7,[33]]]],[5],[[33,33],8],[[33,9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[]],[[[12,[11]]],[[12,[2,11]]]],[[[13,[11]]],[[13,[2,11]]]],[[[14,[11]]],[[14,[2,11]]]],[[]],[[]],0,0,[[]],[[],7],[31,[[7,[33]]]],[[],7],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1],[[],2],[[],2],[[]],[[]],[34,34],[[]],0,[5],[5],[5],[[34,9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,4],[[],5],[[]],[[[12,[11]]],[[12,[2,11]]]],[[[13,[11]]],[[13,[2,11]]]],[[[14,[11]]],[[14,[2,11]]]],[[]],[[]],[34,[[16,[[12,[15]]]]]],[[34,[22,[21]]],[[16,[[12,[15]]]]]],[[]],[35,[[30,[34]]]],[[],7],[[],7],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[1],[[],2],[[],2],[[]],[[]],0,[35,35],[[]],0,[[],35],[5],[5],[6,[[7,[35]]]],[5],[[35,35],8],[[35,9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[]],[[[12,[11]]],[[12,[2,11]]]],[[[13,[11]]],[[13,[2,11]]]],[[[14,[11]]],[[14,[2,11]]]],[[]],[[]],0,0,[[]],[31,[[7,[35]]]],[[],7],[[],7],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5],[36,[[22,[37]]]],[5],[38,[[22,[37]]]],[39,[[22,[37]]]],[5],[5],[40,[[22,[37]]]],[5],[5],[5],[5],[5],[5],[5],[5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[27,[21]]],[[22,[37]]]],[41,[[7,[42,43]]]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[[12,[11]]],[[12,[2,11]]]],[[[12,[11]]],[[12,[2,11]]]],[[[12,[11]]],[[12,[2,11]]]],[[[12,[11]]],[[12,[2,11]]]],[[[13,[11]]],[[13,[2,11]]]],[[[13,[11]]],[[13,[2,11]]]],[[[13,[11]]],[[13,[2,11]]]],[[[13,[11]]],[[13,[2,11]]]],[[[14,[11]]],[[14,[2,11]]]],[[[14,[11]]],[[14,[2,11]]]],[[[14,[11]]],[[14,[2,11]]]],[[[14,[11]]],[[14,[2,11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,8],[41,8],[[[45,[[27,[37]],44]],[45,[[27,[37]],[27,[37]]]]],[[22,[21]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"Any"],[4,"DaLayer"],[4,"DaMode"],[15,"usize"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"Future"],[3,"Pin"],[8,"Block"],[8,"ProvideRuntimeApi"],[8,"BlockchainEvents"],[3,"Backend"],[3,"U256"],[3,"Vec"],[3,"PossibleValue"],[4,"Option"],[3,"TypeId"],[8,"DaClient"],[15,"slice"],[3,"AvailClient"],[3,"AvailConfig"],[6,"Result"],[3,"PathBuf"],[3,"CelestiaClient"],[3,"CelestiaConfig"],[3,"EthereumClient"],[3,"EthereumConfig"],[3,"SN_NONCE_PREFIX"],[15,"u8"],[3,"SN_CONTRACT_CLASS_HASH_PREFIX"],[3,"SN_CONTRACT_CLASS_PREFIX"],[3,"SN_STORAGE_PREFIX"],[15,"str"],[3,"Url"],[4,"ParseError"],[6,"StorageWrites"],[3,"HashMap"],[3,"DataAvailabilityWorker"]]},\
"mc_db":{"doc":"A database backend storing data about madara chain","t":"DGDLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFMALLLLLLLLLLLLRR","n":["Backend","DbHash","MappingCommitment","as_any","as_any","as_any_mut","as_any_mut","block_hash","borrow","borrow","borrow_mut","borrow_mut","da","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_mut","from_mut","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","mapping","meta","open","starknet_block_hash","starknet_database_dir","starknet_transaction_hashes","static_keys","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","CURRENT_SYNCING_TIPS","LAST_PROVED_BLOCK"],"q":[[0,"mc_db"],[55,"mc_db::static_keys"]],"d":["The Madara client database backend","Hash type that this backend uses for the database.","The mapping to write in db","","","","","","","","","","Return the da database manager","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Return the mapping database manager","Return the meta database manager","Open the database","","Returns the Starknet database directory.","","","","","","","","","","","","","","","",""],"i":[0,0,0,3,7,3,7,7,3,7,3,7,3,3,7,3,7,3,7,7,3,7,3,7,3,7,3,7,3,7,3,7,3,7,3,7,3,3,3,7,0,7,0,3,7,3,7,3,7,3,7,3,7,3,7,0,0],"f":[0,0,0,[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[[3,[2]]],[[4,[[0,[2]]]]]],[5],[5],[5],[5],[5],[5],[[[7,[[0,[6,2]]]],8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[4,[10]]],[[4,[1,10]]]],[[[4,[10]]],[[4,[1,10]]]],[[[12,[10]]],[[12,[1,10]]]],[[[12,[10]]],[[12,[1,10]]]],[[[3,[2]]],[[4,[[0,[2]]]]]],[[[3,[2]]],[[4,[[0,[2]]]]]],[[13,14],[[16,[[3,[2]],15]]]],0,[[14,17],18],0,0,[[],16],[[],16],[[],16],[[],16],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],0,0],"c":[],"p":[[8,"Any"],[8,"Block"],[3,"Backend"],[3,"Arc"],[15,"usize"],[8,"Debug"],[3,"MappingCommitment"],[3,"Formatter"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Rc"],[4,"DatabaseSource"],[3,"Path"],[3,"String"],[4,"Result"],[15,"str"],[3,"PathBuf"],[3,"TypeId"]]},\
"mc_mapping_sync":{"doc":"A worker syncing the Madara db","t":"DLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["MappingSyncWorker","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","new","poll_next","rewrite","rewrite","rewrite","rewrite","rewrite","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","upcast","upcast_mut","vzip"],"q":[[0,"mc_mapping_sync"]],"d":["The worker in charge of syncing the Madara db when it …","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"f":[0,[[],1],[[],1],[[]],[[]],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[],2],[[]],[[[4,[3]]],[[4,[1,3]]]],[[[4,[3]]],[[4,[1,3]]]],[[[5,[3]]],[[5,[1,3]]]],[[[5,[3]]],[[5,[1,3]]]],[[[6,[3]]],[[6,[1,3]]]],[[[6,[3]]],[[6,[1,3]]]],[[]],[[]],[[[8,[7]],9,5,5,[5,[[10,[7]]]],2,5],[[11,[7]]]],[[[18,[[11,[7,[0,[[12,[7]],[13,[7]],[15,[7,[14,[7]]]]]],[14,[7]],[0,[16,17]]]]]],19],[[21,[20]]]],[[[22,[3]]],[[23,[[22,[3]]]]]],[20,[[23,[20]]]],[[[4,[3]]],[[23,[[4,[3]]]]]],[[],23],[23,[[23,[23]]]],[[],23],[[],23],[[],24],[[],25],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[8,"Any"],[15,"usize"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"Block"],[6,"ImportNotifications"],[3,"Duration"],[3,"Backend"],[3,"MappingSyncWorker"],[8,"ProvideRuntimeApi"],[8,"HeaderBackend"],[8,"Backend"],[8,"StorageProvider"],[8,"HasherT"],[8,"ThreadSafeCopy"],[3,"Pin"],[3,"Context"],[4,"Option"],[4,"Poll"],[3,"Vec"],[4,"Result"],[3,"TypeId"],[15,"str"]]},\
"mc_rpc":{"doc":"Starknet RPC server API implementation","t":"DIKLKLKLLLKLKLLLKLFKLLLLLLKLLFLLLLLFLKLKLKLFKLKLKLKLKLKLKLKLKLKLLLLLLLLLLLLLKLLLLLLKLFFFLLLLLLLLL","n":["Starknet","StarknetRpcApiServer","add_declare_transaction","add_declare_transaction","add_deploy_account_transaction","add_deploy_account_transaction","add_invoke_transaction","add_invoke_transaction","as_any","as_any_mut","block_hash_and_number","block_hash_and_number","block_number","block_number","borrow","borrow_mut","call","call","casm_contract_class_to_compiled_class","chain_id","chain_id","current_block_hash","current_block_number","deref","deref_mut","drop","estimate_fee","estimate_fee","filter_events","flattened_sierra_to_casm_contract_class","from","from_mut","from_mut","from_ref","from_ref","get_block_by_block_hash","get_block_receipts","get_block_transaction_count","get_block_transaction_count","get_block_with_tx_hashes","get_block_with_tx_hashes","get_block_with_txs","get_block_with_txs","get_casm_cotract_class_hash","get_class","get_class","get_class_at","get_class_at","get_class_hash_at","get_class_hash_at","get_events","get_events","get_nonce","get_nonce","get_state_update","get_state_update","get_storage_at","get_storage_at","get_transaction_by_block_id_and_index","get_transaction_by_block_id_and_index","get_transaction_by_hash","get_transaction_by_hash","get_transaction_receipt","get_transaction_receipt","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","into_rpc","new","pending_transactions","pending_transactions","rewrite","rewrite","rewrite","rewrite","rewrite","syncing","syncing","to_declare_transaction","to_rpc_contract_class","to_tx","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","upcast","upcast_mut","vzip"],"q":[[0,"mc_rpc"]],"d":["A Starknet RPC server for Madara","Server trait implementation for the <code>StarknetRpcApi</code> RPC API.","Submit a new transaction to be added to the chain","Submit a new declare transaction to be added to the chain","Add a Deploy Account Transaction","Add an Deploy Account Transaction","Add an Invoke Transaction to invoke a contract function","Add an Invoke Transaction to invoke a contract function","","","Get the most recent accepted block hash and number","","Get the most recent accepted block number","","","","Call a contract function at a given block id","","Converts a CasmContractClass to a CompiledClass","Get the chain id","Returns the chain id.","","","","","","Estimate the fee associated with transaction","Estimate the fee associated with transaction","Helper function to filter Starknet events provided a RPC …","Converts a FlattenedSierraClass to a CasmContractClass","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Returns the current Starknet block from the block header’…","Helper function to get Starknet block details","Get the number of transactions in a block given a block id","","Get block information with transaction hashes given the …","Returns the specified block with transaction hashes.","Get block information with full transactions given the …","Get block information with full transactions given the …","","Get the contract class definition in the given block …","Get the contract class definition in the given block …","Get the contract class at a given contract address for a …","Get the contract class at a given contract address for a …","Get the contract class hash in the given block for the …","Get the contract class hash in the given block for the …","Returns all events matching the given filter","Returns all events matching the given filter","Get the nonce associated with the given address at the …","Get the nonce associated with the given address at the …","Get the information about the result of executing the …","Get the information about the result of executing the …","Get the value of the storage at the given address and key, …","get the storage at a given address and key and at a given …","Get the details of a transaction by a given block id and …","","Returns the information about a transaction by transaction …","Returns a transaction details from it’s hash.","Returns the receipt of a transaction by transaction hash.","Returns the receipt of a transaction by transaction hash.","","Calls <code>U::from(self)</code>.","","","","","","","","","Collects all the methods and subscriptions defined in the …","","Returns the transactions in the transaction pool, …","Returns the transactions in the transaction pool, …","","","","","","Get an object about the sync status, or false if the node …","","","Returns a <code>ContractClass</code> from a <code>BlockifierContractClass</code>","Converts a broadcasted transaction to a transaction …","","","","","","","","",""],"i":[0,0,64,15,64,15,64,15,15,15,64,15,64,15,15,15,64,15,0,64,15,15,15,15,15,15,64,15,15,0,15,15,15,15,15,0,15,64,15,64,15,64,15,0,64,15,64,15,64,15,64,15,64,15,64,15,64,15,64,15,64,15,64,15,15,15,15,15,15,15,15,15,15,15,64,15,64,15,15,15,15,15,15,64,15,0,0,0,15,15,15,15,15,15,15,15,15],"f":[0,0,[1,[[5,[[4,[2,3]]]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]],1],[[5,[[4,[2]]]]]],[16,[[5,[[4,[2,3]]]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]],16],[[5,[[4,[2]]]]]],[17,[[5,[[4,[2,3]]]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]],17],[[5,[[4,[2]]]]]],[[],18],[[],18],[[],[[21,[19,20]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]]],[[22,[19]]]],[[],[[21,[23,20]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]]],[[22,[23]]]],[[]],[[]],[[24,25],[[21,[[27,[26,3]],20]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]],24,25],[[22,[[27,[26]]]]]],[28,29],[[],[[21,[30,20]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]]],[[22,[30]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],[0,[13,14]]]]],[[21,[31,32]]]],[[[15,[6,7,[9,[7]]]]],[[22,[23]]]],[33],[33],[33],[[[27,[34,3]],25],[[5,[[4,[2,3]]]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]],[27,[34]],25],[[5,[[4,[2]]]]]],0,[[[37,[36,3]]],[[21,[28,38]]]],[[]],[[]],[[]],[[]],[[]],[[[9,[7]]],[[40,[39]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],[0,[13,14]]]],23],[[21,[0]]]],[25,[[21,[41,20]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]],25],[[22,[41]]]],[25,[[21,[42,20]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]],25],[[22,[42]]]],[25,[[21,[43,20]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]],25],[[22,[43]]]],[28,44],[[25,44],[[21,[45,20]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]],25,44],[[22,[45]]]],[[25,44],[[21,[45,20]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]],25,44],[[22,[45]]]],[[25,44],[[21,[30,20]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]],25,44],[[22,[30]]]],[46,[[5,[[4,[2,3]]]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]],46],[[5,[[4,[2]]]]]],[[25,44],[[21,[30,20]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]],25,44],[[22,[30]]]],[25,[[21,[47,20]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]],25],[[22,[47]]]],[[44,44,25],[[21,[30,20]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]],44,44,25],[[22,[30]]]],[[25,33],[[21,[48,20]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]],25,33],[[22,[48]]]],[44,[[21,[48,20]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]],44],[[22,[48]]]],[44,[[21,[49,20]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]],44],[[22,[49]]]],[[],33],[[]],[[[4,[3]]],[[4,[18,3]]]],[[[4,[3]]],[[4,[18,3]]]],[[[37,[3]]],[[37,[18,3]]]],[[[37,[3]]],[[37,[18,3]]]],[[[50,[3]]],[[50,[18,3]]]],[[[50,[3]]],[[50,[18,3]]]],[[]],[[]],[[],51],[[37,[37,[[52,[7]]]],[37,[[53,[7]]]],37,[37,[[54,[6]]]],[37,[[55,[7]]]],37],[[15,[6,7]]]],[[],[[5,[[4,[2,3]]]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]]],[[5,[[4,[2]]]]]],[21,[[21,[21]]]],[[],21],[40,[[21,[40]]]],[[[4,[3]]],[[21,[[4,[3]]]]]],[[[27,[3]]],[[21,[[27,[3]]]]]],[[],[[5,[[4,[2,3]]]]]],[[[15,[6,7,[8,[7]],[0,[[9,[7]],[10,[7,[8,[7]]]],[11,[7]]]],12,[0,[13,14]]]]],[[5,[[4,[2]]]]]],[1,[[21,[56,57]]]],[58,[[21,[45,59]]]],[[34,60],[[21,[61,57]]]],[[],21],[[],21],[[],62],[[],63],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[4,"BroadcastedDeclareTransaction"],[8,"Future"],[3,"Global"],[3,"Box"],[3,"Pin"],[8,"ChainApi"],[8,"Block"],[8,"Backend"],[8,"HeaderBackend"],[8,"StorageProvider"],[8,"ProvideRuntimeApi"],[8,"TransactionPool"],[8,"HasherT"],[8,"ThreadSafeCopy"],[3,"Starknet"],[3,"BroadcastedDeployAccountTransaction"],[3,"BroadcastedInvokeTransaction"],[8,"Any"],[3,"BlockHashAndNumber"],[4,"Error"],[4,"Result"],[6,"RpcResult"],[15,"u64"],[3,"FunctionCall"],[4,"BlockId"],[3,"String"],[3,"Vec"],[3,"CasmContractClass"],[3,"CompiledClass"],[3,"Felt"],[3,"H256"],[4,"ApiError"],[15,"usize"],[4,"BroadcastedTransaction"],[3,"EventsPage"],[3,"FlattenedSierraClass"],[3,"Arc"],[4,"StarknetSierraCompilationError"],[3,"Block"],[4,"Option"],[15,"u128"],[4,"MaybePendingBlockWithTxHashes"],[4,"MaybePendingBlockWithTxs"],[3,"FieldElement"],[4,"ContractClass"],[3,"EventFilterWithPage"],[3,"StateUpdate"],[4,"Transaction"],[4,"MaybePendingTransactionReceipt"],[3,"Rc"],[3,"RpcModule"],[3,"Backend"],[3,"OverrideHandle"],[3,"Pool"],[3,"SyncingService"],[3,"DeclareTransaction"],[4,"BroadcastedTransactionConversionErrorWrapper"],[4,"ContractClass"],[3,"Error"],[3,"Felt252Wrapper"],[3,"Transaction"],[3,"TypeId"],[15,"str"],[8,"StarknetRpcApiServer"]]},\
"mc_rpc_core":{"doc":"Starknet RPC API trait and types","t":"DIKKKLLKKLLKKLLLLKLLLLLKKKKKKKKKKKKKLLLLLLLLKLLLLLLKLLLLLLLALFFFFFFF","n":["Felt","StarknetRpcApiServer","add_declare_transaction","add_deploy_account_transaction","add_invoke_transaction","as_any","as_any_mut","block_hash_and_number","block_number","borrow","borrow_mut","call","chain_id","deref","deref_mut","deserialize","drop","estimate_fee","from","from_mut","from_mut","from_ref","from_ref","get_block_transaction_count","get_block_with_tx_hashes","get_block_with_txs","get_class","get_class_at","get_class_hash_at","get_events","get_nonce","get_state_update","get_storage_at","get_transaction_by_block_id_and_index","get_transaction_by_hash","get_transaction_receipt","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","into_rpc","pending_transactions","rewrite","rewrite","rewrite","rewrite","rewrite","serialize","syncing","try_from","try_into","type_id","unchecked_into","unique_saturated_into","upcast","upcast_mut","utils","vzip","casm_contract_class_to_compiled_class","flattened_sierra_to_casm_contract_class","get_block_by_block_hash","get_casm_cotract_class_hash","to_declare_transaction","to_rpc_contract_class","to_tx"],"q":[[0,"mc_rpc_core"],[61,"mc_rpc_core::utils"]],"d":["","Server trait implementation for the <code>StarknetRpcApi</code> RPC API.","Submit a new transaction to be added to the chain","Add a Deploy Account Transaction","Add an Invoke Transaction to invoke a contract function","","","Get the most recent accepted block hash and number","Get the most recent accepted block number","","","Call a contract function at a given block id","Get the chain id","","","","","Estimate the fee associated with transaction","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get the number of transactions in a block given a block id","Get block information with transaction hashes given the …","Get block information with full transactions given the …","Get the contract class definition in the given block …","Get the contract class at a given contract address for a …","Get the contract class hash in the given block for the …","Returns all events matching the given filter","Get the nonce associated with the given address at the …","Get the information about the result of executing the …","Get the value of the storage at the given address and key, …","Get the details of a transaction by a given block id and …","Returns the information about a transaction by transaction …","Returns the receipt of a transaction by transaction hash.","","Calls <code>U::from(self)</code>.","","","","","","Collects all the methods and subscriptions defined in the …","Returns the transactions in the transaction pool, …","","","","","","","Get an object about the sync status, or false if the node …","","","","","","","","","","Converts a CasmContractClass to a CompiledClass","Converts a FlattenedSierraClass to a CasmContractClass","Returns the current Starknet block from the block header’…","","","Returns a <code>ContractClass</code> from a <code>BlockifierContractClass</code>","Converts a broadcasted transaction to a transaction …"],"i":[0,0,49,49,49,15,15,49,49,15,15,49,49,15,15,15,15,49,15,15,15,15,15,49,49,49,49,49,49,49,49,49,49,49,49,49,15,15,15,15,15,15,15,49,49,15,15,15,15,15,15,49,15,15,15,15,15,15,15,0,15,0,0,0,0,0,0,0],"f":[0,0,[1,[[4,[[3,[2]]]]]],[5,[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],[[],7],[[],7],[[],[[9,[8]]]],[[],[[9,[10]]]],[[]],[[]],[[11,12],[[9,[[14,[13]]]]]],[[],[[9,[15]]]],[16],[16],[17,[[18,[15]]]],[16],[[[14,[19]],12],[[4,[[3,[2]]]]]],[[]],[[]],[[]],[[]],[[]],[12,[[9,[20]]]],[12,[[9,[21]]]],[12,[[9,[22]]]],[[12,23],[[9,[24]]]],[[12,23],[[9,[24]]]],[[12,23],[[9,[15]]]],[25,[[4,[[3,[2]]]]]],[[12,23],[[9,[15]]]],[12,[[9,[26]]]],[[23,23,12],[[9,[15]]]],[[12,16],[[9,[27]]]],[23,[[9,[27]]]],[23,[[9,[28]]]],[[],16],[[]],[[[3,[29]]],[[3,[7,29]]]],[[[30,[29]]],[[30,[7,29]]]],[[[31,[29]]],[[31,[7,29]]]],[[]],[[]],[[],32],[[],[[4,[[3,[2]]]]]],[[[14,[29]]],[[18,[[14,[29]]]]]],[[[3,[29]]],[[18,[[3,[29]]]]]],[18,[[18,[18]]]],[33,[[18,[33]]]],[[],18],[[15,34],18],[[],[[4,[[3,[2]]]]]],[[],18],[[],18],[[],35],[[]],[[]],[[]],[[]],0,[[]],[36,37],[[[30,[38]]],[[40,[36,39]]]],[[[42,[41]]],[[33,[43]]]],[36,23],[1,[[40,[44,45]]]],[46,[[40,[24]]]],[[19,47],[[40,[48,45]]]]],"c":[],"p":[[4,"BroadcastedDeclareTransaction"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"BroadcastedDeployAccountTransaction"],[3,"BroadcastedInvokeTransaction"],[8,"Any"],[3,"BlockHashAndNumber"],[6,"RpcResult"],[15,"u64"],[3,"FunctionCall"],[4,"BlockId"],[3,"String"],[3,"Vec"],[3,"Felt"],[15,"usize"],[8,"Deserializer"],[4,"Result"],[4,"BroadcastedTransaction"],[15,"u128"],[4,"MaybePendingBlockWithTxHashes"],[4,"MaybePendingBlockWithTxs"],[3,"FieldElement"],[4,"ContractClass"],[3,"EventFilterWithPage"],[3,"StateUpdate"],[4,"Transaction"],[4,"MaybePendingTransactionReceipt"],[3,"Global"],[3,"Arc"],[3,"Rc"],[3,"RpcModule"],[4,"Option"],[8,"Serializer"],[3,"TypeId"],[3,"CasmContractClass"],[3,"CompiledClass"],[3,"FlattenedSierraClass"],[4,"StarknetSierraCompilationError"],[6,"Result"],[8,"Block"],[8,"HeaderBackend"],[3,"Block"],[3,"DeclareTransaction"],[4,"BroadcastedTransactionConversionErrorWrapper"],[4,"ContractClass"],[3,"Felt252Wrapper"],[3,"Transaction"],[8,"StarknetRpcApiServer"]]},\
"mc_storage":{"doc":"Storage overrides readers","t":"DDDILLLLLLLLLLLLKLLKLLKLLLLLLLLLLLMLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLFFMLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["OverrideHandle","RuntimeApiStorageOverride","SchemaV1Override","StorageOverride","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","contract_class_by_address","contract_class_by_address","contract_class_by_address","contract_class_by_class_hash","contract_class_by_class_hash","contract_class_by_class_hash","contract_class_hash_by_address","contract_class_hash_by_address","contract_class_hash_by_address","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fallback","for_block_hash","for_schema_version","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_storage_by_storage_key","get_storage_by_storage_key","get_storage_by_storage_key","init","init","init","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","new","new","nonce","nonce","nonce","onchain_storage_schema","overrides_handle","schemas","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","vzip","vzip","vzip"],"q":[[0,"mc_storage"]],"d":["A handle containing multiple entities implementing …","A wrapper type for the Runtime API.","An override for runtimes that use Schema V1","Something that can fetch Starknet-related data. This trait …","","","","","","","","","","","","","Return the contract class at the provided address for the …","","","Return the contract class for a provided class_hash and …","","Return the contract class for a provided class_hash and …","Return the class hash at the provided address for the …","","","","","","","","","","","","A non-failing way to retrieve the storage data","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","get storage","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the nonce for a provided contract address and …","","Return the nonce for a provided contract address and block …","Retrieve the current <code>pallet-starknet</code> storage schema version","Create and return a handle of the starknet schema overrides","Contains one implementation of <code>StorageOverride</code> by version …","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,9,16,13,9,16,13,9,16,13,9,16,13,17,9,13,17,9,13,17,9,13,9,16,13,9,16,13,9,16,13,16,16,16,9,16,13,9,9,16,16,13,13,9,9,16,16,13,13,17,9,13,9,16,13,9,16,13,9,9,16,16,13,13,9,9,16,16,13,13,9,9,16,16,13,13,9,16,13,9,16,13,9,13,17,9,13,0,0,16,9,16,13,9,16,13,9,16,13,9,16,13,9,16,13,9,16,13,9,16,13,9,16,13,9,16,13],"f":[0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[4,[3]]]],[[[9,[5,[0,[[6,[5]],[8,[5,[7,[5]]]]]],[7,[5]]]],2],[[4,[3]]]],[[[13,[5,[0,[[10,[5]],11,12]]]],2],[[4,[3]]]],[14,[[4,[3]]]],[[[9,[5,[0,[[6,[5]],[8,[5,[7,[5]]]]]],[7,[5]]]],14],[[4,[3]]]],[[[13,[5,[0,[[10,[5]],11,12]]]],14],[[4,[3]]]],[2,[[4,[14]]]],[[[9,[5,[0,[[6,[5]],[8,[5,[7,[5]]]]]],[7,[5]]]],2],[[4,[14]]]],[[[13,[5,[0,[[10,[5]],11,12]]]],2],[[4,[14]]]],[15],[15],[15],[15],[15],[15],[15],[15],[15],0,[[[16,[5]],[0,[[6,[5]],[8,[5,[7,[5]]]]]]],[[18,[17]]]],[[[16,[5]],19],[[18,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,20],[[4,[21]]]],[[[9,[5,[0,[[6,[5]],[8,[5,[7,[5]]]]]],[7,[5]]]],2,20],[[4,[21]]]],[[[13,[5,[0,[[10,[5]],11,12]]]],2,20],[[4,[21]]]],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[[18,[22]]],[[18,[1,22]]]],[[[18,[22]]],[[18,[1,22]]]],[[[18,[22]]],[[18,[1,22]]]],[[[18,[22]]],[[18,[1,22]]]],[[[18,[22]]],[[18,[1,22]]]],[[[18,[22]]],[[18,[1,22]]]],[[[23,[22]]],[[23,[1,22]]]],[[[23,[22]]],[[23,[1,22]]]],[[[23,[22]]],[[23,[1,22]]]],[[[23,[22]]],[[23,[1,22]]]],[[[23,[22]]],[[23,[1,22]]]],[[[23,[22]]],[[23,[1,22]]]],[[[24,[22]]],[[24,[1,22]]]],[[[24,[22]]],[[24,[1,22]]]],[[[24,[22]]],[[24,[1,22]]]],[[[24,[22]]],[[24,[1,22]]]],[[[24,[22]]],[[24,[1,22]]]],[[[24,[22]]],[[24,[1,22]]]],[[]],[[]],[[]],[[]],[[]],[[]],[23,[[9,[5]]]],[23,[[13,[5]]]],[2,[[4,[25]]]],[[[9,[5,[0,[[6,[5]],[8,[5,[7,[5]]]]]],[7,[5]]]],2],[[4,[25]]]],[[[13,[5,[0,[[10,[5]],11,12]]]],2],[[4,[25]]]],[[[0,[[6,[5]],[8,[5,[7,[5]]]]]]],19],[[[23,[[0,[[10,[5]],[6,[5]],[8,[5,[7,[5]]]]]]]]],[[23,[[16,[5]]]]]],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[8,"Any"],[6,"ContractAddressWrapper"],[4,"ContractClass"],[4,"Option"],[8,"Block"],[8,"HeaderBackend"],[8,"Backend"],[8,"StorageProvider"],[3,"SchemaV1Override"],[8,"ProvideRuntimeApi"],[8,"Send"],[8,"Sync"],[3,"RuntimeApiStorageOverride"],[6,"ClassHashWrapper"],[15,"usize"],[3,"OverrideHandle"],[8,"StorageOverride"],[3,"Box"],[4,"StarknetStorageSchemaVersion"],[3,"FieldElement"],[3,"Felt252Wrapper"],[3,"Global"],[3,"Arc"],[3,"Rc"],[6,"NonceWrapper"],[4,"Result"],[3,"TypeId"],[15,"str"]]},\
"mc_transaction_pool":{"doc":"Substrate transaction pool implementation.","t":"DQQIQNDGNNDDDEDNNEQLLLLLLLLLLLLLLLLLLLLLLLLMKLKLKLKLLLLLLLLLLLLLLLLLMLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLMMLMLLLLMLLMLLMLLMLLLLLLLLLLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLNNENGNLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BasicPool","Block","BodyFuture","ChainApi","Error","Full","FullChainApi","FullPool","Invalid","Light","Options","Pool","PoolLimit","RevalidationType","Transaction","Unknown","Valid","ValidatedTransaction","ValidationFuture","__clone_box","__clone_box","__clone_box","api","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bits","as_byte_slice","as_ref","as_slice_of","ban_time","block_body","block_body","block_header","block_header","block_id_to_hash","block_id_to_hash","block_id_to_number","block_id_to_number","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone","clone","clone_into","clone_into","clone_into","count","data","data","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","duplicate","encode_hex","encode_hex_upper","eq","equivalent","equivalent","equivalent","error","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","future","hash","hash","hash_and_length","hash_and_length","hash_of","hash_of","import_notification_stream","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_exceeded","is_propagable","longevity","maintain","new","new","new_full","new_full","new_test","notification_future","on_broadcasted","parse_formatted","pool","priority","priority","propagate","provides","provides","prune","prune_known","prune_tags","ready","ready","ready_at","ready_transaction","reject_future_transactions","remove_invalid","requires","requires","resubmit","resubmit_at","source","status","submit_and_watch","submit_and_watch","submit_at","submit_at","submit_local","submit_one","submit_one","to_owned","to_owned","to_owned","total_bytes","tree_route","tree_route","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","valid_at","valid_till","validate_transaction","validate_transaction","validate_transaction_blocking","validated_pool","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_revalidation_type","BlockIdConversion","Blockchain","Error","Pool","Result","RuntimeApi","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from_mut","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_pool_error","source","to_string","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"mc_transaction_pool"],[291,"mc_transaction_pool::error"]],"d":["Basic implementation of transaction pool that can be …","Block type.","Body future (since block body might be remote)","Concrete extrinsic validation and query logic.","Error type.","Full revalidation type.","The transaction pool logic for full client.","A transaction pool for a full node.","Transaction that is invalid.","Light revalidation type.","Pool configuration options.","Extrinsics pool that performs validation.","Queue limits","Type of revalidation.","Immutable transaction","Transaction which validity can’t be determined.","Transaction that has been validated successfully.","Pre-validated transaction. Validated pool only accepts …","Validate transaction future.","","","","Get access to the underlying api","","","","","","","","","","","","","","","","","","","","","How long the extrinsic is banned for.","Returns a block body given the block.","","Returns a block header given the block id.","","Returns a block hash given the block id.","","Returns a block number given the block id.","","","","","","","","","","","","","","","","","","Number of bytes encoding of the transaction requires.","","","","","","","Maximal number of transactions in the queue.","","Raw extrinsic representing that transaction.","","","","","","","","","","","","","","","","","","","","","","","","","","Explicit transaction clone.","","","","","","","Transaction pool error.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Future queue limits.","","Transaction hash (unique)","Returns hash and encoding length of the extrinsic.","","Returns transaction hash","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if any of the provided values exceeds the …","","","","Create new transaction pool logic.","Create a new transaction pool.","Create new basic transaction pool for a full node with the …","Create new basic transaction pool for a full node with the …","Create new basic transaction pool with provided api, for …","Inform the transaction pool about imported and finalized …","","","Gets shared reference to the underlying pool.","","Transaction priority (higher = better)","Should that transaction be propagated.","","Tags that this transaction provides.","Prunes ready transactions.","Prunes known ready transactions.","Prunes ready transactions that provide given list of tags.","","Ready queue limits.","","","Reject future transactions.","","","Tags required by the transaction.","Resubmit some transaction that were validated elsewhere.","Resubmit the given extrinsics to the pool.","Source of that transaction.","","Import a single extrinsic and starts to watch its progress …","","Imports a bunch of unverified extrinsics to the pool","","","Imports one unverified extrinsic to the pool","","","","","Maximal size of encodings of all transactions in the queue.","Compute a tree-route between two blocks. See <code>TreeRoute</code> for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume validity result, transaction data and produce …","At which block the transaction becomes invalid?","Verify extrinsic at given block.","","Validates a transaction by calling into the runtime, same …","get a reference to the underlying validated pool.","","","","","","","","","Create new basic transaction pool with provided api and …","","","Transaction pool error type.","","Transaction pool result.","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,2,2,0,2,80,0,0,38,80,0,0,0,0,0,38,38,0,2,26,27,28,4,21,26,4,80,27,38,10,28,21,26,4,80,27,38,10,28,10,10,10,10,27,2,21,2,21,2,21,2,21,21,26,4,80,27,38,10,28,21,26,4,80,27,38,10,28,10,26,27,28,26,27,28,28,10,10,27,21,26,4,80,27,38,10,28,21,26,4,80,27,38,10,28,21,26,4,80,27,38,10,28,10,10,10,10,10,10,10,0,27,38,10,28,21,26,4,80,27,27,38,10,28,28,21,26,4,80,27,38,10,28,21,26,4,80,27,38,10,28,27,10,10,2,21,26,4,4,21,26,4,80,27,38,10,28,21,26,4,80,27,38,10,28,21,26,4,80,27,38,10,28,21,26,4,80,27,38,10,28,21,26,4,80,27,38,10,28,28,10,10,4,21,26,56,4,4,0,4,10,4,10,10,10,10,10,26,26,26,4,27,4,4,27,4,10,10,26,26,10,4,26,4,26,4,4,26,4,26,27,28,28,2,21,10,21,26,4,80,27,38,10,28,21,26,4,80,27,38,10,28,21,26,4,80,27,38,10,28,21,26,4,80,27,38,10,28,21,26,4,80,27,38,10,28,38,10,2,21,21,26,21,26,4,80,27,38,10,28,4,81,81,0,81,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[[4,[2,3]]],2],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],[[7,[6]]]],[[],[[9,[8]]]],[10],[[],[[13,[[9,[11]],12]]]],0,[[]],[[[21,[[0,[[14,[3]],[15,[3]],[16,[3]],[17,[3]],[18,[3]],19,20]],3]]]],[[],[[13,[22]]]],[[[21,[[0,[[14,[3]],[15,[3]],[16,[3]],[17,[3]],[18,[3]],19,20]],3]]],[[13,[22]]]],[23,[[13,[22]]]],[[[21,[[0,[[14,[3]],[15,[3]],[16,[3]],[17,[3]],[18,[3]],19,20]],3]],23],[[24,[22]]]],[23,[[13,[[22,[25]]]]]],[[[21,[[0,[[14,[3]],[15,[3]],[16,[3]],[17,[3]],[18,[3]],19,20]],3]],23],[[24,[[22,[25]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[26,[2]]],[[26,[2]]]],[27,27],[28,28],[[]],[[]],[[]],0,[10],0,[[],27],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[29],[[[10,[30,30]]],[[10,[30,30]]]],[[],[[32,[31]]]],[[],[[32,[31]]]],[[[10,[33,33]],[10,[33,33]]],34],[[],34],[[],34],[[],34],0,[[27,35],36],[[[38,[37,37,37]],35],36],[[[10,[37,37]],35],36],[[28,35],36],[[]],[[]],[[]],[[]],[39,27],[[]],[[]],[[]],[[]],[40,28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[10],0,[[]],[[[21,[[0,[[14,[3]],[15,[3]],[16,[3]],[17,[3]],[18,[3]],19,20]],3]]]],[[[26,[2]]]],[[[4,[2,3]],[41,[[4,[2,3]]]]],[[42,[[4,[2,3]]]]]],[[[4,[2,3]]],[[43,[[42,[[4,[2,3]]]]]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[45,[44]]],[[45,[5,44]]]],[[[45,[44]]],[[45,[5,44]]]],[[[45,[44]]],[[45,[5,44]]]],[[[45,[44]]],[[45,[5,44]]]],[[[45,[44]]],[[45,[5,44]]]],[[[45,[44]]],[[45,[5,44]]]],[[[45,[44]]],[[45,[5,44]]]],[[[45,[44]]],[[45,[5,44]]]],[[[46,[44]]],[[46,[5,44]]]],[[[46,[44]]],[[46,[5,44]]]],[[[46,[44]]],[[46,[5,44]]]],[[[46,[44]]],[[46,[5,44]]]],[[[46,[44]]],[[46,[5,44]]]],[[[46,[44]]],[[46,[5,44]]]],[[[46,[44]]],[[46,[5,44]]]],[[[46,[44]]],[[46,[5,44]]]],[[[47,[44]]],[[47,[5,44]]]],[[[47,[44]]],[[47,[5,44]]]],[[[47,[44]]],[[47,[5,44]]]],[[[47,[44]]],[[47,[5,44]]]],[[[47,[44]]],[[47,[5,44]]]],[[[47,[44]]],[[47,[5,44]]]],[[[47,[44]]],[[47,[5,44]]]],[[[47,[44]]],[[47,[5,44]]]],[[28,29,29],34],[10,34],[10,48],[[[4,[2,3]],49],[[51,[[45,[50]]]]]],[[46,[22,[52]],53],21],0,0,0,[[[46,[2]]]],[[[46,[[57,[3]]]],[46,[58]]]],[[[4,[2,3]],[61,[[42,[[4,[2,3]]]],[60,[59]]]]]],[62,[[13,[63,64]]]],[[[4,[2,3]]],[[46,[[26,[2]]]]]],[10,65],0,0,[10,[[9,[66]]]],0,[[[26,[2]],23,23,9],13],[[[26,[2]],23,9],13],[[[26,[2]],23,67,[0,[67,30]]],13],[[[4,[2,3]]],[[45,[68]]]],0,[[[4,[2,3]],25],[[51,[[45,[50]]]]]],[[[4,[2,3]],[42,[[4,[2,3]]]]],[[22,[46]]]],0,[[[4,[2,3]],[9,[[42,[[4,[2,3]]]]]]],[[60,[46]]]],[10,[[9,[66]]]],0,[[[26,[2]],[61,[38]]]],[[[26,[2]],23,69,67],[[13,[[60,[13]]]]]],0,[[[4,[2,3]]],70],[[[26,[2]],23,69],[[13,[0]]]],[[[4,[2,3]],23,69,[41,[[4,[2,3]]]]],[[72,[[51,[[45,[[71,[[4,[2,3]]]]]]]]]]]],[[[26,[2]],23,69,67],[[13,[[60,[13]]]]]],[[[4,[2,3]],23,69,[60,[[41,[[4,[2,3]]]]]]],[[72,[[60,[[13,[[42,[[4,[2,3]]]]]]]]]]]],[[[4,[[21,[[0,[[14,[3]],[15,[3]],[17,[3]],[16,[3]],[18,[3]],19,20]],3]],3]],23,[73,[[4,[[21,[[0,[[14,[3]],[15,[3]],[17,[3]],[16,[3]],[18,[3]],19,20]],3]],3]]]]],13],[[[26,[2]],23,69],13],[[[4,[2,3]],23,69,[41,[[4,[2,3]]]]],[[72,[[42,[[4,[2,3]]]]]]]],[[]],[[]],[[]],0,[[],[[13,[74]]]],[[[21,[[0,[[14,[3]],[15,[3]],[16,[3]],[17,[3]],[18,[3]],19,20]],3]]],[[13,[74]]]],[[],[[13,[[7,[6]],75]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[77,69,29,78],38],0,[[23,69]],[[[21,[[0,[[14,[3]],[15,[3]],[16,[3]],[17,[3]],[18,[3]],19,20]],3]],23,69]],[[[21,[[0,[[14,[3]],[15,[3]],[16,[3]],[17,[3]],[18,[3]],19,20]],3]],[23,[3]],69],[[24,[79]]]],[[[26,[2]]],[[0,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],5],[[],5],[[]],[[]],[29],[29],[29],[[81,35],36],[[81,35],36],[82,81],[[]],[83,81],[[]],[[]],[[],29],[[]],[[[45,[44]]],[[45,[5,44]]]],[[[46,[44]]],[[46,[5,44]]]],[[[47,[44]]],[[47,[5,44]]]],[81,[[13,[83,81]]]],[81,[[22,[84]]]],[[],59],[[],13],[[],13],[[],76],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"ChainApi"],[8,"Block"],[3,"BasicPool"],[8,"Any"],[8,"BitOrder"],[3,"BitSlice"],[15,"u8"],[15,"slice"],[3,"Transaction"],[8,"FromByteSlice"],[4,"Error"],[4,"Result"],[8,"ProvideRuntimeApi"],[8,"BlockBackend"],[8,"BlockIdTo"],[8,"HeaderBackend"],[8,"HeaderMetadata"],[8,"Send"],[8,"Sync"],[3,"FullChainApi"],[4,"Option"],[4,"BlockId"],[6,"Result"],[6,"NumberFor"],[3,"Pool"],[3,"Options"],[3,"PoolLimit"],[15,"usize"],[8,"Clone"],[15,"char"],[8,"FromIterator"],[8,"PartialEq"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"ValidatedTransaction"],[3,"Options"],[3,"Limit"],[6,"TransactionFor"],[6,"TxHash"],[6,"ImportNotificationStream"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[6,"TransactionLongevity"],[4,"ChainEvent"],[8,"Future"],[3,"Pin"],[3,"Registry"],[8,"SpawnEssentialNamed"],[8,"ExecutorProvider"],[8,"UsageProvider"],[6,"FullPool"],[8,"BlockchainEvents"],[8,"MaintainedTransactionPool"],[3,"String"],[3,"Vec"],[3,"HashMap"],[8,"Format"],[8,"FromFormattedStr"],[3,"Error"],[6,"TransactionPriority"],[6,"TransactionTag"],[8,"IntoIterator"],[8,"ReadyTransactions"],[4,"TransactionSource"],[3,"PoolStatus"],[6,"TransactionStatusStreamFor"],[6,"PoolFuture"],[6,"LocalTransactionFor"],[3,"TreeRoute"],[4,"BitSpanError"],[3,"TypeId"],[15,"u64"],[3,"ValidTransaction"],[6,"TransactionValidity"],[4,"RevalidationType"],[4,"Error"],[4,"Error"],[4,"Error"],[8,"Error"]]},\
"mp_digest_log":{"doc":"Utility to read the Starknet block form the Substrate …","t":"NEERNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Block","FindLogError","Log","MADARA_ENGINE_ID","MultipleLogs","NotLog","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","drop","drop","encode_to","ensure_log","eq","equivalent","equivalent","equivalent","equivalent","equivalent","find_log","find_starknet_block","fmt","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","identity","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","to_keyed_vec","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast_mut","upcast_mut","vzip","vzip"],"q":[[0,"mp_digest_log"]],"d":["","Error that may occur while searching a Madara [Log] in the …","A Madara log","","There was multiple Madara [Log] in the [Digest]","There was no Madara [Log] in the [Digest]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensure there is a single valid Madara Log in a given Digest","","","","","","","Return the Madara Log contained in a given Digest","Return the wrapped StarknetBlock contained in a given …","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[8,0,0,0,7,7,7,8,7,8,7,8,8,8,8,7,8,7,8,7,8,7,8,8,8,8,8,7,8,7,8,7,8,8,0,8,8,8,8,8,8,0,0,7,7,8,7,8,7,7,8,8,7,7,8,8,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,8,7,8,7,7,8,7,8,8,8,8,7,8,7,8,7,8,7,8,7,8,7,8],"f":[0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[4,[3]]]],[[]],[[]],[[]],[[]],[7,7],[8,8],[[]],[[]],[9,[[11,[8,10]]]],[[[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,9],[[11,[10]]]],[14],[14],[14],[14],[14],[14],[[8,[0,[15,16]]]],[17,[[11,[7]]]],[[8,8],18],[[],18],[[],18],[[],18],[[],18],[[],18],[17,[[11,[8,7]]]],[17,[[11,[19,7]]]],[[7,20],21],[[7,20],21],[[8,20],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[3,5]]]],[[],14],[[],14],[[]],[[]],[[[22,[5]]],[[22,[2,5]]]],[[[22,[5]]],[[22,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[]],[[]],[[]],[[]],[[[12,[3]]],[[6,[3,5]]]],[[]],[[]],[[],25],[[],11],[[],11],[[],11],[[],11],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"Any"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[4,"FindLogError"],[4,"Log"],[8,"Input"],[3,"Error"],[4,"Result"],[15,"slice"],[15,"u32"],[15,"usize"],[8,"Output"],[8,"Sized"],[3,"Digest"],[15,"bool"],[3,"Block"],[3,"Formatter"],[6,"Result"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"String"],[3,"TypeId"]]},\
"mp_starknet":{"doc":"Starknet primitives.","t":"AAAAAAAAAAADGGDGGLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLRRAAAAGDLLLLLLLLFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLAALLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAANDENDNNEDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDENDNNENNLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDEDLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLAFFAAFFADGLLLLLLLLMMMLLLMLLLLLLLLLLMMLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLNNNEGEDNNGNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDENNNSSNSSNSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGGGRRFFFFFRRDEGRINLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDEEDDENNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLMLLMLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLDIIMMLLLLMKLLLLLLLLLLLLLLLLLLLLLLKMLLLLLLLLRRRRRRRRRENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIAIIKKKKKDLLLLLALLLLLLLLLLLLLLLLLLLALLLLALLLLLRDRDRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNENNNNNNNNNNNNDNNDNNEDNNNNNNNNNNNDNGNNNNNNENNNNNENNDENNEDGDNEGENNNLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLMMMMLLMMMMMMMMLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMMLLLLLLLLLLLLLLLMMFFFF","n":["block","constants","crypto","execution","fees","sequencer_address","starknet_serde","state","storage","traits","transaction","Block","BlockTransactionReceipts","BlockTransactions","Header","MaxStorageSlots","MaxTransactions","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","block_number","block_timestamp","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event_commitment","event_count","extra_data","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","global_state_root","hash","header","identity","identity","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_block_context","into_mut","into_mut","into_ref","into_ref","is_clear","is_clear","max_encoded_len","max_encoded_len","new","new","parent_block_hash","protocol_version","sequencer_address","serialize","to_keyed_vec","to_keyed_vec","to_owned","to_owned","transaction_commitment","transaction_count","transaction_receipts","transactions","transactions_hashes","try_from","try_from","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_info","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast_mut","upcast_mut","vzip","vzip","INITIAL_GAS","SN_GOERLI_CHAIN_ID","commitment","hash","merkle_patricia_tree","state","ClassCommitmentLeafHash","StateCommitmentTree","__clone_box","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","calculate_class_commitment_leaf_hash","calculate_class_commitment_tree_root_hash","calculate_commitments","calculate_contract_state_hash","calculate_declare_tx_hash","calculate_deploy_account_tx_hash","calculate_event_commitment","calculate_event_hash","calculate_invoke_tx_hash","calculate_transaction_commitment","calculate_transaction_hash_common","clone","clone_into","commit","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","drop","encode","encode_to","eq","fmt","from","from_mut","from_mut","from_ref","from_ref","get","get_proof","identity","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","nodes","set","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","upcast","upcast_mut","using_encoded","vzip","Hasher","Pedersen","Poseidon","__clone_box","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clone","clone_into","compute_hash_on_elements","compute_hash_on_wrappers","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","drop","encode_to","from","from","from","from_mut","from_mut","from_ref","from_ref","hash","hash_bytes","hash_elements","identity","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","pedersen","poseidon","serialize","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","upcast","upcast_mut","vzip","PedersenHasher","__clone_box","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clone","clone_into","compute_hash_on_elements","compute_hash_on_wrappers","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","drop","encode_to","from","from_mut","from_mut","from_ref","from_ref","hash_bytes","hash_elements","hasher","identity","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","serialize","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","upcast","upcast_mut","vzip","PoseidonHasher","__clone_box","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clone","clone_into","compute_hash_on_elements","compute_hash_on_wrappers","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","drop","encode_to","from","from_mut","from_mut","from_ref","from_ref","hash_bytes","hash_elements","hasher","identity","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","serialize","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","upcast","upcast_mut","vzip","merkle_node","merkle_tree","ref_merkle_node","ref_merkle_tree","Binary","BinaryNode","Direction","Edge","EdgeNode","Leaf","Left","Node","NodeId","Right","Unresolved","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_binary","as_edge","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","common_path","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","defensive_max","defensive_max","defensive_max","defensive_max","defensive_max","defensive_min","defensive_min","defensive_min","defensive_min","defensive_min","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","defensive_strict_min","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","direction","drop","drop","drop","drop","drop","encode","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_child","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","identity","identity","identity","identity","identity","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","invert","is_binary","is_clear","is_empty","left","mark_dirty","next_id","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path_matches","right","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","using_encoded","vzip","vzip","vzip","vzip","vzip","Binary","BinaryProofNode","Edge","EdgeProofNode","MerkleTree","NodesMapping","ProofNode","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_hash","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","commit","commit_mut","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","empty","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get_proof","identity","identity","identity","identity","identity","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","left_hash","new","nodes","path","right_hash","serialize","set","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","vzip","vzip","vzip","vzip","vzip","Binary","BinaryNode","Direction","Edge","EdgeNode","Leaf","Left","Node","Right","Unresolved","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_binary","as_edge","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","common_path","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","direction","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_child","hash","hash","hash","height","height","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","invert","is_binary","is_empty","left","mark_dirty","path","path_matches","right","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","upcast_mut","vzip","vzip","vzip","vzip","Binary","BinaryProofNode","Edge","EdgeProofNode","ProofNode","RefMerkleTree","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_hash","clone","clone_into","commit","commit_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","empty","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get","get_proof","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","left_hash","path","right_hash","set","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","upcast_mut","vzip","vzip","vzip","vzip","ClassCommitment","StateCommitment","StorageCommitment","as_any","as_any_mut","borrow","borrow_mut","calculate","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","unchecked_into","unique_saturated_into","upcast","upcast_mut","vzip","call_entrypoint_wrapper","deserialize_bounded_btreemap","deserialize_option_bounded_btreemap","entrypoint_wrapper","felt252_wrapper","serialize_bounded_btreemap","serialize_option_bounded_btreemap","types","CallEntryPointWrapper","MaxCalldataSize","__clone_box","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","calldata","caller_address","class_hash","clear","clone","clone_into","compiled_class_hash","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","drop","encode_to","entrypoint_selector","entrypoint_type","eq","equivalent","equivalent","equivalent","equivalent","equivalent","execute","fmt","from","from_mut","from_mut","from_ref","from_ref","identity","init","initial_gas","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","is_clear","max_encoded_len","new","serialize","storage_address","to_keyed_vec","to_owned","try_from","try_from","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","unchecked_into","unique_saturated_into","upcast","upcast_mut","vzip","BlockContextSerializationError","Constructor","EntryPointExecution","EntryPointExecutionErrorWrapper","EntryPointExecutionResultWrapper","EntryPointTypeWrapper","EntryPointWrapper","External","L1Handler","MaxEntryPoints","StarknetApi","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","cmp","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","defensive_max","defensive_max","defensive_min","defensive_min","defensive_strict_max","defensive_strict_max","defensive_strict_min","defensive_strict_min","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","encode_to","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_hash","hash","identity","identity","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","is_clear","max_encoded_len","partial_cmp","partial_cmp","serialize","serialize","source","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_info","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","vzip","vzip","vzip","Felt252Wrapper","Felt252WrapperError","FromArrayError","InvalidCharacter","InvalidLength","MAX","ONE","OutOfRange","THREE","TWO","ValueTooLarge","ZERO","__clone_box","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone_into","cmp","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","encode_to","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_dec_str","from_hex_be","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_utf8","get_hash","hash","identity","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_clear","max_encoded_len","partial_cmp","serialize","to_keyed_vec","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast_mut","upcast_mut","vzip","vzip","ClassHashWrapper","CompiledClassHashWrapper","ContractAddressWrapper","StorageKeyWrapper","FEE_TRANSFER_N_STORAGE_CHANGES","FEE_TRANSFER_N_STORAGE_CHANGES_TO_CHARGE","calculate_l1_gas_by_vm_usage","calculate_tx_fee","charge_fee","extract_l1_gas_and_vm_usage","get_transaction_resources","DEFAULT_SEQUENCER_ADDRESS","INHERENT_IDENTIFIER","InherentDataProvider","InherentError","InherentType","SEQ_ADDR_STORAGE_KEY","SequencerAddressInherentData","WrongAddressFormat","__clone_box","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deref","deref","deref_mut","deref_mut","drop","drop","encode","encode_to","encode_to","fmt","fmt","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","identity","identity","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","is_fatal_error","new","provide_inherent_data","sequencer_address","sequencer_address","sequencer_address_inherent_data","to_keyed_vec","to_keyed_vec","to_owned","to_string","try_from","try_from","try_from","try_from","try_handle_error","try_into","try_into","twox_128","twox_128","twox_256","twox_256","twox_64_concat","twox_64_concat","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast_mut","upcast_mut","using_encoded","vzip","vzip","CalldataExceedsMaxSize","DataExceedMaxSize","DeserializeCallEntrypoint","DeserializeCallEntrypointError","DeserializeEventError","DeserializeEventWrapper","DeserializeTransaction","DeserializeTransactionError","EventsExceedMaxSize","FailedToParse","InvalidCallEntryPoint","InvalidCalldata","InvalidCallerAddress","InvalidCasmClassHash","InvalidClassHash","InvalidData","InvalidEntryPointType","InvalidEntrypointSelector","InvalidEvents","InvalidFelt252","InvalidHash","InvalidInitialGas","InvalidKeys","InvalidSenderAddress","InvalidSignature","InvalidStorageAddress","KeysExceedMaxSize","SignatureExceedsMaxSize","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_entrypoint","calldata","caller_address","casm_class_hash","class_hash","data","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","entrypoint_selector","entrypoint_type","events","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_address","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_contract_class","hash","init","init","init","init","init","init","initial_gas","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","keys","nonce","sender_address","serialize","serialize","serialize","signature","source","source","storage_address","to_string","to_string","to_string","transaction_from_json","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","version","vzip","vzip","vzip","vzip","vzip","vzip","DictStateReader","FeeConfig","StateChanges","address_to_class_hash","address_to_nonce","as_any","as_any_mut","borrow","borrow_mut","class_hash_to_class","count_state_changes","default","deref","deref_mut","drop","fmt","from","from_mut","from_mut","from_ref","from_ref","get_class_hash_at","get_compiled_class_hash","get_compiled_contract_class","get_nonce_at","get_storage_at","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","is_transaction_fee_disabled","storage_view","try_from","try_into","type_id","unchecked_into","unique_saturated_into","upcast","upcast_mut","vzip","PALLET_STARKNET","PALLET_STARKNET_SCHEMA","PALLET_SYSTEM","STARKNET_CONTRACT_CLASS","STARKNET_CONTRACT_CLASS_HASH","STARKNET_CURRENT_BLOCK","STARKNET_NONCE","STARKNET_STORAGE","SYSTEM_EVENTS","StarknetStorageSchemaVersion","Undefined","V1","__clone_box","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","clear","clone","clone_into","cmp","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","defensive_max","defensive_min","defensive_strict_max","defensive_strict_min","deref","deref_mut","deserialize","drop","encode_to","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_mut","from_mut","from_ref","from_ref","identity","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","is_clear","partial_cmp","serialize","to_keyed_vec","to_owned","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","unchecked_into","unique_saturated_into","upcast","upcast_mut","vzip","ThreadSafeCopy","hash","DefaultHasher","HasherT","compute_hash_on_elements","compute_hash_on_wrappers","hash_bytes","hash_elements","hasher","EventBuilder","as_any","as_any_mut","borrow","borrow_mut","build","constants","default","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","try_from","try_into","type_id","types","unchecked_into","unique_saturated_into","upcast","upcast_mut","utils","vzip","with_data","with_event_content","with_from_address","with_keys","VALIDATE_DECLARE_ENTRY_POINT_NAME","VALIDATE_DECLARE_ENTRY_POINT_SELECTOR","VALIDATE_DEPLOY_ENTRY_POINT_NAME","VALIDATE_DEPLOY_ENTRY_POINT_SELECTOR","VALIDATE_ENTRY_POINT_NAME","VALIDATE_ENTRY_POINT_SELECTOR","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","vzip","vzip","vzip","BlockContextSerializationError","BroadcastedTransactionConversionErrorWrapper","CairoResourcesNotContainedInFeeCosts","CalldataBoundError","CalldataConversionError","CalldataError","CasmClashHashNotNone","CasmContractClassConversionError","ClassHashComputationError","CompiledClassHashError","ContractAddressDerivationError","ContractClassProgramDecompressionError","ContractClassProgramDeserializationError","Declare","DeclareTransaction","DeclaredClassError","DeployAccount","DeployAccountTransaction","DeployedContractError","EntrypointExecution","EventError","EventWrapper","FailedToComputeL1GasUsage","FeeComputationError","FeeTransferError","FromArrayError","InconsistentOrdering","InvalidCharacter","InvalidData","InvalidFromAddress","InvalidKeys","InvalidLength","Invoke","InvokeTransaction","L1Handler","MaxArraySize","MissingCasmClassHash","MissingClass","MissingClassHash","MissingInformation","OutOfRange","ProgramConversionError","RPCTransactionConversionError","SierraCompilationError","SignatureBoundError","SignatureConversionError","StarknetApi","StarknetError","StateDiffError","StateError","TooManyEvents","Transaction","TransactionConversionError","TransactionConversionError","TransactionExecution","TransactionExecutionErrorWrapper","TransactionExecutionInfoWrapper","TransactionExecutionResultWrapper","TransactionReceiptWrapper","TransactionValidationError","TransactionValidationErrorWrapper","TransactionValidationResultWrapper","TxType","UnexpectedHoles","UnknownVersion","ValueTooLarge","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","account_class_hash","actual_fee","actual_fee","actual_resources","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","blake2_256","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","call_entrypoint","calldata","calldata","class_hash","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compiled_class_hash","contract_address_salt","contract_class","contract_class","data","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","events","execute","execute_call_info","fee_transfer_call_info","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_address","from_declare","from_deploy","from_invoke","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_tx_hash","handle_nonce","hash","identity","identity","identity","identity","identity","identity","identity","identity","identity","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_maybe_pending_transaction_receipt","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","is_clear","is_clear","is_clear","is_clear","is_clear","is_query","is_query","is_query","is_query","keys","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_encoded_len","max_fee","max_fee","max_fee","max_fee","new","new","nonce","nonce","nonce","nonce","salt","sender_address","sender_address","sender_address","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signature","signature","signature","source","source","source","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transaction_hash","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","twox_64_concat","tx_type","tx_type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","validate_account_tx","validate_call_info","validate_entry_point_selector","validate_entrypoint_calldata","validate_tx","verify_tx_version","version","version","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","actual_fee","max_fee","calculate_transaction_version","calculate_transaction_version_from_u8","felt_to_nonce","to_hash_map_entrypoints"],"q":[[0,"mp_starknet"],[11,"mp_starknet::block"],[151,"mp_starknet::constants"],[153,"mp_starknet::crypto"],[157,"mp_starknet::crypto::commitment"],[225,"mp_starknet::crypto::hash"],[285,"mp_starknet::crypto::hash::pedersen"],[339,"mp_starknet::crypto::hash::poseidon"],[393,"mp_starknet::crypto::merkle_patricia_tree"],[397,"mp_starknet::crypto::merkle_patricia_tree::merkle_node"],[734,"mp_starknet::crypto::merkle_patricia_tree::merkle_tree"],[997,"mp_starknet::crypto::merkle_patricia_tree::ref_merkle_node"],[1161,"mp_starknet::crypto::merkle_patricia_tree::ref_merkle_tree"],[1312,"mp_starknet::crypto::state"],[1343,"mp_starknet::execution"],[1351,"mp_starknet::execution::call_entrypoint_wrapper"],[1423,"mp_starknet::execution::entrypoint_wrapper"],[1595,"mp_starknet::execution::felt252_wrapper"],[1719,"mp_starknet::execution::types"],[1723,"mp_starknet::fees"],[1730,"mp_starknet::sequencer_address"],[1838,"mp_starknet::starknet_serde"],[2071,"mp_starknet::state"],[2114,"mp_starknet::storage"],[2188,"mp_starknet::traits"],[2190,"mp_starknet::traits::hash"],[2197,"mp_starknet::transaction"],[2234,"mp_starknet::transaction::constants"],[2324,"mp_starknet::transaction::types"],[3170,"mp_starknet::transaction::types::TransactionExecutionErrorWrapper"],[3172,"mp_starknet::transaction::utils"]],"d":["Starknet block related functionality. StarkNet block …","Starknet transaction constants.","Starknet crypto related functionality.","Starknet Execution related functionality. Starknet …","Starknet Fees related functionality.","Sequencer address inherent data.","Serializations and deserializations. This module contains …","Starknet state related functionality.","Starknet storage primitives. StarkNet storage primitives.","Starknet primitives traits.","Starknet transaction related functionality. Starknet …","Starknet block definition.","Block transaction receipts.","Block Transactions","Starknet header definition.","Maximum number of storage slots per contract","Block transactions max size","","","","","","","","","","","","","The number (height) of this block.","The time the sequencer created this block before executing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A commitment to the events produced in this block","The number of events","Extraneous data that might be useful for running …","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","The state commitment after this block.","Compute the hash of the header.","Return a reference to the block header","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Converts to a blockifier BlockContext","","","","","","","","","Creates a new header.","Creates a new block.","The hash of this block’s parent.","The version of the Starknet protocol used when creating …","The Starknet address of the sequencer who created this …","","","","","","A commitment to the transactions included in the block","The number of transactions in a block","Returns a reference to all transaction receipts.","Return a reference to all transactions","Return a reference to all transaction hashes","","","","","","","","","","","","","","","","","","","","","","","","","Initial gas for a transaction","ChainId for Starknet Goerli testnet","Compute the various commitments.","Hasher related functionality. This module contains the …","Merkle patricia tree for starknet.","Compute state related commitments and trees.","Hash of the leaf of the ClassCommitment tree","A Patricia Merkle tree with height 251 used to compute …","","","","","","","","","Calculate class commitment tree leaf hash value.","Calculate class commitment tree root hash value.","Calculate the transaction commitment, the event commitment …","Calculates the contract state hash from its preimage.","Computes the transaction hash of a declare transaction.","Computes the transaction hash of a deploy account …","Calculate transaction commitment hash value.","Calculate the hash of an event.","Computes the transaction hash of an invoke transaction.","Calculate transaction commitment hash value.","Computes the transaction hash using a hash function of …","","","Get the merkle root of the tree.","","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Returns a leaf of the tree stored at key <code>key</code>","Generates a proof for <code>key</code>. See <code>MerkleTree::get_proof</code>.","","","Calls <code>U::from(self)</code>.","","","","","","Returns the tree’s nodes","Sets the value of a key in the merkle tree.","","","","","","","","","","","","","","","","Available hashers in the StarkNet protocol.","The Pedersen hash function.","The Poseidon hash function.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Hashes a slice of bytes using the given hash function.","","","","","Calls <code>U::from(self)</code>.","","","","","","Pedersen hash module.","Poseidon hash module.","","","","","","","","","","","","","","","","The Pedersen hasher.","","","","","","","","","","","Compute hash on elements, taken from starknet-rs pending a …","Hashes a slice of field elements using the Pedersen hash …","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","The Pedersen hash function.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","The poseidon hasher.","","","","","","","","","","","","Hashes a slice of field elements using the Poseido hash …","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","The Poseidon hash function.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Contains constructs for describing the nodes in a Binary …","This is a gigantic copy pasta from …","Contains constructs for describing the nodes in a Binary …","This is a gigantic copy pasta from …","A branch node with exactly two children.","Describes the Node::Binary variant.","Describes the direction a child of a BinaryNode may have.","Describes a path connecting two other nodes.","Node that is an edge.","A leaf node that contains a value.","Left direction.","A node in a Binary Merkle-Patricia Tree graph.","Id of a Node within the tree","Right direction.","A node that has not been fetched from storage yet.","","","","","","","","","","","","","","","","Convert to node to binary node type (returns None if it’…","Convert to node to edge node type (returns None if it’s …","","","","","","","","","","","","","","","","","","","","","","","","","","The child of this node.","","","","","","","","","","","","","","","","","Returns the common bit prefix between the edge node’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maps the key’s bit at the binary node’s height to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Returns the Left or Right child.","","","","","","","","Get the hash of a node.","","","","The hash of this node. Is None if the node has not yet …","The hash of this node. Is None if the node has not yet …","The height of this node in the tree.","The starting height of this node in the tree.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Inverts the Direction.","Is the node a binary node.","","Returns true if the node represents an empty node – this …","Left child.","Convenience function which sets the inner node’s hash to …","Mutates the given NodeId to be the next one and returns it.","","","","","","The path this edge takes.","Returns true if the edge node’s path matches the same …","Right child.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Binary node.","Lightweight representation of BinaryNode. Only holds left …","Edge node.","Ligthtweight representation of EdgeNode. Only holds its …","A Starknet binary Merkle-Patricia tree with a specific …","Wrapper type for a HashMap&lt;NodeId, Node&gt; object. (It’s …","ProofNode s are lightweight versions of their <code>Node</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hash of the child node.","","","","","","","","","","","","Persists all changes to storage and returns the new root …","Return the state root.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Empty tree.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Returns the value stored at key, or <code>None</code> if it does not …","Generates a merkle-proof for a given <code>key</code>.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Left hash.","","Returns the nodes mapping","Path of the node.","Right hash.","","Sets the value of a key. To delete a key, set the value to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A branch node with exactly two children.","Describes the Node::Binary variant.","Describes the direction a child of a BinaryNode may have.","Describes a path connecting two other nodes.","Node that is an edge.","A leaf node that contains a value.","Left direction.","A node in a Binary Merkle-Patricia Tree graph.","Right direction.","A node that has not been fetched from storage yet.","","","","","","","","","","","","","Convert to node to binary node type (returns None if it’…","Convert to node to edge node type (returns None if it’s …","","","","","","","","","The child of this node.","","","","","","","","","Returns the common bit prefix between the edge node’s …","","","","","","","","","Maps the key’s bit at the binary node’s height to a …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Returns the Left or Right child.","Get the hash of a node.","The hash of this node. Is None if the node has not yet …","The hash of this node. Is None if the node has not yet …","The height of this node in the tree.","The starting height of this node in the tree.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Inverts the Direction.","Is the node a binary node.","Returns true if the node represents an empty node – this …","Left child.","Convenience function which sets the inner node’s hash to …","The path this edge takes.","Returns true if the edge node’s path matches the same …","Right child.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Binary node.","Lightweight representation of BinaryNode. Only holds left …","Edge node.","Ligthtweight representation of EdgeNode. Only holds its …","ProofNode s are lightweight versions of their <code>Node</code> …","A Starknet binary Merkle-Patricia tree with a specific …","","","","","","","","","","","","","","","","","","Hash of the child node.","","","Persists all changes to storage and returns the new root …","Return the state root.","","","","","","","","","","","","","Empty tree.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Returns the value stored at key, or <code>None</code> if it does not …","Generates a merkle-proof for a given <code>key</code>.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Left hash.","Path of the node.","Right hash.","Sets the value of a key. To delete a key, set the value to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Root of the Merkle-Patricia tree whose leaves are the …","Global Starknet State Commitment","Root of the Merkle-Patricia tree whose leaves are the …","","","","","Calculates  global state commitment by combining the …","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Call Entrypoint Wrapper related types","Deserialization of BoundedBTreeMap. This is needed for the …","Deserialization of an <code>Option&lt;BoundedBTreeMap&gt;</code> object. This …","Entrypoint Wrapper related types","Felt252Wrapper type","Serialization of BoundedBTreeMap. This is needed for the …","Serialization of <code>Option&lt;BoundedBTreeMap&gt;</code>. This is needed …","All the types related to the execution of a transaction.","Representation of a Starknet Call Entry Point.","Max number of calldata / tx.","","","","","","","","","The Calldata","The caller address","The class hash","","","","The casm class hash used in declare v2","","","","","","","","","","","The entrypoint selector An invoke transaction without an …","The entrypoint type","","","","","","","Executes an entry point.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","The initial gas","Calls <code>U::from(self)</code>.","","","","","","","","Creates a new instance of a call entrypoint.","","The storage address","","","Converts a <code>DeserializeCallEntrypoint</code> into a …","","","","","","","","","","","","","","Block context serialization error.","A constructor entry point.","Transaction execution error.","Wrapper type for transaction execution error.","Wrapper type for transaction execution result.","Enum that represents all the entrypoints types.","Representation of a Starknet Entry Point.","An external entry point.","An L1 handler entry point.","Max number of entrypoints.","Starknet API error.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error related to Felt252Wrapper.","Conversion from byte array has failed.","Invalid character in hex string.","Provided byte array has incorrect lengths.","Field252 constant that’s equal to 2^251 + 17 * 2^192","Field252 constant that’s equal to 1","Value is too large for FieldElement (felt252).","Field252 constant that’s equal to 3","Field252 constant that’s equal to 2","Value is too large to fit into target type.","Field252 constant that’s equal to 0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","Initializes from a decimal string.","Initializes from a hex string.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Decodes the bytes representation in utf-8","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapper type for class hash field.","Wrapper type for compiled class hash field.","Type wrapper for a contract address.","Type wrapper for a storage key;","Number of storage updates for the fee transfer tx.","Number of storage updates to actually charge for the fee …","Calculates the L1 gas consumed when submitting the …","Computes the fees from the execution resources.","Charges the fees for a specific execution resources.","Computes the fees for l1 gas usage and the vm usage from …","Gets the transaction resources.","Default value in case the sequencer address is not set.","The identifier for the <code>sequencer_address</code> inherent.","The inherent data provider for sequencer address.","Error types when working with the sequencer address.","The inherent type for the sequencer address.","The storage key for the sequencer address value.","Auxiliary trait to extract sequencer address inherent data.","Submitted address must be <code>[u8; 32]</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Create <code>Self</code> using the given <code>addr</code>.","","Returns the sequencer address of this inherent data …","The sequencer address field.","Get sequencer address inherent data.","","","","","","Try to create an instance ouf of the given identifier and …","","","","","","","","","","","","","","","","","","","","","","","","","CalldataExceedsMaxSize error","DataExceedMaxSize error","Struct for deserializing CallEntryPoint from JSON","Error enum for CallEntrypoint deserialization","Error enum for Event deserialization","Struct for deserializing Event from JSON","Struct for deserializing Transaction from JSON","Error enum for Transaction deserialization","EventsExceedMaxSize error","FailedToParse error","InvalidCallEntryPoint error","InvalidCalldata error","InvalidCallerAddress error","InvalidCasmClassHash error","InvalidClassHash error","InvalidData error","InvalidEntryPointType error","InvalidEntrypointSelector error","InvalidEvents error","InvalidFelt252 error","InvalidHash error","InvalidCallerAddress error","InvalidKeys error","InvalidSenderAddress error","InvalidSignature error","InvalidStorageAddress error","KeysExceedMaxSize error","SignatureExceedsMaxSize error","","","","","","","","","","","","","","","","","","","","","","","","","Call entrypoint","The Calldata","The caller address","The casm class hash for declare v2","The class hash","The data of the event.","","","","","","","","","","","","","","","","","","","","","","The entrypoint selector An invoke transaction without an …","The entrypoint type","Events","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","The address that emitted the event","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Create a <code>ContractClass</code> from a JSON string","Transaction hash.","","","","","","","The initial gas","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The keys (topics) of the event.","Nonce","Sender Address","","","","Signature","","","The storage address","","","","Create a <code>Transaction</code> from a JSON string and an optional …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The version of the transaction","","","","","","","A simple implementation of <code>StateReader</code> using <code>HashMap</code>s as …","This trait allows to get the fee config for the pallet and …","This trait allows to get the state changes of a starknet …","The class hash of each contract.","The nonce of each contract.","","","","","The class of each class hash.","This function counts the storage var updates implied by a …","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","This function reads the DisableTransactionFee from the …","The storage layout.","","","","","","","","","Pallet Starknet storage items. Pallet name.","Current version of pallet Starknet’s storage schema is …","System storage items. Pallet name.","Starknet contract class storage item.","Starknet contract class hash storage item.","Starknet current block storage item.","Starknet nonce storage item.","Starknet storage","System events storage item.","The schema version for Pallet Starknet’s storage.","Undefined schema.","Schema V1.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","A trait for types that can be shared between threads + …","Define traits related to hash functions. Traits for …","A trait for default hashing instance.","A trait for hashing.","Computes a hash chain over the data, in the following …","Arguments","Hashes the given data.","Hashes the 2 felts sent.","Get Hasher default instance.","Builder pattern for <code>EventWrapper</code>.","","","","","Builds the event.","Constants related to transactions.","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","Types related to transactions.","","","","","Functions related to transaction conversions","","Sets the data of the event.","Sets keys and data from an event content.","Sets the from address of the event.","Sets the keys of the event.","validate declare entry point name","validate declare entry point selector","validate deploy entry point name","validate deploy entry point selector","validate entry point name","validate entry point selector","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Block context serialization error.","Wrapper type for broadcasted transaction conversion errors.","Cairo resources are not contained in the fee costs.","Failed to bound calldata Vec by MaxCalldataSize","Failed to convert calldata","Calldata error","Casm class hash must be None in Transaction for version &lt;=1","Failed to convert Casm contract class to ContractClassV1","Failed to compute the contract class hash.","Computed compiled class hash doesn’t match with the …","Impossible to derive the contract address from the object …","Failed to decompress the contract class program","Failed to deserialize the contract class program","Declare transaction.","Declare transaction.","Couldn’t register newly declared contracts.","Deploy account transaction.","Deploy account transaction.","Couldn’t register newly deployed contracts.","Entrypoint execution error","Error enum wrapper for events.","Representation of a Starknet event.","Failed to compute the L1 gas usage.","Fee computation error,","Fee transfer error,","Conversion from byte array has failed.","Inconsistent ordering","Invalid character in hex string.","Provided data is invalid.","Provided from address is invalid.","Provided keys are invalid.","Provided byte array has incorrect lengths.","Regular invoke transaction.","Invoke transaction.","Message sent from ethereum.","Max size of arrays. TODO: add real value (#250)","Casm class hash is missing from the object of type …","Class is missing from the object of type Transaction","Class hash is missing from the object of type Transaction","Missing information","Value is too large for FieldElement (felt252).","Failed to convert program to program wrapper“","Error of conversion between the Madara Primitive …","Failed to compile Sierra to Casm","Failed to bound signatures Vec by MaxArraySize","Failed to convert signature","Starknet API error.","Starknet Error","Error enum wrapper for state diffs.","State error.","Too many events","Representation of a Starknet transaction.","Error of conversion between DeclareTransaction, …","Failed to convert transaction","Transaction execution error.","Wrapper type for transaction execution error.","This struct wraps the [TransactionExecutionInfo] type from …","Wrapper type for transaction execution result.","Representation of a Starknet transaction receipt.","Transaction execution error","Wrapper type for transaction validation error.","Wrapper type for transaction validation result.","Different tx types. See …","Unexpected holes.","The u8 stored version doesn’t match any of the existing …","Value is too large to fit into target type.","","","","","","","","","","Account class hash.","Fee paid for the transaction.","The actual fee that was charged (in Wei).","Actual execution resources the transaction is charged for, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new instance of an event builder.","Call entrypoint","Transaction calldata.","Transaction calldata.","Sierra class hash used in V2.","","","","","","","","","","","","","","","","","","","","","","","","Class hash to declare.","Contract Address Salt","Contract to declare.","Contract Class","The data of the event.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an empty event.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Messages sent in the transaction. Events emitted in the …","Executes a transaction","Transaction execution call info; None for <code>Declare</code>.","Fee transfer call info; None for <code>L1Handler</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","The address that emitted the event","converts the transaction to a Transaction object","converts the transaction to a Transaction object","converts the transaction to a Transaction object","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Creates a new instance of a transaction without signature.","Handles the nonce of a transaction","Transaction hash.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a <code>TransactionReceiptWrapper</code> to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If set to <code>true</code>, uses a query-only transaction version that…","If set to <code>true</code>, uses a query-only transaction version that…","If set to <code>true</code>, uses a query-only transaction version that…","If set to <code>true</code>, uses a query-only transaction version that…","The keys (topics) of the event.","","","","","","","","","","Max fee.","Max fee.","Max fee.","Max fee.","Creates a new instance of a transaction.","Creates a new instance of an event.","Account contract nonce.","Account contract nonce.","Account contract nonce.","Nonce","Transaction salt.","Transaction sender address.","Transaction sender address.","Sender Address","","","","","","","","Transaction signature.","Transaction signature.","Transaction signature.","Signature.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transaction hash.","","","","","","","","","","","","Converts a <code>DeserializeTransaction</code> into a <code>Transaction</code>.","","","","Converts a <code>DeserializeEventWrapper</code> into an <code>EventWrapper</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type of the transaction.","Transaction type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validates account transaction","Transaction validation call info; None for <code>L1Handler</code>.","Returns the validate entry point selector.","Calldata for validation contains transaction fields that …","Validates a transaction","Verifies if a transaction has the correct version","Transaction version.","Transaction version.","Transaction version.","The version of the transaction.","","","","","","","","","","","","","","","","Actual fee.","Max fee specified by the set.","Estimate fee adds an additional offset to the transaction …","calls calculate_transaction_version after converting …","converts Felt252Wrapper to Nonce","Returns a HashMap&lt;EntryPointTypeWrapper, Vec&gt; from …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,7,8,7,8,7,8,7,8,7,8,7,7,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,7,7,7,7,8,8,8,8,8,7,7,7,7,8,7,8,7,7,8,8,7,7,8,8,7,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,7,8,7,8,7,8,7,8,7,8,7,7,7,7,7,8,7,8,7,7,8,8,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,0,0,0,0,0,0,0,0,47,47,47,47,47,47,47,47,0,0,0,0,0,0,0,0,0,0,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,53,53,53,53,53,53,53,53,53,53,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,0,0,0,56,0,0,56,0,56,60,0,0,60,56,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,56,56,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,58,59,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,58,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,57,59,56,57,58,60,59,59,56,57,58,60,59,56,57,58,60,59,59,59,59,59,56,56,56,56,56,57,57,57,57,57,58,58,58,58,58,60,60,60,60,60,59,56,57,58,60,59,56,57,58,60,60,59,59,56,56,57,57,58,58,60,60,59,59,56,56,57,57,58,58,60,60,57,59,56,57,58,60,59,56,56,57,58,60,57,58,57,58,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,60,56,59,56,57,56,59,59,56,57,58,60,58,58,57,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,59,56,57,58,60,50,0,50,0,0,0,0,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,68,51,51,67,68,50,69,51,67,68,50,69,69,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,69,51,67,68,50,69,51,67,68,50,69,51,51,51,51,51,51,67,68,50,69,51,67,68,50,69,51,51,67,67,68,68,50,50,69,69,51,51,67,67,68,68,50,50,69,69,69,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,51,69,68,67,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,51,67,68,50,69,71,0,0,71,0,71,74,0,74,71,71,72,73,74,71,72,73,74,71,72,73,74,71,71,71,72,73,74,71,72,73,74,73,71,72,73,74,71,72,73,74,73,71,72,73,74,71,72,73,74,72,71,72,73,74,71,72,73,74,74,74,74,74,74,71,72,73,74,71,72,73,74,74,71,71,72,72,73,73,74,74,71,71,72,72,73,73,74,74,72,71,72,73,72,73,71,72,73,74,71,72,73,74,71,72,73,74,74,71,72,73,74,71,72,73,74,71,72,73,74,74,71,71,72,71,73,73,72,71,72,73,74,71,72,73,74,71,72,73,74,71,72,73,74,71,72,73,74,71,72,73,74,71,72,73,74,71,72,73,74,71,72,73,74,79,0,79,0,0,0,76,77,78,79,76,77,78,79,76,77,78,79,76,77,78,79,76,78,76,76,76,76,77,78,79,76,77,78,79,76,77,78,79,76,76,77,78,79,77,77,77,77,77,78,78,78,78,78,79,79,79,79,79,77,78,79,76,77,78,79,79,79,76,77,77,78,78,79,79,76,76,77,77,78,78,79,79,76,76,76,76,77,78,79,76,77,78,79,76,77,78,79,76,77,78,79,77,78,79,76,77,78,79,76,77,78,79,76,77,78,77,76,76,77,78,79,76,77,78,79,76,77,78,79,76,77,78,79,76,77,78,79,76,77,78,79,76,77,78,79,76,77,78,79,76,0,0,0,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,0,0,0,0,0,0,0,0,0,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,99,93,99,0,0,0,0,93,93,0,99,93,98,93,98,99,93,98,99,93,98,93,98,93,98,93,98,99,93,98,99,93,93,98,93,98,93,98,93,98,93,98,93,98,93,98,93,93,98,93,98,93,98,93,98,93,98,99,93,98,99,93,98,93,98,99,93,98,93,98,93,93,93,93,93,98,98,98,98,98,93,98,99,99,93,93,98,98,98,99,99,99,93,93,98,98,99,99,93,93,98,98,99,99,93,93,93,98,93,98,99,93,98,99,93,98,99,93,98,99,93,98,99,93,98,99,93,98,99,93,93,93,98,93,98,99,93,98,93,98,99,93,98,99,93,98,99,93,98,93,98,93,98,93,98,99,93,93,98,99,93,98,99,93,98,99,93,98,99,93,98,99,0,0,107,107,107,22,22,107,22,22,107,22,22,22,107,22,107,22,22,22,22,107,22,107,22,22,22,22,22,22,22,22,22,22,22,22,22,22,107,22,107,22,22,107,22,22,107,22,22,22,22,22,22,107,107,22,22,22,22,22,22,22,22,107,107,22,22,22,22,107,107,22,22,107,107,22,22,22,22,22,107,22,107,22,107,22,107,22,107,22,107,22,107,22,22,22,22,22,22,107,22,22,22,22,22,107,22,107,22,22,22,22,107,22,22,107,22,107,22,107,22,107,22,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,122,123,122,123,122,123,122,123,122,123,122,123,122,123,122,122,122,123,122,123,122,123,122,123,122,122,123,122,123,122,123,122,122,123,122,123,123,122,123,122,123,123,122,122,123,123,122,122,123,122,123,122,123,122,123,122,123,122,123,122,123,122,123,122,123,122,122,122,122,177,123,122,122,123,123,123,122,122,122,123,122,123,122,123,122,123,122,123,122,123,122,123,122,123,122,123,122,122,123,122,132,133,0,0,0,0,0,0,134,134,134,132,132,132,132,133,132,132,134,133,134,132,133,134,134,132,133,134,96,132,130,133,131,134,96,132,130,133,131,134,96,132,130,133,131,134,96,132,130,133,131,134,131,96,96,96,96,130,96,132,130,133,131,134,96,132,130,133,131,134,96,130,131,96,132,130,133,131,134,96,96,131,96,132,132,130,133,133,131,134,134,96,132,130,133,133,131,134,134,134,130,96,96,132,132,130,130,133,133,131,131,134,134,96,96,132,132,130,130,133,133,131,131,134,134,0,131,96,132,130,133,131,134,96,96,132,130,133,131,134,96,132,130,133,131,134,96,132,130,133,131,134,96,132,130,133,131,134,96,132,130,133,131,134,96,132,130,133,131,134,130,131,131,96,130,131,131,133,134,96,132,133,134,0,96,132,130,133,131,134,96,132,130,133,131,134,96,132,130,133,131,134,96,132,130,133,131,134,96,132,130,133,131,134,96,132,130,133,131,134,96,132,130,133,131,134,131,96,132,130,133,131,134,0,0,0,136,136,136,136,136,136,136,117,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,118,136,136,136,136,136,136,136,136,136,0,0,0,0,0,0,0,0,0,0,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,0,0,0,0,21,21,21,21,178,0,144,144,144,144,144,0,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,0,144,144,144,144,0,144,144,144,144,144,0,0,0,0,0,0,147,149,150,147,149,150,147,149,150,147,149,150,147,147,149,149,150,150,147,149,150,147,149,150,147,149,150,147,147,149,149,150,150,147,147,149,149,150,150,147,149,150,147,149,150,147,149,150,147,149,150,147,149,150,147,149,150,147,149,150,147,149,150,147,149,150,147,149,150,147,149,150,147,149,150,147,149,150,147,149,150,147,149,150,115,0,115,157,157,155,156,157,157,157,156,157,157,121,0,152,121,0,152,115,0,0,115,115,115,158,145,158,145,145,145,158,121,0,121,0,156,156,156,158,158,157,0,157,157,157,115,157,0,115,145,0,0,157,115,0,0,0,0,155,0,0,0,115,158,158,121,41,42,44,39,151,40,145,152,42,151,153,153,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,121,41,42,44,39,151,40,145,152,121,41,42,44,39,151,40,145,152,121,41,42,44,39,151,40,145,152,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,40,39,42,44,41,42,44,39,151,40,121,41,42,44,39,151,40,145,152,121,41,42,44,39,151,40,145,152,41,39,41,39,40,121,41,42,44,39,151,40,145,152,121,41,42,44,39,151,40,145,152,121,41,42,44,39,151,40,145,152,121,41,42,44,39,151,40,145,152,42,44,39,151,40,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,121,41,42,44,39,151,40,145,152,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,40,121,41,42,44,39,151,40,145,152,121,41,42,44,39,151,40,145,152,121,121,121,121,121,41,41,41,41,41,42,42,42,42,42,44,44,44,44,44,39,39,39,39,39,151,151,151,151,151,40,40,40,40,40,145,145,145,145,145,152,152,152,152,152,151,39,153,153,115,115,155,155,121,41,42,156,156,44,39,151,40,153,145,145,152,152,157,157,158,158,115,115,115,115,115,115,155,155,155,155,121,121,41,42,156,44,44,39,151,40,153,145,152,157,157,157,157,158,158,40,41,42,44,115,115,155,155,121,121,41,41,42,42,156,156,44,44,39,39,151,151,40,40,153,153,145,145,152,152,157,157,158,158,115,115,155,155,121,121,41,41,42,42,156,156,44,44,39,39,151,151,40,40,153,153,145,145,152,152,157,157,158,158,39,39,39,121,41,42,44,39,151,40,145,152,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,151,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,42,44,39,151,40,41,42,44,39,40,121,41,42,44,39,151,40,145,152,41,42,44,39,39,40,41,42,44,39,42,41,44,39,121,42,44,151,40,145,152,41,42,44,39,115,155,157,121,41,42,44,39,151,40,145,152,121,41,42,44,39,151,40,145,152,115,155,156,145,152,157,158,151,115,155,121,41,41,42,42,42,156,44,44,39,39,151,40,40,153,145,152,157,158,115,155,121,41,42,156,44,39,39,39,39,39,151,40,153,145,152,157,158,121,41,42,44,39,151,40,145,152,121,41,42,44,39,151,40,145,152,121,41,42,44,39,151,40,145,152,39,151,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,121,41,42,44,39,151,40,145,152,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,39,153,39,39,39,39,41,42,44,39,115,155,121,41,42,156,44,39,151,40,153,145,152,157,158,179,179,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[7,7],[8,8],[[]],[[]],[9,[[11,[7,10]]]],[9,[[11,[8,10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[],7],[[],8],[14],[14],[14],[14],[15,[[11,[7]]]],[15,[[11,[8]]]],[14],[14],[[7,[0,[16,17]]]],[[8,[0,[16,17]]]],[[7,7],18],[[8,8],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,0,[[7,19],20],[[8,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[7,21],22],[8,7],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],14],[[],14],[[]],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[7,26,27],28],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],14],[[],14],[[22,29,22,26,29,30,22,30,22,3,[32,[31]]],7],[[7,33,34],8],0,0,0,[[7,35],11],[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[]],[[]],0,0,[8,34],[8,33],[8,[[6,[22]]]],[[],11],[[],11],[[],11],[[],11],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],36],[[],36],[[],37],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[4,[3]]]],[[]],[[]],[22,38],[[[12,[22]]],22],[[[12,[39]],[12,[40]]]],[[22,22,22],22],[[41,22],22],[[42,22,22],22],[[[12,[40]]],22],[40,43],[[44,22],22],[[[12,[39]]],22],[[22,[12,[22]],22,22,45,[12,[3]],22,[32,[22]]],22],[[[47,[[0,[46,21]]]]],[[47,[[0,[46,21]]]]]],[[]],[[[47,[21]]],22],[9,[[11,[[47,[21]],10]]]],[[[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,9],[[11,[10]]]],[[],[[47,[21]]]],[14],[14],[14],[[[47,[21]]],[[6,[3]]]],[[[47,[21]],[0,[16,17]]]],[[[47,[[0,[48,21]]]],[47,[[0,[48,21]]]]],18],[[[47,[[0,[49,21]]]],19],20],[[]],[[]],[[]],[[]],[[]],[[[47,[21]],22],[[32,[22]]]],[[[47,[21]],22],[[6,[50]]]],[[],[[6,[3,5]]]],[[],14],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[]],[[]],[[[47,[21]]],51],[[[47,[21]],22,22]],[[[12,[3]]],[[6,[3,5]]]],[[]],[[],11],[[],11],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],36],[[],37],[[]],[[]],[[]],[[]],[[[47,[21]],52]],[[]],0,0,0,[1],[[],2],[[],2],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[4,[3]]]],[[]],[[]],[53,53],[[]],[[53,[12,[43]]],43],[[53,[12,[22]]],22],[9,[[11,[53,10]]]],[[[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,9],[[11,[10]]]],[[],53],[14],[14],[15,[[11,[53]]]],[14],[[53,[0,[16,17]]]],[[]],[54,53],[55,53],[[]],[[]],[[]],[[]],[[53,[12,[3]]],22],[[53,[12,[3]]],22],[[53,43,43],43],[[],[[6,[3,5]]]],[[],14],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[]],[[]],0,0,[[53,35],11],[[[12,[3]]],[[6,[3,5]]]],[[]],[[],11],[[],11],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],36],[[],37],[[]],[[]],[[]],[[]],[[]],0,[1],[[],2],[[],2],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[4,[3]]]],[[]],[[]],[54,54],[[]],[[54,[12,[43]]],43],[[54,[12,[22]]],22],[9,[[11,[54,10]]]],[[[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,9],[[11,[10]]]],[[],54],[14],[14],[15,[[11,[54]]]],[14],[[54,[0,[16,17]]]],[[]],[[]],[[]],[[]],[[]],[[54,[12,[3]]],22],[[54,43,43],43],[[],54],[[],[[6,[3,5]]]],[[],14],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[]],[[]],[[54,35],11],[[[12,[3]]],[[6,[3,5]]]],[[]],[[],11],[[],11],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],36],[[],37],[[]],[[]],[[]],[[]],[[]],0,[1],[[],2],[[],2],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[4,[3]]]],[[]],[[]],[55,55],[[]],[[55,[12,[43]]],43],[[55,[12,[22]]],22],[9,[[11,[55,10]]]],[[[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,9],[[11,[10]]]],[[],55],[14],[14],[15,[[11,[55]]]],[14],[[55,[0,[16,17]]]],[[]],[[]],[[]],[[]],[[]],[[55,[12,[3]]],22],[[55,43,43],43],[[],55],[[],[[6,[3,5]]]],[[],14],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[]],[[]],[[55,35],11],[[[12,[3]]],[[6,[3,5]]]],[[]],[[],11],[[],11],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],36],[[],37],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[56,[[32,[57]]]],[56,[[32,[58]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[59,59],[56,56],[57,57],[58,58],[60,60],[[]],[[]],[[]],[[]],[[]],[[59,59],61],[[56,56],61],[[57,57],61],[[58,58],61],[[60,60],61],[[58,[63,[3,62]]],[[63,[3,62]]]],[9,[[11,[59,10]]]],[9,[[11,[56,10]]]],[9,[[11,[57,10]]]],[9,[[11,[58,10]]]],[9,[[11,[60,10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[],59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[57,[63,[3,62]]],60],[14],[14],[14],[14],[14],[59,[[6,[3]]]],[[59,[0,[16,17]]]],[[56,[0,[16,17]]]],[[57,[0,[16,17]]]],[[58,[0,[16,17]]]],[[60,[0,[16,17]]]],[[59,59],18],[[56,56],18],[[57,57],18],[[58,58],18],[[60,60],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[59,19],20],[[56,19],20],[[57,19],20],[[58,19],20],[[60,19],20],[[]],[[]],[[]],[[]],[18,60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[57,60],59],[[[0,[64,17]],65],29],[[[0,[64,17]],65],29],[[[0,[64,17]],65],29],[[[0,[64,17]],65],29],[[[0,[64,17]],65],29],[[59,66]],[[56,66]],[56,[[32,[22]]]],[[57,66]],[[58,66]],[[60,66]],0,0,0,0,[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[60,60],[56,18],[[],18],[56,18],0,[56],[59,59],[[59,59],[[32,[61]]]],[[56,56],[[32,[61]]]],[[57,57],[[32,[61]]]],[[58,58],[[32,[61]]]],[[60,60],[[32,[61]]]],0,[[58,[63,[3,62]]],18],0,[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],37],[[],37],[[],37],[[],37],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[59,52]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[51,51],[67,67],[68,68],[50,50],[[[69,[[0,[46,21]]]]],[[69,[[0,[46,21]]]]]],[[]],[[]],[[]],[[]],[[]],[[[69,[21]]],22],[[[69,[21]]],22],[9,[[11,[51,10]]]],[9,[[11,[67,10]]]],[9,[[11,[68,10]]]],[9,[[11,[50,10]]]],[9,[[11,[[69,[21]],10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[],51],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[],[[69,[21]]]],[[51,[0,[16,17]]]],[[67,[0,[16,17]]]],[[68,[0,[16,17]]]],[[50,[0,[16,17]]]],[[[69,[21]],[0,[16,17]]]],[[51,51],18],[[67,67],18],[[68,68],18],[[50,50],18],[[[69,[[0,[48,21]]]],[69,[[0,[48,21]]]]],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[51,19],20],[[67,19],20],[[68,19],20],[[50,19],20],[[[69,[[0,[49,21]]]],19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[69,[21]],[63,[3,62]]],[[32,[22]]]],[[[69,[21]],[63,[3,62]]],[[6,[50]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],0,[[[70,[59,56]]],51],[[[69,[21]]],[[70,[59,56]]]],0,0,[[50,35],11],[[[69,[21]],[63,[3,62]],22]],[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],37],[[],37],[[],37],[[],37],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[71,[[32,[72]]]],[71,[[32,[73]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[71,71],[72,72],[73,73],[74,74],[[]],[[]],[[]],[[]],[[73,[63,[3,62]]],[[63,[3,62]]]],[14],[14],[14],[14],[14],[14],[14],[14],[[72,[63,[3,62]]],74],[14],[14],[14],[14],[[71,71],18],[[72,72],18],[[73,73],18],[[74,74],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[71,19],20],[[72,19],20],[[73,19],20],[[74,19],20],[[]],[[]],[[]],[[]],[18,74],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[72,74],[[25,[[75,[71]]]]]],[71,[[32,[22]]]],0,0,0,0,[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,74],[71,18],[71,18],0,[71],0,[[73,[63,[3,62]]],18],0,[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],36],[[],36],[[],36],[[],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[76,[[0,[46,21]]]]],[[76,[[0,[46,21]]]]]],[[]],[[[76,[21]]],22],[[[76,[21]]],22],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[],[[76,[21]]]],[[77,77],18],[[78,78],18],[[79,79],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[77,19],20],[[78,19],20],[[79,19],20],[[[76,[[0,[49,21]]]],19],20],[[]],[[]],[[]],[72,79],[73,79],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[76,[21]],[63,[3,62]]],[[32,[22]]]],[[[76,[21]],[63,[3,62]]],[[6,[79]]]],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[76,[21]],[63,[3,62]],22]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],36],[[],36],[[],36],[[],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],2],[[],2],[[]],[[]],[[80,81],22],[14],[14],[14],[[]],[[]],[[]],[[]],[[]],[[],14],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[]],[[]],[[],11],[[],11],[[],36],[[]],[[]],[[]],[[]],[[]],0,[15,[[11,[[86,[[0,[82,83,84]],[0,[82,84]],[85,[13]]]]]]]],[15,[[11,[[32,[[86,[[0,[82,83,84]],[0,[82,84]],[85,[13]]]]]]]]]],0,0,[[[86,[[0,[82,83,87,46]],[0,[82,87,46]],[85,[13]]]],35],11],[[[32,[[86,[[0,[82,83,87,46]],[0,[82,87,46]],[85,[13]]]]]],35],11],0,0,0,[1],[[],2],[[],2],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[4,[3]]]],[[]],[[]],0,0,0,[[]],[88,88],[[]],0,[9,[[11,[88,10]]]],[[[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,9],[[11,[10]]]],[[],88],[14],[14],[15,[[11,[88]]]],[14],[[88,[0,[16,17]]]],0,0,[[88,88],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[88,89,28],[[91,[90]]]],[[88,19],20],[[]],[[]],[[]],[[]],[[]],[[],[[6,[3,5]]]],[[],14],0,[[]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[]],[[]],[[],18],[[],14],[[[32,[92]],93,[32,[22]],[95,[22,94]],26,26,22,[32,[92]]],88],[[88,35],11],0,[[[12,[3]]],[[6,[3,5]]]],[[]],[96,[[11,[88]]]],[[],11],[88,[[11,[97]]]],[[],11],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],36],[[],37],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[93,93],[98,98],[[]],[[]],[[93,93],61],[[98,98],61],[9,[[11,[93,10]]]],[9,[[11,[98,10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[],93],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14],[14],[14],[14],[14],[14],[15,[[11,[93]]]],[15,[[11,[98]]]],[14],[14],[14],[[93,[0,[16,17]]]],[[98,[0,[16,17]]]],[[93,93],18],[[98,98],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[93,19],20],[[98,19],20],[[99,19],20],[[99,19],20],[[]],[100,93],[[]],[101,98],[102,98],[[]],[103,99],[104,99],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[64,17]],65],29],[[93,66]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],14],[[93,93],[[32,[61]]]],[[98,98],[[32,[61]]]],[[93,35],11],[[98,35],11],[99,[[32,[105]]]],[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[]],[[]],[[],106],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],36],[[],36],[[],36],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[],2],[[],2],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[4,[3]]]],[[]],[[]],[[]],[[]],[[]],[22,22],[[]],[[22,22],61],[9,[[11,[22,10]]]],[[[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,9],[[11,[10]]]],[[],22],[[]],[[]],[[]],[[]],[14],[14],[14],[14],[15,[[11,[22]]]],[14],[14],[[22,[0,[16,17]]]],[[22,22],18],[[107,107],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[22,19],20],[[107,19],20],[[107,19],20],[[]],[108,22],[29,22],[13,22],[3,22],[109,22],[30,22],[43,22],[[]],[110,107],[111,[[11,[22,107]]]],[111,[[11,[22,107]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,[[11,[106,107]]]],[[[0,[64,17]],65],29],[[22,66]],[[],[[6,[3,5]]]],[[],14],[[],14],[[]],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[]],[[]],[[]],[[]],[[],18],[[],14],[[22,22],[[32,[61]]]],[[22,35],11],[[[12,[3]]],[[6,[3,5]]]],[[]],[[],106],[112,[[11,[22,107]]]],[31,[[11,[22,107]]]],[[],11],[[[12,[3]]],[[11,[22,107]]]],[[[4,[3]]],[[11,[22,107]]]],[[],11],[[],11],[[],11],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],36],[[],36],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[28,[113,[106,14]]],[[11,[114,115]]]],[[[113,[106,14]],28],[[11,[116,115]]]],[[[0,[89,117,118]],28,119,[113,[106,14]],18],[[11,[115]]]],[[[113,[106,14]]]],[[[0,[89,117]],[32,[90]],[32,[90]],120,121],[[11,[[113,[106,14]],115]]]],0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[],2],[[],2],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[]],[[]],[[]],[[]],[122,122],[[]],[9,[[11,[123,10]]]],[9,[[11,[122,10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[],122],[14],[14],[14],[14],[14],[14],[122,[[6,[3]]]],[[123,[0,[16,17]]]],[[122,[0,[16,17]]]],[[123,19],20],[[123,19],20],[[122,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],14],[[],14],[[]],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[]],[[]],[[]],[[]],[123,18],[124,122],[[122,125],[[127,[[23,[126]]]]]],[122,124],0,[[],[[11,[[32,[124]],128]]]],[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[]],[[],106],[[],11],[[129,[12,[3]]],[[32,[123]]]],[[[6,[3]]],[[11,[122,123]]]],[[],11],[[122,129,[12,[3]]],[[127,[[23,[126]]]]]],[[],11],[[],11],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],36],[[],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[122,52]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[15,[[11,[96]]]],[15,[[11,[130]]]],[15,[[11,[131]]]],[14],[14],[14],[14],[14],[14],0,0,0,[[96,19],20],[[132,19],20],[[132,19],20],[[130,19],20],[[133,19],20],[[133,19],20],[[131,19],20],[[134,19],20],[[134,19],20],[[]],[[]],[[]],[[]],[107,133],[[]],[133,134],[132,134],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[111,3],135],0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[]],[[]],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[96,35],11],[[130,35],11],[[131,35],11],0,[133,[[32,[105]]]],[134,[[32,[105]]]],0,[[],106],[[],106],[[],106],[[111,[12,[3]]],[[11,[39,134]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],2],[[],2],[[]],[[]],0,[[]],[[],136],[14],[14],[14],[[136,19],20],[[]],[[]],[[]],[[]],[[]],[[136,137],[[139,[138]]]],[[136,138],[[139,[140]]]],[[136,138],[[139,[135]]]],[[136,137],[[139,[141]]]],[[136,137,142],[[139,[109]]]],[[],14],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[]],[[]],[[],18],0,[[],11],[[],11],[[],36],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[4,[3]]]],[[]],[[]],[[]],[143,143],[[]],[[143,143],61],[9,[[11,[143,10]]]],[[[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,9],[[11,[10]]]],[[],143],[[]],[[]],[[]],[[]],[14],[14],[15,[[11,[143]]]],[14],[[143,[0,[16,17]]]],[[143,143],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[143,19],20],[[]],[[]],[[]],[[]],[[]],[[],[[6,[3,5]]]],[[],14],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[]],[[]],[[],18],[[143,143],[[32,[61]]]],[[143,35],11],[[[12,[3]]],[[6,[3,5]]]],[[]],[[],11],[[],11],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],36],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[[12,[43]]],43],[[[12,[22]]],22],[[[12,[3]]],22],[[43,43],43],[[]],0,[[],2],[[],2],[[]],[[]],[144,[[11,[40,145]]]],0,[[],144],[14],[14],[14],[[]],[[]],[[]],[[]],[[]],[[],14],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[]],[[]],[[],11],[[],11],[[],36],0,[[]],[[]],[[]],[[]],0,[[]],[[144,[6,[22]]],144],[[144,146],144],[[144,137],144],[[144,[6,[22]]],144],0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[147,148],[14],[14],[149,148],[14],[150,148],[14],[14],[14],[14],[14],[14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],36],[[],36],[[],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],144],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[121,121],[41,41],[42,42],[44,44],[39,39],[151,151],[40,40],[145,145],[152,152],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[9,[[11,[121,10]]]],[9,[[11,[41,10]]]],[9,[[11,[42,10]]]],[9,[[11,[44,10]]]],[9,[[11,[39,10]]]],[9,[[11,[151,10]]]],[9,[[11,[40,10]]]],[9,[[11,[145,10]]]],[9,[[11,[152,10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,[12,[3]]],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[13,9],[[11,[10]]]],[[],42],[[],44],[[],39],[[],151],[[],40],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[15,[[11,[121]]]],[15,[[11,[41]]]],[15,[[11,[42]]]],[15,[[11,[44]]]],[15,[[11,[39]]]],[15,[[11,[151]]]],[15,[[11,[40]]]],[15,[[11,[145]]]],[15,[[11,[152]]]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[],40],[[121,[0,[16,17]]]],[[41,[0,[16,17]]]],[[42,[0,[16,17]]]],[[44,[0,[16,17]]]],[[39,[0,[16,17]]]],[[151,[0,[16,17]]]],[[40,[0,[16,17]]]],[[145,[0,[16,17]]]],[[152,[0,[16,17]]]],[[121,121],18],[[41,41],18],[[42,42],18],[[44,44],18],[[39,39],18],[[151,151],18],[[40,40],18],[[145,145],18],[[152,152],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,[[39,[0,[89,117,118]],28,121,18],[[154,[153]]]],0,0,[[115,19],20],[[115,19],20],[[155,19],20],[[155,19],20],[[121,19],20],[[41,19],20],[[42,19],20],[[156,19],20],[[156,19],20],[[44,19],20],[[39,19],20],[[151,19],20],[[40,19],20],[[153,19],20],[[145,19],20],[[145,19],20],[[152,19],20],[[152,19],20],[[157,19],20],[[157,19],20],[[158,19],20],[[158,19],20],[[]],[104,115],[103,115],[155,115],[159,115],[160,115],[[]],[160,155],[103,155],[104,155],[161,121],[[]],[[]],[[]],[[]],[39,44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[162,157],[163,157],[[]],[156,157],[107,158],[[]],0,[[41,22],39],[[42,22],[[11,[39,156]]]],[[44,22],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,39],[[89,119,18],154],0,[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[23,[5]]],[[23,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[24,[5]]],[[24,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[[25,[5]]],[[25,[2,5]]]],[[151,164],165],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,0,0,0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,[[121,3,22,[95,[22,166]],26,22,88,[32,[135]],[32,[31]],22,18],39],[[[95,[22,166]],[95,[22,166]],26],40],0,0,0,0,0,0,0,0,[[121,35],11],[[42,35],11],[[44,35],11],[[151,35],11],[[40,35],11],[[145,35],11],[[152,35],11],0,0,0,0,[115,[[32,[105]]]],[155,[[32,[105]]]],[157,[[32,[105]]]],[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[[12,[3]]],[[6,[3,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],106],[[],106],[[],106],[[],106],[[],106],[[],106],[[],106],0,[[],11],[[],11],[[],11],[[],11],[39,[[11,[41]]]],[39,[[11,[42]]]],[167,[[11,[42]]]],[[],11],[[],11],[[],11],[168,[[11,[44]]]],[131,[[11,[39]]]],[[],11],[[],11],[[],11],[130,[[11,[40]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[39,[[11,[169]]]],[[],11],[39,[[11,[170]]]],[39,[[11,[171]]]],[39,[[11,[172]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],[[],[[6,[3,5]]]],0,0,[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[39,89,120,28,121],[[173,[[32,[90]]]]]],0,[[39,121],[[173,[148]]]],[[39,121],[[173,[174]]]],[[39,89,120,28,119,121,29],[[173,[[32,[90]]]]]],[[39,121],154],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[18,45],45],[[18,3],45],[22,[[11,[141,103]]]],[175,[[70,[93,[6,[98]]]]]]],"c":[],"p":[[3,"Private"],[8,"Any"],[15,"u8"],[15,"array"],[3,"Global"],[3,"Vec"],[3,"Header"],[3,"Block"],[8,"Input"],[3,"Error"],[4,"Result"],[15,"slice"],[15,"u32"],[15,"usize"],[8,"Deserializer"],[8,"Output"],[8,"Sized"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"HasherT"],[3,"Felt252Wrapper"],[3,"Box"],[3,"Arc"],[3,"Rc"],[6,"ContractAddressWrapper"],[3,"ChainId"],[3,"BlockContext"],[15,"u64"],[15,"u128"],[3,"U256"],[4,"Option"],[6,"BlockTransactions"],[6,"BlockTransactionReceipts"],[8,"Serializer"],[3,"TypeId"],[3,"Type"],[6,"ClassCommitmentLeafHash"],[3,"Transaction"],[3,"EventWrapper"],[3,"DeclareTransaction"],[3,"DeployAccountTransaction"],[3,"FieldElement"],[3,"InvokeTransaction"],[3,"TransactionVersion"],[8,"Clone"],[3,"StateCommitmentTree"],[8,"PartialEq"],[8,"Debug"],[4,"ProofNode"],[3,"NodesMapping"],[8,"FnOnce"],[4,"Hasher"],[3,"PedersenHasher"],[3,"PoseidonHasher"],[4,"Node"],[3,"BinaryNode"],[3,"EdgeNode"],[3,"NodeId"],[4,"Direction"],[4,"Ordering"],[3,"Msb0"],[3,"BitSlice"],[8,"Hash"],[8,"BuildHasher"],[8,"Hasher"],[3,"BinaryProofNode"],[3,"EdgeProofNode"],[3,"MerkleTree"],[3,"HashMap"],[4,"Node"],[3,"BinaryNode"],[3,"EdgeNode"],[4,"Direction"],[3,"RefCell"],[3,"RefMerkleTree"],[3,"BinaryProofNode"],[3,"EdgeProofNode"],[4,"ProofNode"],[6,"StorageCommitment"],[6,"ClassCommitment"],[8,"Decode"],[8,"Ord"],[8,"Deserialize"],[8,"Get"],[3,"BoundedBTreeMap"],[8,"Serialize"],[3,"CallEntryPointWrapper"],[8,"State"],[3,"CallInfo"],[6,"EntryPointExecutionResultWrapper"],[6,"ClassHashWrapper"],[4,"EntryPointTypeWrapper"],[6,"MaxCalldataSize"],[3,"BoundedVec"],[3,"DeserializeCallEntrypoint"],[3,"CallEntryPoint"],[3,"EntryPointWrapper"],[4,"EntryPointExecutionErrorWrapper"],[4,"EntryPointType"],[3,"EntryPoint"],[3,"LegacyContractEntryPoint"],[4,"StarknetApiError"],[4,"EntryPointExecutionError"],[8,"Error"],[3,"String"],[4,"Felt252WrapperError"],[3,"Felt252"],[3,"StarkFelt"],[4,"FromStrError"],[15,"str"],[3,"H256"],[3,"BTreeMap"],[15,"f64"],[4,"TransactionExecutionErrorWrapper"],[3,"Fee"],[8,"StateChanges"],[8,"FeeConfig"],[3,"AccountTransactionContext"],[3,"ExecutionResources"],[4,"TxType"],[3,"InherentDataProvider"],[4,"InherentError"],[6,"InherentType"],[3,"InherentData"],[8,"Future"],[3,"Pin"],[4,"Error"],[6,"InherentIdentifier"],[3,"DeserializeEventWrapper"],[3,"DeserializeTransaction"],[4,"DeserializeCallEntrypointError"],[4,"DeserializeEventError"],[4,"DeserializeTransactionError"],[4,"ContractClass"],[3,"DictStateReader"],[3,"ContractAddress"],[3,"ClassHash"],[6,"StateResult"],[3,"CompiledClassHash"],[3,"Nonce"],[3,"StorageKey"],[4,"StarknetStorageSchemaVersion"],[3,"EventBuilder"],[4,"EventError"],[3,"EventContent"],[3,"VALIDATE_ENTRY_POINT_SELECTOR"],[3,"EntryPointSelector"],[3,"VALIDATE_DECLARE_ENTRY_POINT_SELECTOR"],[3,"VALIDATE_DEPLOY_ENTRY_POINT_SELECTOR"],[3,"TransactionReceiptWrapper"],[4,"StateDiffError"],[3,"TransactionExecutionInfoWrapper"],[6,"TransactionExecutionResultWrapper"],[4,"TransactionValidationErrorWrapper"],[4,"TransactionConversionError"],[4,"BroadcastedTransactionConversionErrorWrapper"],[4,"RPCTransactionConversionError"],[4,"StateError"],[4,"TransactionExecutionError"],[4,"TransactionType"],[4,"StarknetError"],[4,"ComputeClassHashError"],[4,"TransactionFinalityStatus"],[4,"MaybePendingTransactionReceipt"],[6,"MaxArraySize"],[3,"BroadcastedDeployAccountTransaction"],[3,"BroadcastedInvokeTransaction"],[3,"DeployAccountTransaction"],[3,"L1HandlerTransaction"],[3,"DeclareTransaction"],[3,"InvokeTransaction"],[6,"TransactionValidationResultWrapper"],[3,"Calldata"],[3,"LegacyEntryPointsByType"],[3,"StateCommitment"],[8,"SequencerAddressInherentData"],[8,"DefaultHasher"],[13,"FeeTransferError"]]},\
"pallet_starknet":{"doc":"A Substrate pallet implementation for Starknet, a …","t":"RRBAAOAAAAAADLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNEDDNLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDLLLLLLLMLLLLLLLLLLLLLLLLFLLLLLLLLLLLLMLLLLLLLLLLLLLNNEQNNINNNNNQQNEENDNQNQGDQNQGGNNNNQQNNNNQQQLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLMMLLLLLNLLLLLLLLLLLLLLNLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLNLMLALLLLLLLLLLLLLLLLLCCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMFFFFFDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNINIEBLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDENLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGGDGGGGLMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLMMLLLLLLLLLLLLLLLLLLLLLLNELLLLFLLLFLLLLLLLLLLLFLLLLLLLLLLFLLLLLLLLL","n":["ETHEREUM_CONSENSUS_RPC","ETHEREUM_EXECUTION_RPC","alloc","blockifier_state_adapter","genesis_loader","log","message","pallet","runtime_api","transaction_validation","types","utils","BlockifierStateAdapter","as_any","as_any_mut","borrow","borrow_mut","count_state_changes","default","deref","deref_mut","drop","from","from_mut","from_mut","from_ref","from_ref","get_class_hash_at","get_compiled_class_hash","get_compiled_contract_class","get_nonce_at","get_storage_at","increment_nonce","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","is_transaction_fee_disabled","set_class_hash_at","set_compiled_class_hash","set_contract_class","set_storage_at","to_state_diff","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","upcast","upcast_mut","vzip","Class","ContractClass","GenesisLoader","HexFelt","Path","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","contract_classes","contracts","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","fee_token_address","fmt","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","madara_path","seq_addr_updated","serialize","serialize","serialize","set_madara_path","storage","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","vzip","vzip","vzip","path","version","Message","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","data","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","deref","deref_mut","deserialize","drop","encode_to","fmt","from","from_mut","from_mut","from_ref","from_ref","get_messages_events","identity","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","to_keyed_vec","topics","try_from","try_into","try_into_transaction","twox_128","twox_256","twox_64_concat","type_id","type_name","unchecked_into","unique_saturated_into","upcast","upcast_mut","vzip","AccountAlreadyDeployed","AccountNotDeployed","Call","ChainId","ClassHashAlreadyDeclared","ClassHashMustBeSpecified","Config","ContractAddressAlreadyAssociated","ContractClassAlreadyAssociated","ContractClassHashUnknown","ContractClassMustBeSpecified","ContractNotFound","DisableNonceValidation","DisableTransactionFee","EmitEventError","Error","Event","FeeTokenAddressChanged","GenesisConfig","InvalidContractClass","InvokeTxMaxNSteps","KeepStarknetStrange","MaxRecursionDepth","Module","Pallet","ProtocolVersion","ReachedBoundedVecLimit","RuntimeEvent","SeqAddrUpdate","SequencerAddress","SequencerAddressNotValid","StarknetEvent","StateDiffError","StateReaderError","SystemHash","TimestampProvider","TooManyPendingEvents","TooManyPendingTransactions","TransactionConversionError","TransactionExecutionFailed","TransactionLongevity","UnsignedPriority","ValidateMaxNSteps","__clone_box","__clone_box","__clone_box","_phantom","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blake2_128","blake2_128","blake2_128","blake2_128_concat","blake2_128_concat","blake2_128_concat","blake2_256","blake2_256","blake2_256","block_hash","block_timestamp","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_module_genesis_storage","call_contract","chain_id","chain_id_str","check_inherent","clone","clone","clone","clone_into","clone_into","clone_into","compiled_class_hash_by_class_hash","consume_l1_message","consume_l1_message","contract_class_by_class_hash","contract_class_hash_by_address","contract_classes","contracts","count","crate_version","create_inherent","current_storage_version","declare","declare","decode","decode","decode","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","default","deploy_account","deploy_account","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dispatch_bypass_filter","dispatchables","drop","drop","drop","drop","drop","emit_events_for_calls","encode_to","encode_to","encode_to","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","estimate_fee","event_count","fee_token_address","fee_token_address","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_call_index","get_call_indices","get_call_name","get_call_names","get_dispatch_info","get_storage_at","get_system_hash","identity","identity","identity","index","infos","init","init","init","init","init","integrity_test","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","invoke","invoke","is_inherent","last_known_eth_block","module_name","name","new_call_variant_consume_l1_message","new_call_variant_declare","new_call_variant_deploy_account","new_call_variant_invoke","new_call_variant_set_sequencer_address","nonce","offchain_worker","offchain_worker","on_chain_storage_version","on_finalize","on_finalize","on_genesis","on_idle","on_initialize","on_initialize","on_runtime_upgrade","on_runtime_upgrade","parent_block_hash","pending","pending_events","pre_dispatch","seq_addr_update","seq_addr_updated","sequencer_address","serialize","set_sequencer_address","set_sequencer_address","storage","storage","storage_info","storage_types","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","transaction_count","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tt_default_parts","tt_error_token","twox_128","twox_128","twox_128","twox_256","twox_256","twox_256","twox_64_concat","twox_64_concat","twox_64_concat","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","validate_unsigned","vzip","vzip","vzip","vzip","vzip","whitelisted_storage_keys","with_weight","addr","transaction","transaction","transaction","transaction","new_fee_token_address","old_fee_token_address","consume_l1_message","declare","deploy_account","invoke","set_sequencer_address","BlockHash","CompiledClassHashes","ContractClassHashes","ContractClasses","FeeTokenAddress","LastKnownEthBlock","Nonces","Pending","PendingEvents","SeqAddrUpdate","SequencerAddress","StorageView","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_mut","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","into_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ClassAlreadyDeclared","ClassHashNotFound","ContractError","ContractNotFound","ConvertTransactionRuntimeApi","InvalidContractClass","StarknetRuntimeApi","StarknetTransactionExecutionError","alloc","as_any","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow_mut","call","call_with_context","chain_id","chain_id_with_context","contract_class_by_class_hash","contract_class_by_class_hash_with_context","contract_class_hash_by_address","contract_class_hash_by_address_with_context","convert_error","convert_error_with_context","convert_transaction","convert_transaction_with_context","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref_mut","drop","encode_to","estimate_fee","estimate_fee_with_context","events","events_with_context","extrinsic_filter","extrinsic_filter_with_context","from","from_mut","from_mut","from_ref","from_ref","get_hasher","get_hasher_with_context","get_storage_at","get_storage_at_with_context","identity","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","nonce","nonce_with_context","to_keyed_vec","try_from","try_into","twox_128","twox_256","twox_64_concat","type_id","type_info","type_name","unchecked_into","unique_saturated_into","upcast","upcast_mut","vzip","EnsureStarknetTransaction","RawOrigin","StarknetTransaction","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","ensure_starknet_transaction","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","try_from","try_from","try_into","try_into","try_origin","type_id","type_id","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast_mut","upcast_mut","vzip","vzip","BuildTransferInvokeTransaction","ContractClassMapping","ContractStorageKeyWrapper","DeployAccountTransactionOutput","MaxTransactionsPendingBlock","NonceWrapper","StorageKeyWrapper","StorageSlotWrapper","__clone_box","amount_high","amount_low","as_any","as_any","as_any_mut","as_any_mut","blake2_128","blake2_128_concat","blake2_256","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","contract_address","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","encode_to","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","identity","init","init","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","max_encoded_len","nonce","recipient","sender_address","serialize","to_keyed_vec","to_owned","token_address","transaction_hash","try_from","try_from","try_into","try_into","twox_128","twox_256","twox_64_concat","type_id","type_id","type_info","type_name","type_name","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","upcast","upcast","upcast_mut","upcast_mut","vzip","vzip","Cli","Error","as_any","as_any_mut","borrow","borrow_mut","copy_from_filesystem","deref","deref_mut","drop","fetch_from_url","fmt","from","from","from","from","from","from","from_mut","from_mut","from_ref","from_ref","get_project_path","init","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_ref","read_file_to_string","try_from","try_into","type_id","type_name","unchecked_into","unique_saturated_into","upcast","upcast_mut","vzip"],"q":[[0,"pallet_starknet"],[12,"pallet_starknet::blockifier_state_adapter"],[58,"pallet_starknet::genesis_loader"],[183,"pallet_starknet::genesis_loader::ContractClass"],[185,"pallet_starknet::message"],[237,"pallet_starknet::pallet"],[598,"pallet_starknet::pallet::Call"],[603,"pallet_starknet::pallet::Event"],[605,"pallet_starknet::pallet::dispatchables"],[610,"pallet_starknet::pallet::storage_types"],[994,"pallet_starknet::runtime_api"],[1072,"pallet_starknet::transaction_validation"],[1139,"pallet_starknet::types"],[1245,"pallet_starknet::utils"]],"d":["","","","An adapter for the blockifier state related traits","","","The implementation of the message type.","The module that hosts all the FRAME types needed to add …","The Starknet pallet’s runtime API Definition of the …","Transaction validation logic. Transaction validation logic.","The Starknet pallet’s runtime custom types. Starknet …","Util functions for madara.","Empty struct that implements the traits needed by the …","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","As the state is updated during the execution, return an …","","","","","","","","","","","","","A wrapper for FieldElement that implements serde’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data of the event.","","","","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Topics of the event.","","","Converts a <code>Message</code> into a transaction object.","","","","","","","","","","","","","The Starknet pallet external functions. Dispatchable …","","","","Configure the pallet by specifying the parameters and …","","","","","","A bool to disable Nonce validation","A bool to disable transaction fees and make all …","","The Starknet pallet custom errors. ERRORS","The Starknet pallet events. EVENTS See: …","Emitted when fee token address is changed. This is emitted …","Starknet genesis configuration.","","","","","Type alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.","The pallet implementing the on-chain logic.","","","Because this pallet emits events, it depends on the runtime…","Ensure the sequencer address was updated for this block.","Current sequencer address.","","Regular Starknet event","","","The hashing function to use.","The time idk what.","","","","","A configuration for longevity of transactions.","A configuration for base priority of unsigned transactions.","","","","","","","","","","","","","","","","","","","","","","","","","Mapping for block number and hashes. Safe to use <code>Identity</code> …","Get the current block timestamp in seconds.","","","","","","","","","","","","","Call a smart contract function.","","convert chain_id","","","","","","","","Mapping from Starknet Sierra class hash to  Casm compiled …","Consume a message from L1.","Consume a message from L1.","Mapping from Starknet class hash to contract class. Safe …","Mapping from Starknet contract address to the contract’s …","The contract classes to be deployed at genesis. This is a …","The contracts to be deployed at genesis. This is a vector …","","","","","The declare transaction is used to introduce new classes …","The declare transaction is used to introduce new classes …","","","","","","","","","","","","","","Since StarkNet v0.10.1 the deploy_account transaction …","Since StarkNet v0.10.1 the deploy_account transaction …","","","","","","","","","","","","","Auto-generated docs-only module listing all defined …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Estimate the fee associated with transaction","Get the number of events in the block.","The address of the fee token ERC20 contract.","The address of the fee token. Must be set to the address …","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","","","","Get storage value at","Returns the hasher used by the runtime.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The invoke transaction is the main transaction type used …","The invoke transaction is the main transaction type used …","","The last processed Ethereum block number for L1 messages …","","","Create a call with the variant <code>consume_l1_message</code>.","Create a call with the variant <code>declare</code>.","Create a call with the variant <code>deploy_account</code>.","Create a call with the variant <code>invoke</code>.","Create a call with the variant <code>set_sequencer_address</code>.","Mapping from Starknet contract address to its nonce. Safe …","","Run offchain tasks. See: …","","","The block is being finalized.","","","The block is being initialized. Implement to have …","","Perform a module upgrade.","","Get the block hash of the previous block.","The Starknet pallet storage items. STORAGE Current …","Current building block’s events.","From substrate documentation: Validate the call right …","Ensure the sequencer address was updated for this block.","","Current sequencer address.","","Set the current block author’s sequencer address.","Set the current block author’s sequencer address.","Mapping from Starknet contract storage key to its value. …","","","Auto-generated docs-only module listing all defined …","","","","","","","Get the number of transactions in the block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate unsigned call to this module.","","","","","","","","","","","","","","","Consume a message from L1.","The declare transaction is used to introduce new classes …","Since StarkNet v0.10.1 the deploy_account transaction …","The invoke transaction is the main transaction type used …","Set the current block author’s sequencer address.","Mapping for block number and hashes. Safe to use <code>Identity</code> …","Mapping from Starknet Sierra class hash to  Casm compiled …","Mapping from Starknet contract address to the contract’s …","Mapping from Starknet class hash to contract class. Safe …","The address of the fee token ERC20 contract.","The last processed Ethereum block number for L1 messages …","Mapping from Starknet contract address to its nonce. Safe …","The Starknet pallet storage items. STORAGE Current …","Current building block’s events.","Ensure the sequencer address was updated for this block.","Current sequencer address.","Mapping from Starknet contract storage key to its value. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns a <code>Call</code> response.","Returns a <code>Call</code> response.","Returns the chain id.","Returns the chain id.","Returns the contract class for the given class hash.","Returns the contract class for the given class hash.","Returns the contract class hash at the given address.","Returns the contract class hash at the given address.","Converts the DispatchError to an understandable error for …","Converts the DispatchError to an understandable error for …","Converts the transaction to an UncheckedExtrinsic for …","Converts the transaction to an UncheckedExtrinsic for …","","","","","","","","","Returns fee estimate","Returns fee estimate","Returns the events associated with the given block","Returns the events associated with the given block","Filters extrinsic transactions to return only Starknet …","Filters extrinsic transactions to return only Starknet …","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Returns the hasher used by the runtime.","Returns the hasher used by the runtime.","Returns a storage slot value","Returns a storage slot value","","","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the nonce associated with the given address in the …","Returns the nonce associated with the given address in the …","","","","","","","","","","","","","","","Ensure that the origin is a Starknet transaction. See: …","Representation of the origin of a Starknet transaction. …","","","","","","","","","","","","","","","","Ensure that the origin is a Starknet transaction. See: …","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Try to convert the origin into a …","","","","","","","","","","","","","","","Build invoke transaction for transfer utils","","Contract Storage Key","Declare Transaction Output","Make this configurable. Max transaction/block","Nonce of a Starknet transaction.","Storage Key","Type wrapper for a storage slot.","","","","","","","","","","","","","","","","","Contract Address","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Transaction hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,25,0,0,0,25,23,24,25,23,24,25,23,24,25,23,24,25,23,24,25,23,24,25,23,24,25,24,24,23,24,25,23,24,25,23,24,25,23,24,25,24,23,23,23,24,25,23,23,24,24,25,25,23,23,24,24,25,25,23,24,25,23,24,25,23,23,24,24,25,25,23,23,24,24,25,25,23,23,24,24,25,25,23,24,25,23,24,25,24,24,23,24,25,24,24,23,24,25,23,24,25,23,24,25,23,24,25,23,24,25,23,24,25,23,24,25,23,24,25,23,24,25,23,24,25,99,99,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,60,60,0,2,60,60,0,60,60,60,60,60,2,2,60,0,0,51,0,60,2,51,2,0,0,2,60,2,0,0,60,51,60,60,2,2,60,60,60,60,2,2,2,50,51,52,45,50,45,51,60,52,50,45,51,60,52,51,60,52,51,60,52,51,60,52,50,50,50,45,51,60,52,50,45,51,60,52,45,45,50,50,50,50,50,51,52,50,51,52,50,50,52,50,50,45,45,50,50,50,50,50,52,51,60,52,51,60,52,51,60,52,51,60,52,45,50,52,50,45,51,60,52,50,45,51,60,52,45,52,0,50,45,51,60,52,50,51,60,52,50,51,52,50,50,50,50,50,51,51,51,51,51,52,52,52,52,52,50,50,50,45,50,51,60,52,50,45,45,51,60,52,50,50,45,45,51,51,60,60,52,52,50,50,45,45,51,51,60,60,52,52,52,52,52,52,52,50,50,51,60,52,50,50,50,45,51,60,52,50,50,45,51,60,52,50,50,45,45,51,51,60,60,52,52,50,50,45,45,51,51,60,60,52,52,50,50,45,45,51,51,60,60,52,52,50,45,51,60,52,50,45,51,60,52,50,52,50,50,50,50,52,52,52,52,52,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,45,50,45,50,52,50,45,50,0,51,60,52,50,51,52,50,50,45,51,60,52,50,45,51,60,52,0,0,51,60,52,51,60,52,51,60,52,50,45,51,60,52,51,60,52,50,45,51,60,52,50,45,51,60,52,50,45,51,60,52,50,45,51,60,52,50,45,51,60,52,50,50,45,51,60,52,50,60,100,101,102,103,104,105,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,106,107,108,109,110,111,112,113,114,115,116,117,106,107,108,109,110,111,112,113,114,115,116,117,106,107,108,109,110,111,112,113,114,115,116,117,106,107,108,109,110,111,112,113,114,115,116,117,106,107,108,109,110,111,112,113,114,115,116,117,106,107,108,109,110,111,112,113,114,115,116,117,106,107,108,109,110,111,112,113,114,115,116,117,106,107,108,109,110,111,112,113,114,115,116,117,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,106,107,108,109,110,111,112,113,114,115,116,117,106,107,108,109,110,111,112,113,114,115,116,117,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,106,107,108,109,110,111,112,113,114,115,116,117,106,107,108,109,110,111,112,113,114,115,116,117,106,107,108,109,110,111,112,113,114,115,116,117,106,107,108,109,110,111,112,113,114,115,116,117,106,107,108,109,110,111,112,113,114,115,116,117,106,107,108,109,110,111,112,113,114,115,116,117,106,107,108,109,110,111,112,113,114,115,116,117,106,107,108,109,110,111,112,113,114,115,116,117,106,107,108,109,110,111,112,113,114,115,116,117,106,107,108,109,110,111,112,113,114,115,116,117,106,107,108,109,110,111,112,113,114,115,116,117,86,86,86,86,0,86,0,0,0,86,86,86,86,86,86,86,118,118,118,118,118,118,118,118,119,119,119,119,86,86,86,86,86,86,86,86,118,118,118,118,118,118,86,86,86,86,86,118,118,118,118,86,86,86,86,86,86,86,86,86,86,86,118,118,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,0,90,90,120,90,120,90,120,90,120,90,120,90,120,90,120,0,90,120,90,90,120,120,90,90,120,120,90,120,90,120,90,90,120,120,90,90,120,120,90,90,120,120,90,120,90,120,90,120,90,120,120,90,120,90,120,90,120,90,120,90,120,90,120,90,120,0,0,0,0,0,0,0,0,93,121,121,121,93,121,93,93,93,93,121,93,121,93,93,93,93,93,93,93,93,121,93,121,93,93,121,93,93,93,93,93,93,93,93,93,121,93,121,121,93,93,121,121,93,93,93,121,93,121,93,121,121,93,93,121,121,93,93,121,121,93,93,121,93,121,93,93,121,121,121,93,93,93,121,93,121,93,121,93,93,93,93,121,93,93,121,93,121,93,121,93,121,93,121,93,121,93,94,0,94,94,94,94,0,94,94,94,0,94,94,94,94,94,94,94,94,94,94,94,0,94,94,94,94,94,94,94,94,94,94,0,94,94,94,94,94,94,94,94,94],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[[3,[2]]]],[[],[[3,[2]]]],[4],[4],[4],[[]],[[]],[[]],[[]],[[]],[[[3,[2]],5],[[7,[6]]]],[[[3,[2]],6],[[7,[8]]]],[[[3,[2]],6],[[7,[9]]]],[[[3,[2]],5],[[7,[10]]]],[[[3,[2]],5,11],[[7,[12]]]],[[[3,[2]],5],7],[[],4],[[]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[]],[[]],[[[3,[2]]],17],[[[3,[2]],5,6],7],[[[3,[2]],6,8],7],[[[3,[2]],6,9],7],[[[3,[2]],5,11,12]],[[[3,[2]]],18],[[],19],[[],19],[[],20],[[],21],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[22],[22],[22],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[23,23],[24,24],[25,25],[[]],[[]],[[]],0,0,[4],[4],[4],[4],[4],[4],[26,[[19,[23]]]],[26,[[19,[24]]]],[26,[[19,[25]]]],[4],[4],[4],0,[[23,27],28],[29,23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[23,30],19],[[24,30],19],[[25,30],19],[[24,31]],0,[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],[[33,[32]]]],[[],[[34,[32,13]]]],[[],[[33,[32]]]],[[]],[[]],0,[35,[[19,[36,37]]]],[[[38,[32]]],[[19,[37]]]],[[39,[38,[32]]],[[19,[37]]]],[[39,35],[[19,[37]]]],[[],36],[4],[4],[26,[[19,[36]]]],[4],[[36,[0,[40,41]]]],[[36,27],28],[[]],[[]],[[]],[[]],[[]],[[42,42],31],[[],[[34,[32,13]]]],[[],4],[[]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[]],[[]],[[[38,[32]]],[[34,[32,13]]]],0,[[],19],[[],19],[36,[[19,[43,0]]]],[[],[[33,[32]]]],[[],[[33,[32]]]],[[],[[34,[32,13]]]],[[],20],[[],21],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[22],[22],[22],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],[[33,[32]]]],[[],[[33,[32]]]],[[],[[33,[32]]]],[[],[[34,[32,13]]]],[[],[[34,[32,13]]]],[[],[[34,[32,13]]]],[[],[[33,[32]]]],[[],[[33,[32]]]],[[],[[33,[32]]]],[[[44,[42]]],29],[[],42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[45,[2]]]],[[[45,[2]],46],[[19,[31]]]],[[47,29,[34,[29]]],[[19,[[34,[29]],48]]]],[[],29],[[],31],[49,19],[50,50],[[[51,[2]]],[[51,[2]]]],[[[52,[2]]],[[52,[2]]]],[[]],[[]],[[]],[[[44,[53]]],[[55,[54]]]],[[[56,[2]],43],57],0,[[[44,[53]]],[[55,[9]]]],[[[44,[47]]],[[55,[53]]]],0,0,[[],4],[[],58],[49,55],[[]],[[[56,[2]],59],57],0,[35,[[19,[[51,[2]],37]]]],[35,[[19,[60,37]]]],[35,[[19,[[52,[2]],37]]]],[[[38,[32]]],[[19,[37]]]],[[[38,[32]]],[[19,[37]]]],[[[38,[32]]],[[19,[37]]]],[[39,[38,[32]]],[[19,[37]]]],[[39,[38,[32]]],[[19,[37]]]],[[39,[38,[32]]],[[19,[37]]]],[[39,35],[[19,[37]]]],[[39,35],[[19,[37]]]],[[39,35],[[19,[37]]]],[[],[[45,[2]]]],[[[56,[2]],61],57],0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[26,[[19,[[45,[2]]]]]],[[[52,[2]]],62],0,[4],[4],[4],[4],[4],[[[55,[63]],[55,[63]]],[[19,[[34,[64]],[60,[2]]]]]],[[[51,[2]],[0,[40,41]]]],[[60,[0,[40,41]]]],[[[52,[2]],[0,[40,41]]]],[[50,50],17],[[[51,[2]],[51,[2]]],17],[[[52,[2]],[52,[2]]],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[43,[[19,[48]]]],[[],65],[[],47],0,[[50,27],28],[[[51,[2]],27],28],[[[60,[2]],27],28],[[[52,[2]],27],28],[[]],[24,[[45,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[2]]],32],[[],[[38,[32]]]],[[[52,[2]]],21],[[],[[38,[21]]]],[[[52,[2]]],66],[[47,67],[[19,[29,48]]]],[[]],[[],[[34,[32,13]]]],[[],[[34,[32,13]]]],[[],[[34,[32,13]]]],[[],4],[[],[[34,[68]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[56,[2]],69],57],0,[[],17],[[],[[55,[42]]]],[[],21],[[],21],[43,[[52,[2]]]],[59,[[52,[2]]]],[61,[[52,[2]]]],[69,[[52,[2]]]],[[[33,[32]]],[[52,[2]]]],[[[44,[47]]],70],[[]],[[]],[[],71],[[]],[[]],[[]],[72,72],[[],72],[[],72],[[],72],[[],72],[42,29],[[],[[74,[73]]]],[[],[[74,[64,73]]]],[[],[[19,[75]]]],[[],17],0,[[],47],[[[45,[2]],30],19],[[[56,[2]],[33,[32]]],57],0,[[[44,[76]]],29],0,[[],[[34,[77]]]],0,[[[38,[32]]],[[34,[32,13]]]],[[[38,[32]]],[[34,[32,13]]]],[[[38,[32]]],[[34,[32,13]]]],[[]],[[]],[[]],[[],65],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,[[],[[33,[32]]]],[[],[[33,[32]]]],[[],[[33,[32]]]],[[],[[33,[32]]]],[[],[[33,[32]]]],[[],[[33,[32]]]],[[],[[34,[32,13]]]],[[],[[34,[32,13]]]],[[],[[34,[32,13]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],78],[[],78],[[],78],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[79,80],[[]],[[]],[[]],[[]],[[]],[[],[[34,[81]]]],[72,[[83,[82]]]],0,0,0,0,0,0,0,[43],[59],[61],[69],[[[33,[32]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],[[33,[32]]]],[[],[[34,[32,13]]]],[[],[[33,[32]]]],[[]],[[]],[[47,29,[34,[29]]],[[19,[[19,[[34,[29]],48]],84]]]],[[85,47,29,[34,[29]]],[[19,[[19,[[34,[29]],48]],84]]]],[[],[[19,[29,84]]]],[85,[[19,[29,84]]]],[53,[[19,[[55,[9]],84]]]],[[85,53],[[19,[[55,[9]],84]]]],[47,[[19,[[55,[53]],84]]]],[[85,47],[[19,[[55,[53]],84]]]],[48,[[19,[86,84]]]],[[85,48],[[19,[86,84]]]],[[43,87],[[19,[[19,[48]],84]]]],[[85,43,87],[[19,[[19,[48]],84]]]],[35,[[19,[86,37]]]],[[[38,[32]]],[[19,[37]]]],[[39,[38,[32]]],[[19,[37]]]],[[39,35],[[19,[37]]]],[4],[4],[4],[[86,[0,[40,41]]]],[43,[[19,[[19,[48]],84]]]],[[85,43],[[19,[[19,[48]],84]]]],[[],[[19,[[34,[64]],84]]]],[85,[[19,[[34,[64]],84]]]],[34,[[19,[[34,[43]],84]]]],[[85,34],[[19,[[34,[43]],84]]]],[[]],[[]],[[]],[[]],[[]],[[],[[19,[88,84]]]],[85,[[19,[88,84]]]],[[47,89],[[19,[[19,[29,48]],84]]]],[[85,47,89],[[19,[[19,[29,48]],84]]]],[[],[[34,[32,13]]]],[[],4],[[]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[]],[[]],[47,[[19,[70,84]]]],[[85,47],[[19,[70,84]]]],[[[38,[32]]],[[34,[32,13]]]],[[],19],[[],19],[[],[[33,[32]]]],[[],[[33,[32]]]],[[],[[34,[32,13]]]],[[],20],[[],78],[[],21],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[4],[4],[4],[4],[4],[4],[[[91,[[19,[90,[91,[[19,[90,[91,[[19,[90]]]]]]]]]]]]],[[19,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[]],[[]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[[0,[[91,[[19,[90,[0,[[91,[[19,[90,[0,[[91,[[19,[90]]]],[92,[90]]]]]]]],[92,[90]]]]]]]],[92,[90]]]]],[[19,[[0,[[91,[[19,[90,[0,[[91,[[19,[90,[0,[[91,[19]],[92,[90]]]]]]]],[92,[90]]]]]]]],[92,[90]]]]]]]],[[],20],[[],20],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[22],0,0,[[],1],[[],1],[[],1],[[],1],[[],[[33,[32]]]],[[],[[34,[32,13]]]],[[],[[33,[32]]]],[[]],[[]],[[]],[[]],[93,93],[[]],0,[35,[[19,[93,37]]]],[[[38,[32]]],[[19,[37]]]],[[39,[38,[32]]],[[19,[37]]]],[[39,35],[[19,[37]]]],[4],[4],[4],[4],[26,[[19,[93]]]],[4],[4],[[93,[0,[40,41]]]],[[93,93],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[93,27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[34,[32,13]]]],[[],4],[[],4],[[]],[[]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[]],[[]],[[]],[[]],[[],4],0,0,0,[[93,30],19],[[[38,[32]]],[[34,[32,13]]]],[[]],0,0,[[],19],[[],19],[[],19],[[],19],[[],[[33,[32]]]],[[],[[33,[32]]]],[[],[[34,[32,13]]]],[[],20],[[],20],[[],78],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],1],[[],1],[[]],[[]],[[31,31],[[19,[94]]]],[4],[4],[4],[[31,31],[[19,[94]]]],[[94,27],28],[[]],[95,94],[21,94],[96,94],[97,94],[[[14,[98]]],94],[[]],[[]],[[]],[[]],[[],[[19,[31,94]]]],[[],4],[[]],[[[14,[13]]],[[14,[1,13]]]],[[[14,[13]]],[[14,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[15,[13]]],[[15,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[[16,[13]]],[[16,[1,13]]]],[[]],[[]],[31,[[19,[31,94]]]],[[],19],[[],19],[[],20],[[],21],[[]],[[]],[[]],[[]],[[]]],"c":[260],"p":[[8,"Any"],[8,"Config"],[3,"BlockifierStateAdapter"],[15,"usize"],[3,"ContractAddress"],[3,"ClassHash"],[6,"StateResult"],[3,"CompiledClassHash"],[4,"ContractClass"],[3,"Nonce"],[3,"StorageKey"],[3,"StarkFelt"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[15,"bool"],[3,"CommitmentStateDiff"],[4,"Result"],[3,"TypeId"],[15,"str"],[3,"Private"],[3,"HexFelt"],[3,"GenesisLoader"],[4,"ContractClass"],[8,"Deserializer"],[3,"Formatter"],[6,"Result"],[3,"Felt252Wrapper"],[8,"Serializer"],[3,"String"],[15,"u8"],[15,"array"],[3,"Vec"],[8,"Input"],[3,"Message"],[3,"Error"],[15,"slice"],[15,"u32"],[8,"Output"],[8,"Sized"],[15,"u64"],[3,"Transaction"],[8,"EncodeLike"],[3,"GenesisConfig"],[3,"Storage"],[6,"ContractAddressWrapper"],[4,"DispatchError"],[3,"InherentData"],[3,"Pallet"],[4,"Event"],[4,"Call"],[6,"ClassHashWrapper"],[6,"CompiledClassHashWrapper"],[4,"Option"],[6,"OriginFor"],[6,"DispatchResult"],[3,"CrateVersion"],[3,"DeclareTransaction"],[4,"Error"],[3,"DeployAccountTransaction"],[6,"DispatchResultWithPostInfo"],[3,"CallInfo"],[3,"EventWrapper"],[15,"u128"],[3,"DispatchInfo"],[6,"StorageKeyWrapper"],[3,"PalletInfoData"],[3,"InvokeTransaction"],[6,"NonceWrapper"],[3,"StorageVersion"],[3,"Weight"],[6,"MaxTransactions"],[3,"BoundedVec"],[4,"TransactionValidityError"],[6,"ContractStorageKeyWrapper"],[3,"StorageInfo"],[3,"Type"],[4,"TransactionSource"],[6,"TransactionValidity"],[3,"TrackedStorageKey"],[3,"PostDispatchInfo"],[3,"DispatchErrorWithPostInfo"],[4,"ApiError"],[4,"ExecutionContext"],[4,"StarknetTransactionExecutionError"],[4,"TxType"],[4,"Hasher"],[6,"StorageKeyWrapper"],[4,"RawOrigin"],[8,"Into"],[8,"From"],[3,"DeployAccountTransactionOutput"],[4,"Error"],[3,"Utf8Error"],[3,"Error"],[3,"Error"],[8,"Error"],[13,"Path"],[13,"set_sequencer_address"],[13,"invoke"],[13,"declare"],[13,"deploy_account"],[13,"consume_l1_message"],[13,"FeeTokenAddressChanged"],[3,"Pending"],[3,"PendingEvents"],[3,"BlockHash"],[3,"ContractClassHashes"],[3,"ContractClasses"],[3,"CompiledClassHashes"],[3,"Nonces"],[3,"StorageView"],[3,"LastKnownEthBlock"],[3,"FeeTokenAddress"],[3,"SequencerAddress"],[3,"SeqAddrUpdate"],[8,"StarknetRuntimeApi"],[8,"ConvertTransactionRuntimeApi"],[3,"EnsureStarknetTransaction"],[3,"BuildTransferInvokeTransaction"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
